2025-08-22 14:04:27,552 p=109680 u=admviana n=ansible | ERROR! The vault password file /home/admviana/zabbix_k8s/ansible/.vault_pass was not found
2025-08-22 14:13:20,681 p=112228 u=admviana n=ansible | ERROR! The vault password file /home/admviana/zabbix_k8s/ansible/.vault_pass was not found
2025-08-22 14:14:14,740 p=112456 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 14:14:20,533 p=112519 u=admviana n=ansible | ERROR! Empty playbook, nothing to do
2025-08-22 14:15:05,311 p=112766 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 14:15:09,310 p=112794 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 14:15:09,361 p=112794 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 14:15:09,362 p=112794 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 14:15:09,386 p=112794 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 14:15:10,403 p=112794 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 14:15:10,403 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:15:10,823 p=112794 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 14:15:10,823 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:15:11,611 p=112794 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 14:15:11,612 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:15:12,443 p=112794 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 14:15:12,444 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:15:13,285 p=112794 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 14:15:13,285 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:15:13,315 p=112794 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 14:15:13,316 p=112794 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 14:15:13,338 p=112794 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 14:15:14,571 p=112794 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 14:15:14,572 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:16:01,908 p=112794 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL to be ready] ***************************************
2025-08-22 14:16:01,908 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:16:02,342 p=112794 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL deployment] ******************************************
2025-08-22 14:16:02,342 p=112794 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:16:02,376 p=112794 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-22 14:16:02,377 p=112794 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi"
    ]
}
2025-08-22 14:16:02,407 p=112794 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-22 14:16:03,323 p=112794 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-22 14:16:03,324 p=112794 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"changed": true, "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: zabbix-server-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server-data\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix\n  resources:\n    requests:\n      storage: 10Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\n    version: \"7.0\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: zabbix-server\n  template:\n    metadata:\n      labels:\n        app: zabbix-server\n        component: server\n        version: \"7.0\"\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"10051\"\n    spec:\n      initContainers:\n      - name: wait-for-database\n        image: postgres:15-alpine\n        command:\n        - sh\n        - -c\n        - |\n          echo \"🔍 Aguardando PostgreSQL ficar disponível...\"\n          until pg_isready -h postgresql-service -p 5432 -U zabbix; do\n            echo \"⏳ Aguardando database... ($(date))\"\n            sleep 5\n          done\n          echo \"✅ Database disponível!\"\n        env:\n        - name: PGUSER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n      containers:\n      - name: zabbix-server\n        image: zabbix/zabbix-server-pgsql:7.0-ubuntu-latest\n        ports:\n        - containerPort: 10051\n          name: zabbix-server\n          protocol: TCP\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Core Zabbix Configuration\n        - name: ZBX_LISTENPORT\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_LISTENPORT\n        - name: ZBX_DEBUGLEVEL\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_DEBUGLEVEL\n        # Performance Configuration (Corporate Optimized)\n        - name: ZBX_CACHESIZE\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_CACHESIZE\n        - name: ZBX_HISTORYCACHESIZE\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_HISTORYCACHESIZE\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_HISTORYINDEXCACHESIZE\n        - name: ZBX_TRENDCACHESIZE\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_TRENDCACHESIZE\n        - name: ZBX_VALUECACHESIZE\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_VALUECACHESIZE\n        # Process Configuration (High Load)\n        - name: ZBX_STARTPOLLERS\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_STARTPOLLERS\n        - name: ZBX_STARTPOLLERSUNREACHABLE\n          value: \"5\"\n        - name: ZBX_STARTTRAPPERS\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_STARTTRAPPERS\n        - name: ZBX_STARTPINGERS\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_STARTPINGERS\n        - name: ZBX_STARTDISCOVERERS\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_STARTDISCOVERERS\n        - name: ZBX_STARTHTTPPOLLERS\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_STARTHTTPPOLLERS\n        - name: ZBX_STARTTIMERS\n          value: \"1\"\n        - name: ZBX_STARTESCALATORS\n          value: \"2\"\n        - name: ZBX_STARTALERTERS\n          value: \"5\"\n        - name: ZBX_STARTDBSYNCERS\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_STARTDBSYNCERS\n        # Housekeeping Configuration\n        - name: ZBX_HOUSEKEEPINGFREQUENCY\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_HOUSEKEEPINGFREQUENCY\n        - name: ZBX_MAXHOUSEKEEPERDELETE\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_MAXHOUSEKEEPERDELETE\n        # Network and Security\n        - name: ZBX_TIMEOUT\n          valueFrom:\n            configMapKeyRef:\n              name: zabbix-config\n              key: ZBX_TIMEOUT\n        - name: ZBX_LISTENIP\n          value: \"0.0.0.0\"\n        - name: ZBX_ENABLE_SNMP_TRAPS\n          value: \"true\"\n        # Zabbix 7.0 LTS Features\n        - name: ZBX_HISTORYSTORAGETYPES\n          value: \"log,text\"\n        - name: ZBX_LOGSLOWQUERIES\n          value: \"3000\"\n        volumeMounts:\n        - name: zabbix-server-data\n          mountPath: /var/lib/zabbix\n        - name: zabbix-server-config\n          mountPath: /etc/zabbix/zabbix_server.conf\n          subPath: zabbix_server.conf\n          readOnly: true\n        resources:\n          requests:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n          limits:\n            memory: \"4Gi\"\n            cpu: \"2000m\"\n        livenessProbe:\n          tcpSocket:\n            port: 10051\n          initialDelaySeconds: 60\n          periodSeconds: 30\n          timeoutSeconds: 10\n          failureThreshold: 3\n        readinessProbe:\n          tcpSocket:\n            port: 10051\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n      volumes:\n      - name: zabbix-server-data\n        persistentVolumeClaim:\n          claimName: zabbix-server-data-pvc\n      - name: zabbix-server-config\n        configMap:\n          name: zabbix-server-config\n      nodeSelector:\n        kubernetes.io/os: linux\n            tolerations:\n            - key: \"monitoring\"\n        operator: \"Equal\"\n        value: \"true\"\n        effect: \"NoSchedule\"\n            ---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\n  annotations:\n    prometheus.io/scrape: \"true\"\n    prometheus.io/port: \"10051\"\nspec:\n  type: ClusterIP\n  ports:\n  - port: 10051\n    targetPort: 10051\n    protocol: TCP\n    name: zabbix-server\n  selector:\n    app: zabbix-server\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-server-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: config\ndata:\n  zabbix_server.conf: |\n    # Zabbix Server 7.0 LTS Configuration\n    # Corporate Environment - Optimized for 300+ hosts\n    \n    # Database Configuration\n    DBHost=postgresql-service\n    DBName=zabbix\n    DBUser=zabbix\n    DBPort=5432\n    \n    # Server Configuration\n    ListenPort=10051\n    ListenIP=0.0.0.0\n    SourceIP=\n    \n    # Logging\n    LogType=console\n    LogFileSize=1\n    DebugLevel=3\n    LogSlowQueries=3000\n    \n    # PID and Socket\n    PIDFile=/var/run/zabbix/zabbix_server.pid\n    SocketDir=/var/run/zabbix\n    \n    # Performance Tuning for Corporate Environment\n    StartPollers=25\n    StartPollersUnreachable=5\n    StartTrappers=15\n    StartPingers=8\n    StartDiscoverers=5\n    StartHTTPPollers=8\n    StartTimers=1\n    StartEscalators=2\n    StartAlerters=5\n    StartDBSyncers=6\n    \n    # Cache Configuration (Corporate Optimized)\n    CacheSize=512M\n    CacheUpdateFrequency=60\n    HistoryCacheSize=1024M\n    HistoryIndexCacheSize=512M\n    TrendCacheSize=512M\n    ValueCacheSize=1024M\n    \n    # Housekeeping\n    HousekeepingFrequency=1\n    MaxHousekeeperDelete=10000\n    \n    # Network Timeout\n    Timeout=30\n    TrapperTimeout=300\n    UnreachablePeriod=45\n    UnavailableDelay=60\n    UnreachableDelay=15\n    \n    # Data Storage\n    HistoryStorageTypes=log,text\n    HistoryStorageDateIndex=1\n    \n    # SNMP Configuration\n        SNMPTrapperFile=/var/log/snmptrap/snmptrap.log\n    StartSNMPTrapper=1\n        \n    # Security\n    AllowRoot=false\n    User=zabbix\n    \n    # VMware Monitoring (if needed)\n    StartVMwareCollectors=0\n    VMwareFrequency=60\n    VMwarePerfFrequency=60\n    VMwareCacheSize=8M\n    VMwareTimeout=10\nEOF\n", "delta": "0:00:00.577957", "end": "2025-08-22 14:16:03.283727", "msg": "non-zero return code", "rc": 1, "start": "2025-08-22 14:16:02.705770", "stderr": "error: error parsing STDIN: error converting YAML to JSON: yaml: line 218: mapping values are not allowed in this context", "stderr_lines": ["error: error parsing STDIN: error converting YAML to JSON: yaml: line 218: mapping values are not allowed in this context"], "stdout": "persistentvolumeclaim/zabbix-server-data-pvc created", "stdout_lines": ["persistentvolumeclaim/zabbix-server-data-pvc created"]}
2025-08-22 14:16:03,327 p=112794 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-22 14:16:03,327 p=112794 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-22 14:16:03,327 p=112794 u=admviana n=ansible | k8s-master                 : ok=14   changed=8    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-22 14:17:53,921 p=113574 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 14:17:57,392 p=113610 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 14:17:57,436 p=113610 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 14:17:57,438 p=113610 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 14:17:57,457 p=113610 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 14:17:58,498 p=113610 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 14:17:58,498 p=113610 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:17:58,924 p=113610 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 14:17:58,924 p=113610 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:17:59,695 p=113610 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 14:17:59,695 p=113610 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:18:00,481 p=113610 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 14:18:00,482 p=113610 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:01,264 p=113610 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 14:18:01,264 p=113610 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:18:01,294 p=113610 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 14:18:01,295 p=113610 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 14:18:01,314 p=113610 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 14:18:02,369 p=113610 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 14:18:02,370 p=113610 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:02,895 p=113610 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL to be ready] ***************************************
2025-08-22 14:18:02,896 p=113610 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:03,343 p=113610 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL deployment] ******************************************
2025-08-22 14:18:03,343 p=113610 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:03,379 p=113610 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-22 14:18:03,379 p=113610 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi"
    ]
}
2025-08-22 14:18:03,397 p=113610 u=admviana n=ansible | TASK [⚡ Deploy Zabbix Server] **************************************************
2025-08-22 14:18:03,397 p=113610 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  did not find expected key\n\nThe error appears to be in '/home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml': line 1, column 117, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n---# Zabbix Server 7.0 LTS Deployment# Corporate optimized configuration- name: \"🖥️  Deploy Zabbix Server 7.0 LTS\"  shell: |    cat << 'EOF' | {{ kubectl_path | default('/usr/local/bin/kubectl') }} apply -f -    apiVersion: v1    kind: PersistentVolumeClaim    metadata:      name: zabbix-server-data-pvc      namespace: {{ network.namespace }}      labels:        app: zabbix-server        component: server-data    spec:      accessModes:        - ReadWriteOnce      storageClassName: {{ storage.class }}-zabbix      resources:        requests:          storage: {{ storage.zabbix_server.size }}    ---    apiVersion: apps/v1    kind: Deployment    metadata:      name: zabbix-server      namespace: {{ network.namespace }}      labels:        app: zabbix-server        component: server        version: \"{{ zabbix.version }}\"    spec:      replicas: 1      strategy:        type: Recreate      selector:        matchLabels:          app: zabbix-server      template:        metadata:          labels:            app: zabbix-server            component: server            version: \"{{ zabbix.version }}\"        spec:          initContainers:          - name: wait-for-database            image: {{ database.image }}            command:            - sh            - -c            - |              echo \"🔍 Aguardando PostgreSQL ficar disponível...\"              until pg_isready -h postgresql-service -p {{ database.port }} -U {{ database.user }}; do                echo \"⏳ Aguardando database... ($(date))\"                sleep 5              done              echo \"✅ Database disponível!\"            env:            - name: PGUSER              valueFrom:                secretKeyRef:                  name: zabbix-db-secret                  key: postgres-user            - name: PGPASSWORD              valueFrom:                secretKeyRef:                  name: zabbix-db-secret                  key: postgres-password          containers:          - name: zabbix-server            image: {{ zabbix.images.server }}            ports:            - containerPort: {{ network.server.port }}              name: zabbix-server              protocol: TCP            env:            # Database Configuration            - name: DB_SERVER_HOST              value: \"postgresql-service\"            - name: DB_SERVER_PORT              value: \"{{ database.port }}\"            - name: POSTGRES_DB              valueFrom:                secretKeyRef:                  name: zabbix-db-secret                  key: postgres-database            - name: POSTGRES_USER              valueFrom:                secretKeyRef:                  name: zabbix-db-secret                  key: postgres-user            - name: POSTGRES_PASSWORD              valueFrom:                secretKeyRef:                  name: zabbix-db-secret                  key: postgres-password            # Core Zabbix Configuration            - name: ZBX_LISTENPORT              value: \"{{ network.server.port }}\"            - name: ZBX_DEBUGLEVEL              value: \"{{ zabbix_server.config.debug_level }}\"            # Performance Configuration (Corporate Optimized)            - name: ZBX_CACHESIZE              value: \"{{ zabbix_server.performance.cache_size }}\"            - name: ZBX_HISTORYCACHESIZE              value: \"{{ zabbix_server.performance.history_cache_size }}\"            - name: ZBX_HISTORYINDEXCACHESIZE              value: \"{{ zabbix_server.performance.history_index_cache_size }}\"            - name: ZBX_TRENDCACHESIZE              value: \"{{ zabbix_server.performance.trend_cache_size }}\"            - name: ZBX_VALUECACHESIZE              value: \"{{ zabbix_server.performance.value_cache_size }}\"            # Process Configuration (High Load)            - name: ZBX_STARTPOLLERS              value: \"{{ zabbix_server.performance.start_pollers }}\"            - name: ZBX_STARTPOLLERSUNREACHABLE              value: \"5\"            - name: ZBX_STARTTRAPPERS              value: \"{{ zabbix_server.performance.start_trappers }}\"            - name: ZBX_STARTPINGERS              value: \"{{ zabbix_server.performance.start_pingers }}\"            - name: ZBX_STARTDISCOVERERS              value: \"{{ zabbix_server.performance.start_discoverers }}\"            - name: ZBX_STARTHTTPPOLLERS              value: \"{{ zabbix_server.performance.start_http_pollers }}\"            - name: ZBX_STARTTIMERS              value: \"1\"            - name: ZBX_STARTESCALATORS              value: \"2\"            - name: ZBX_STARTALERTERS              value: \"5\"            - name: ZBX_STARTDBSYNCERS              value: \"{{ zabbix_server.performance.start_db_syncers }}\"            # Housekeeping Configuration            - name: ZBX_HOUSEKEEPINGFREQUENCY              value: \"{{ zabbix_server.config.housekeeping_frequency }}\"            - name: ZBX_MAXHOUSEKEEPERDELETE              value: \"{{ zabbix_server.config.max_housekeeper_delete }}\"            # Network and Security            - name: ZBX_TIMEOUT              value: \"{{ zabbix_server.config.timeout }}\"            - name: ZBX_LISTENIP              value: \"0.0.0.0\"            - name: ZBX_ENABLE_SNMP_TRAPS              value: \"true\"            # Zabbix 7.0 LTS Features            - name: ZBX_HISTORYSTORAGETYPES              value: \"log,text\"            - name: ZBX_LOGSLOWQUERIES              value: \"3000\"            volumeMounts:            - name: zabbix-server-data              mountPath: /var/lib/zabbix            resources:              requests:                memory: \"{{ resources.zabbix_server.requests.memory }}\"                cpu: \"{{ resources.zabbix_server.requests.cpu }}\"              limits:                memory: \"{{ resources.zabbix_server.limits.memory }}\"                cpu: \"{{ resources.zabbix_server.limits.cpu }}\"            livenessProbe:              tcpSocket:                port: {{ network.server.port }}              initialDelaySeconds: 60              periodSeconds: 30              timeoutSeconds: 10              failureThreshold: 3            readinessProbe:              tcpSocket:                port: {{ network.server.port }}              initialDelaySeconds: 15              periodSeconds: 10              timeoutSeconds: 5              failureThreshold: 3          volumes:          - name: zabbix-server-data            persistentVolumeClaim:              claimName: zabbix-server-data-pvc          nodeSelector:            kubernetes.io/os: linux    ---    apiVersion: v1    kind: Service    metadata:      name: zabbix-server-service      namespace: {{ network.namespace }}      labels:        app: zabbix-server        component: server    spec:      type: ClusterIP      ports:      - port: {{ network.server.port }}        targetPort: {{ network.server.port }}        protocol: TCP        name: zabbix-server      selector:        app: zabbix-server    EOF  register: zabbix_server_result  changed_when: \"'created' in zabbix_server_result.stdout or 'configured' in zabbix_server_result.stdout\"- name: \"⏳ Wait for Zabbix Server to be ready\"  shell: |    {{ kubectl_path | default('/usr/local/bin/kubectl') }} wait --for=condition=available \\      deployment/zabbix-server -n {{ network.namespace }} --timeout=600s  register: server_wait  retries: 10  delay: 30  until: server_wait.rc == 0- name: \"🔍 Verify Zabbix Server deployment\"  shell: |    {{ kubectl_path | default('/usr/local/bin/kubectl') }} get pods -l app=zabbix-server \\      -n {{ network.namespace }} -o jsonpath='{.items[0].status.phase}'  register: server_status  until: server_status.stdout == \"Running\"  retries: 15  delay: 20- name: \"✅ Zabbix Server 7.0 LTS deployed successfully\"  debug:    msg:      - \"Zabbix Server Status: {{ server_status.stdout }} ✅\"      - \"Version: {{ zabbix.version }}\"      - \"Service: zabbix-server-service.{{ network.namespace }}.svc.cluster.local\"      - \"Port: {{ network.server.port }}\"      - \"Storage: {{ storage.zabbix_server.size }}\"\n                                                                                                                    ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes. Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2025-08-22 14:18:03,399 p=113610 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-22 14:18:03,399 p=113610 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-22 14:18:03,400 p=113610 u=admviana n=ansible | k8s-master                 : ok=13   changed=5    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-22 14:18:44,782 p=113914 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 14:18:49,293 p=113942 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 14:18:49,341 p=113942 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 14:18:49,342 p=113942 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 14:18:49,361 p=113942 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 14:18:50,283 p=113942 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 14:18:50,283 p=113942 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:18:50,707 p=113942 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 14:18:50,707 p=113942 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:51,498 p=113942 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 14:18:51,498 p=113942 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:18:52,309 p=113942 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 14:18:52,309 p=113942 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:53,123 p=113942 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 14:18:53,123 p=113942 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:18:53,151 p=113942 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 14:18:53,152 p=113942 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 14:18:53,176 p=113942 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 14:18:54,296 p=113942 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 14:18:54,297 p=113942 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:54,814 p=113942 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL to be ready] ***************************************
2025-08-22 14:18:54,814 p=113942 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:55,237 p=113942 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL deployment] ******************************************
2025-08-22 14:18:55,238 p=113942 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:18:55,269 p=113942 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-22 14:18:55,270 p=113942 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi"
    ]
}
2025-08-22 14:18:55,289 p=113942 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-22 14:18:56,222 p=113942 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-22 14:18:56,222 p=113942 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:09,454 p=113942 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-22 14:19:09,455 p=113942 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:09,468 p=113942 u=admviana n=ansible | TASK [✅ Zabbix Server deployed successfully] ***********************************
2025-08-22 14:19:09,469 p=113942 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "Zabbix Server Status: Running ✅"
}
2025-08-22 14:19:09,487 p=113942 u=admviana n=ansible | TASK [🌐 Deploy Zabbix Web Interface] *******************************************
2025-08-22 14:19:09,487 p=113942 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"reason": "We were unable to read either as JSON nor YAML, these are the errors we got from each:\nJSON: Expecting value: line 1 column 1 (char 0)\n\nSyntax Error while loading YAML.\n  found character that cannot start any token\n\nThe error appears to be in '/home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-web.yml': line 300, column 2, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n{% if network.ingress.enabled %}\n ^ here\n"}
2025-08-22 14:19:09,490 p=113942 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-22 14:19:09,491 p=113942 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-22 14:19:09,491 p=113942 u=admviana n=ansible | k8s-master                 : ok=17   changed=7    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-22 14:19:39,887 p=114292 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 14:19:42,465 p=114318 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 14:19:42,506 p=114318 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 14:19:42,508 p=114318 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 14:19:42,528 p=114318 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 14:19:43,775 p=114318 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 14:19:43,776 p=114318 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:19:44,438 p=114318 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 14:19:44,438 p=114318 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:45,346 p=114318 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 14:19:45,347 p=114318 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:19:46,147 p=114318 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 14:19:46,147 p=114318 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:46,969 p=114318 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 14:19:46,969 p=114318 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:19:46,998 p=114318 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 14:19:46,999 p=114318 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 14:19:47,021 p=114318 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 14:19:48,063 p=114318 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 14:19:48,063 p=114318 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:48,565 p=114318 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL to be ready] ***************************************
2025-08-22 14:19:48,565 p=114318 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:48,978 p=114318 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL deployment] ******************************************
2025-08-22 14:19:48,979 p=114318 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:49,014 p=114318 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-22 14:19:49,014 p=114318 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi"
    ]
}
2025-08-22 14:19:49,033 p=114318 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-22 14:19:49,928 p=114318 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-22 14:19:49,928 p=114318 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:50,447 p=114318 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-22 14:19:50,447 p=114318 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:19:50,461 p=114318 u=admviana n=ansible | TASK [✅ Zabbix Server deployed successfully] ***********************************
2025-08-22 14:19:50,462 p=114318 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "Zabbix Server Status: Running ✅"
}
2025-08-22 14:19:50,503 p=114318 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/monitoring.yml for k8s-master
2025-08-22 14:19:51,622 p=114318 u=admviana n=ansible | TASK [📊 Configure Prometheus ServiceMonitor] ***********************************
2025-08-22 14:19:51,623 p=114318 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"changed": false, "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: zabbix-server-monitor\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: monitoring\nspec:\n  selector:\n    matchLabels:\n      app: zabbix-server\n  endpoints:\n  - port: zabbix-server\n    interval: 30s\n    path: /metrics\n    honorLabels: true\n---\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: zabbix-web-monitor\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\n    component: monitoring\nspec:\n  selector:\n    matchLabels:\n      app: zabbix-web\n  endpoints:\n  - port: http\n    interval: 30s\n    path: /metrics\n    honorLabels: true\n---\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: postgresql-monitor\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: monitoring\nspec:\n  selector:\n    matchLabels:\n      app: postgresql\n  endpoints:\n  - port: postgres\n    interval: 30s\n    honorLabels: true\nEOF\n", "delta": "0:00:00.809858", "end": "2025-08-22 14:19:51.598203", "msg": "non-zero return code", "rc": 1, "start": "2025-08-22 14:19:50.788345", "stderr": "resource mapping not found for name: \"zabbix-server-monitor\" namespace: \"zabbix-monitoring\" from \"STDIN\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\"\nensure CRDs are installed first\nresource mapping not found for name: \"zabbix-web-monitor\" namespace: \"zabbix-monitoring\" from \"STDIN\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\"\nensure CRDs are installed first\nresource mapping not found for name: \"postgresql-monitor\" namespace: \"zabbix-monitoring\" from \"STDIN\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\"\nensure CRDs are installed first", "stderr_lines": ["resource mapping not found for name: \"zabbix-server-monitor\" namespace: \"zabbix-monitoring\" from \"STDIN\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\"", "ensure CRDs are installed first", "resource mapping not found for name: \"zabbix-web-monitor\" namespace: \"zabbix-monitoring\" from \"STDIN\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\"", "ensure CRDs are installed first", "resource mapping not found for name: \"postgresql-monitor\" namespace: \"zabbix-monitoring\" from \"STDIN\": no matches for kind \"ServiceMonitor\" in version \"monitoring.coreos.com/v1\"", "ensure CRDs are installed first"], "stdout": "", "stdout_lines": []}
2025-08-22 14:19:51,625 p=114318 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-22 14:19:51,625 p=114318 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-22 14:19:51,626 p=114318 u=admviana n=ansible | k8s-master                 : ok=18   changed=7    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-22 14:20:29,112 p=114581 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 14:20:31,610 p=114605 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 14:20:31,651 p=114605 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 14:20:31,652 p=114605 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 14:20:31,672 p=114605 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 14:20:32,738 p=114605 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 14:20:32,739 p=114605 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:20:33,174 p=114605 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 14:20:33,175 p=114605 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:20:33,978 p=114605 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 14:20:33,979 p=114605 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:20:34,832 p=114605 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 14:20:34,832 p=114605 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:20:35,647 p=114605 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 14:20:35,647 p=114605 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:20:35,679 p=114605 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 14:20:35,680 p=114605 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 14:20:35,703 p=114605 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 14:20:36,778 p=114605 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 14:20:36,779 p=114605 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:20:37,301 p=114605 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL to be ready] ***************************************
2025-08-22 14:20:37,301 p=114605 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:20:37,715 p=114605 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL deployment] ******************************************
2025-08-22 14:20:37,715 p=114605 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:20:37,746 p=114605 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-22 14:20:37,747 p=114605 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi"
    ]
}
2025-08-22 14:20:37,766 p=114605 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-22 14:20:38,650 p=114605 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-22 14:20:38,650 p=114605 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:20:39,166 p=114605 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-22 14:20:39,166 p=114605 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:20:39,183 p=114605 u=admviana n=ansible | TASK [✅ Zabbix Server deployed successfully] ***********************************
2025-08-22 14:20:39,184 p=114605 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "Zabbix Server Status: Running ✅"
}
2025-08-22 14:20:39,258 p=114605 u=admviana n=ansible | TASK [🎉 Deployment completed successfully] *************************************
2025-08-22 14:20:39,258 p=114605 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "✅ Zabbix 7.0 LTS deployed successfully!",
        "🌐 Web Interface: http://172.17.176.34:30080",
        "🔐 HTTPS: https://172.17.176.34:30443",
        "👤 Default Login: Admin / zabbix",
        "📊 Database: PostgreSQL 15-alpine",
        "💾 Storage: 20Gi",
        "",
        "🚀 Ready for corporate monitoring!"
    ]
}
2025-08-22 14:20:39,263 p=114605 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-22 14:20:39,263 p=114605 u=admviana n=ansible | k8s-master                 : ok=18   changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-08-22 14:57:10,394 p=128542 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 14:57:10,974 p=128567 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 14:57:11,017 p=128567 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 14:57:11,019 p=128567 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 14:57:11,038 p=128567 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 14:57:12,029 p=128567 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 14:57:12,029 p=128567 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:57:12,453 p=128567 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 14:57:12,454 p=128567 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:57:13,283 p=128567 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 14:57:13,283 p=128567 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 14:57:14,143 p=128567 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 14:57:14,144 p=128567 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:57:15,096 p=128567 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 14:57:15,096 p=128567 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 14:57:15,129 p=128567 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 14:57:15,129 p=128567 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 14:57:15,152 p=128567 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 14:57:16,358 p=128567 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 14:57:16,358 p=128567 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:08:05,907 p=128567 u=admviana n=ansible |  [ERROR]: User interrupted execution

2025-08-22 15:21:46,752 p=137337 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 15:21:49,738 p=137466 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 15:21:49,777 p=137466 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 15:21:49,777 p=137466 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 15:21:49,797 p=137466 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 15:21:50,753 p=137466 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 15:21:50,753 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:21:51,175 p=137466 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 15:21:51,175 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:21:51,960 p=137466 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 15:21:51,960 p=137466 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 15:21:52,748 p=137466 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 15:21:52,748 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:21:53,606 p=137466 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 15:21:53,606 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:21:53,630 p=137466 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 15:21:53,631 p=137466 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 15:21:53,652 p=137466 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 15:21:54,896 p=137466 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 15:21:54,897 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:22:25,513 p=137466 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL to be ready] ***************************************
2025-08-22 15:22:25,513 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:22:25,931 p=137466 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL deployment] ******************************************
2025-08-22 15:22:25,932 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:22:25,965 p=137466 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-22 15:22:25,966 p=137466 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi"
    ]
}
2025-08-22 15:22:25,984 p=137466 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-22 15:22:26,899 p=137466 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-22 15:22:26,899 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:22:28,255 p=137466 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-22 15:22:28,255 p=137466 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:22:28,268 p=137466 u=admviana n=ansible | TASK [✅ Zabbix Server deployed successfully] ***********************************
2025-08-22 15:22:28,268 p=137466 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "Zabbix Server Status: Running ✅"
}
2025-08-22 15:22:28,347 p=137466 u=admviana n=ansible | TASK [🎉 Deployment completed successfully] *************************************
2025-08-22 15:22:28,348 p=137466 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "✅ Zabbix 7.0 LTS deployed successfully!",
        "🌐 Web Interface: http://172.17.176.34:30080",
        "🔐 HTTPS: https://172.17.176.34:30443",
        "👤 Default Login: Admin / zabbix",
        "📊 Database: PostgreSQL 15-alpine",
        "💾 Storage: 20Gi",
        "",
        "🚀 Ready for corporate monitoring!"
    ]
}
2025-08-22 15:22:28,352 p=137466 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-22 15:22:28,353 p=137466 u=admviana n=ansible | k8s-master                 : ok=18   changed=9    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-08-22 15:28:39,832 p=140395 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 15:28:42,851 p=140446 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 15:28:42,886 p=140446 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 15:28:42,887 p=140446 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 15:28:42,908 p=140446 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 15:28:43,905 p=140446 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 15:28:43,905 p=140446 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:28:44,354 p=140446 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 15:28:44,355 p=140446 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:28:45,137 p=140446 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 15:28:45,138 p=140446 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 15:28:46,029 p=140446 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 15:28:46,030 p=140446 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:28:46,879 p=140446 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 15:28:46,879 p=140446 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 15:28:46,905 p=140446 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 15:28:46,906 p=140446 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 15:28:46,926 p=140446 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 15:28:48,090 p=140446 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 15:28:48,091 p=140446 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:05:55,976 p=152661 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 16:05:58,918 p=152697 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 16:05:58,955 p=152697 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 16:05:58,956 p=152697 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 16:05:58,974 p=152697 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 16:05:59,958 p=152697 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 16:05:59,958 p=152697 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 16:06:00,377 p=152697 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 16:06:00,377 p=152697 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:06:01,158 p=152697 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 16:06:01,158 p=152697 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 16:06:01,988 p=152697 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 16:06:01,988 p=152697 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:06:02,830 p=152697 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 16:06:02,830 p=152697 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:06:02,854 p=152697 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 16:06:02,855 p=152697 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 16:06:02,877 p=152697 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 16:06:04,120 p=152697 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 16:06:04,120 p=152697 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:11:11,837 p=152697 u=admviana n=ansible |  [ERROR]: User interrupted execution

2025-08-22 16:44:16,228 p=168365 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 16:44:20,338 p=168408 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 16:44:20,379 p=168408 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 16:44:20,380 p=168408 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 16:44:20,397 p=168408 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 16:44:21,532 p=168408 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 16:44:21,532 p=168408 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:44:21,952 p=168408 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 16:44:21,952 p=168408 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:44:22,730 p=168408 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 16:44:22,730 p=168408 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 16:44:23,582 p=168408 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 16:44:23,582 p=168408 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:44:24,466 p=168408 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 16:44:24,466 p=168408 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:44:24,495 p=168408 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 16:44:24,496 p=168408 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 16:44:24,514 p=168408 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 16:44:25,573 p=168408 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 16:44:25,573 p=168408 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:55:38,757 p=172784 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 16:55:41,772 p=172837 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 16:55:41,812 p=172837 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 16:55:41,813 p=172837 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 16:55:41,830 p=172837 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 16:55:42,771 p=172837 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 16:55:42,772 p=172837 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:55:43,230 p=172837 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 16:55:43,230 p=172837 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:55:44,059 p=172837 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 16:55:44,059 p=172837 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 16:55:44,889 p=172837 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 16:55:44,890 p=172837 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:55:45,728 p=172837 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 16:55:45,728 p=172837 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 16:55:45,757 p=172837 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 16:55:45,758 p=172837 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 16:55:45,778 p=172837 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 16:55:46,869 p=172837 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 16:55:46,869 p=172837 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 17:03:24,208 p=176207 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-22 17:03:27,149 p=176271 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-22 17:03:27,189 p=176271 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-22 17:03:27,189 p=176271 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-22 17:03:27,206 p=176271 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-22 17:03:28,138 p=176271 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-22 17:03:28,138 p=176271 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 17:03:28,569 p=176271 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-22 17:03:28,569 p=176271 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 17:03:29,358 p=176271 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-22 17:03:29,358 p=176271 u=admviana n=ansible | ok: [k8s-master]
2025-08-22 17:03:30,156 p=176271 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-22 17:03:30,156 p=176271 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 17:03:30,955 p=176271 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-22 17:03:30,955 p=176271 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 17:03:30,985 p=176271 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-22 17:03:30,986 p=176271 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-22 17:03:31,005 p=176271 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-22 17:03:31,976 p=176271 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-22 17:03:31,977 p=176271 u=admviana n=ansible | changed: [k8s-master]
2025-08-22 17:24:03,554 p=176271 u=admviana n=ansible | TASK [⏳ Wait for PVC to be bound] **********************************************
2025-08-22 17:24:03,555 p=176271 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"attempts": 3, "changed": true, "cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=300s\n", "delta": "0:05:00.101545", "end": "2025-08-22 17:24:03.526563", "msg": "non-zero return code", "rc": 1, "start": "2025-08-22 17:19:03.425018", "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc", "stderr_lines": ["error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc"], "stdout": "", "stdout_lines": []}
2025-08-22 17:24:03,556 p=176271 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-22 17:24:03,556 p=176271 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-22 17:24:03,556 p=176271 u=admviana n=ansible | k8s-master                 : ok=10   changed=5    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-25 08:50:26,048 p=972872 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 08:50:26,086 p=972872 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 08:50:26,087 p=972872 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-25 08:50:26,106 p=972872 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 08:50:27,267 p=972872 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 08:50:27,267 p=972872 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 08:50:27,706 p=972872 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 08:50:27,706 p=972872 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 08:50:28,535 p=972872 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 08:50:28,535 p=972872 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 08:50:29,353 p=972872 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 08:50:29,354 p=972872 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 08:50:30,183 p=972872 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 08:50:30,184 p=972872 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 08:50:30,211 p=972872 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 08:50:30,212 p=972872 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-25 08:50:30,232 p=972872 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 08:50:31,232 p=972872 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 08:50:31,233 p=972872 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 09:00:40,922 p=977345 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 09:00:43,799 p=977370 u=admviana n=ansible | ansible-playbook 2.10.8
  config file = /home/admviana/zabbix_k8s/ansible/ansible.cfg
  configured module search path = ['/home/admviana/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Aug 15 2025, 14:32:43) [GCC 11.4.0]
2025-08-25 09:00:43,799 p=977370 u=admviana n=ansible | Using /home/admviana/zabbix_k8s/ansible/ansible.cfg as config file
2025-08-25 09:00:43,804 p=977370 u=admviana n=ansible | Parsed /home/admviana/zabbix_k8s/ansible/inventories/production/hosts.yml inventory source with yaml plugin
2025-08-25 09:00:43,935 p=977370 u=admviana n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-08-25 09:00:43,936 p=977370 u=admviana n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-08-25 09:00:43,936 p=977370 u=admviana n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-08-25 09:00:43,936 p=977370 u=admviana n=ansible | PLAYBOOK: deploy-zabbix.yml ****************************************************
2025-08-25 09:00:43,936 p=977370 u=admviana n=ansible | 1 plays in playbooks/deploy-zabbix.yml
2025-08-25 09:00:43,937 p=977370 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 09:00:43,946 p=977370 u=admviana n=ansible | META: ran handlers
2025-08-25 09:00:43,977 p=977370 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 09:00:43,978 p=977370 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-25 09:00:43,995 p=977370 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 09:00:44,115 p=977376 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:00:44,116 p=977376 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:00:44,116 p=977376 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:00:44,116 p=977376 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:00:44,956 p=977376 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "namespace/zabbix-monitoring configured", "stderr": "", "rc": 0, "start": "2025-08-25 09:00:44.358218", "end": "2025-08-25 09:00:44.932852", "delta": "0:00:00.574634", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:00:44,961 p=977370 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 09:00:44,962 p=977370 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.574634",
    "end": "2025-08-25 09:00:44.932852",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:00:44.358218",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring configured",
    "stdout_lines": [
        "namespace/zabbix-monitoring configured"
    ]
}
2025-08-25 09:00:44,994 p=977393 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:00:44,994 p=977393 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:00:44,994 p=977393 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:00:44,995 p=977393 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:00:45,404 p=977393 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "stdout": "namespace/zabbix-monitoring not labeled", "stderr": "", "rc": 0, "start": "2025-08-25 09:00:45.241740", "end": "2025-08-25 09:00:45.376595", "delta": "0:00:00.134855", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:00:45,406 p=977370 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 09:00:45,407 p=977370 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
    "delta": "0:00:00.134855",
    "end": "2025-08-25 09:00:45.376595",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:00:45.241740",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring not labeled",
    "stdout_lines": [
        "namespace/zabbix-monitoring not labeled"
    ]
}
2025-08-25 09:00:45,435 p=977397 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:00:45,435 p=977397 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:00:45,435 p=977397 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:00:45,436 p=977397 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:00:46,200 p=977397 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:00:45.690613", "end": "2025-08-25 09:00:46.175453", "delta": "0:00:00.484840", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:00:46,205 p=977370 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 09:00:46,206 p=977370 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
    "delta": "0:00:00.484840",
    "end": "2025-08-25 09:00:46.175453",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:00:45.690613",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged",
    "stdout_lines": [
        "storageclass.storage.k8s.io/longhorn-zabbix unchanged",
        "storageclass.storage.k8s.io/longhorn-zabbix-db unchanged"
    ]
}
2025-08-25 09:00:46,234 p=977410 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:00:46,234 p=977410 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:00:46,234 p=977410 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:00:46,235 p=977410 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:00:47,077 p=977410 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "secret/zabbix-db-secret configured", "stderr": "", "rc": 0, "start": "2025-08-25 09:00:46.484120", "end": "2025-08-25 09:00:47.053950", "delta": "0:00:00.569830", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:00:47,082 p=977370 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 09:00:47,083 p=977370 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.569830",
    "end": "2025-08-25 09:00:47.053950",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:00:46.484120",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/zabbix-db-secret configured",
    "stdout_lines": [
        "secret/zabbix-db-secret configured"
    ]
}
2025-08-25 09:00:47,114 p=977429 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:00:47,114 p=977429 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:00:47,115 p=977429 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:00:47,115 p=977429 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:00:47,894 p=977429 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "stdout": "configmap/zabbix-config unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:00:47.363047", "end": "2025-08-25 09:00:47.871362", "delta": "0:00:00.508315", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:00:47,900 p=977370 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 09:00:47,901 p=977370 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
    "delta": "0:00:00.508315",
    "end": "2025-08-25 09:00:47.871362",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:00:47.363047",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "configmap/zabbix-config unchanged",
    "stdout_lines": [
        "configmap/zabbix-config unchanged"
    ]
}
2025-08-25 09:00:47,930 p=977370 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 09:00:47,931 p=977370 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-25 09:00:47,953 p=977370 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 09:00:47,986 p=977446 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:00:47,986 p=977446 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:00:47,986 p=977446 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:00:47,987 p=977446 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:00:48,897 p=977446 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "stdout": "persistentvolumeclaim/postgresql-data-pvc unchanged\\ndeployment.apps/postgresql configured\\nservice/postgresql-service unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:00:48.216062", "end": "2025-08-25 09:00:48.872081", "delta": "0:00:00.656019", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:00:48,902 p=977370 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 09:00:48,903 p=977370 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
    "delta": "0:00:00.656019",
    "end": "2025-08-25 09:00:48.872081",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:00:48.216062",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "persistentvolumeclaim/postgresql-data-pvc unchanged\ndeployment.apps/postgresql configured\nservice/postgresql-service unchanged",
    "stdout_lines": [
        "persistentvolumeclaim/postgresql-data-pvc unchanged",
        "deployment.apps/postgresql configured",
        "service/postgresql-service unchanged"
    ]
}
2025-08-25 09:00:48,936 p=977451 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:00:48,937 p=977451 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:00:48,937 p=977451 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:00:48,937 p=977451 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:05:49,294 p=977451 u=admviana n=ansible | <172.17.176.34> (1, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=300s\\n", "stdout": "", "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc", "rc": 1, "start": "2025-08-25 09:00:49.171023", "end": "2025-08-25 09:05:49.266042", "delta": "0:05:00.095019", "changed": true, "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=300s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:05:49,295 p=977451 u=admviana n=ansible | <172.17.176.34> Failed to connect to the host via ssh: 
2025-08-25 09:05:59,308 p=977451 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:05:59,308 p=977451 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:05:59,308 p=977451 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:05:59,309 p=977451 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:12:54,797 p=982745 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 09:14:11,044 p=983090 u=admviana n=ansible | ansible-playbook 2.10.8
  config file = /home/admviana/zabbix_k8s/ansible/ansible.cfg
  configured module search path = ['/home/admviana/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Aug 15 2025, 14:32:43) [GCC 11.4.0]
2025-08-25 09:14:11,044 p=983090 u=admviana n=ansible | Using /home/admviana/zabbix_k8s/ansible/ansible.cfg as config file
2025-08-25 09:14:11,049 p=983090 u=admviana n=ansible | Parsed /home/admviana/zabbix_k8s/ansible/inventories/production/hosts.yml inventory source with yaml plugin
2025-08-25 09:14:11,185 p=983090 u=admviana n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-08-25 09:14:11,185 p=983090 u=admviana n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-08-25 09:14:11,185 p=983090 u=admviana n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-08-25 09:14:11,186 p=983090 u=admviana n=ansible | PLAYBOOK: deploy-zabbix.yml ****************************************************
2025-08-25 09:14:11,186 p=983090 u=admviana n=ansible | 1 plays in playbooks/deploy-zabbix.yml
2025-08-25 09:14:11,187 p=983090 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 09:14:11,196 p=983090 u=admviana n=ansible | META: ran handlers
2025-08-25 09:14:11,225 p=983090 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 09:14:11,226 p=983090 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-25 09:14:11,247 p=983090 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 09:14:11,375 p=983096 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:11,375 p=983096 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:11,375 p=983096 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:11,376 p=983096 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:14:12,976 p=983096 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "namespace/zabbix-monitoring created", "stderr": "", "rc": 0, "start": "2025-08-25 09:14:12.405958", "end": "2025-08-25 09:14:12.940947", "delta": "0:00:00.534989", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:14:12,980 p=983090 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 09:14:12,981 p=983090 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.534989",
    "end": "2025-08-25 09:14:12.940947",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:14:12.405958",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring created",
    "stdout_lines": [
        "namespace/zabbix-monitoring created"
    ]
}
2025-08-25 09:14:13,014 p=983129 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:13,014 p=983129 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:13,014 p=983129 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:13,015 p=983129 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:14:13,419 p=983129 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "stdout": "namespace/zabbix-monitoring labeled", "stderr": "", "rc": 0, "start": "2025-08-25 09:14:13.264503", "end": "2025-08-25 09:14:13.398158", "delta": "0:00:00.133655", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:14:13,422 p=983090 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 09:14:13,423 p=983090 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
    "delta": "0:00:00.133655",
    "end": "2025-08-25 09:14:13.398158",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:14:13.264503",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring labeled",
    "stdout_lines": [
        "namespace/zabbix-monitoring labeled"
    ]
}
2025-08-25 09:14:13,451 p=983133 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:13,451 p=983133 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:13,451 p=983133 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:13,452 p=983133 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:14:14,204 p=983133 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:14:13.692724", "end": "2025-08-25 09:14:14.183907", "delta": "0:00:00.491183", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:14:14,210 p=983090 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 09:14:14,211 p=983090 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
    "delta": "0:00:00.491183",
    "end": "2025-08-25 09:14:14.183907",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:14:13.692724",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged",
    "stdout_lines": [
        "storageclass.storage.k8s.io/longhorn-zabbix unchanged",
        "storageclass.storage.k8s.io/longhorn-zabbix-db unchanged"
    ]
}
2025-08-25 09:14:14,240 p=983136 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:14,240 p=983136 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:14,240 p=983136 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:14,241 p=983136 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:14:15,041 p=983136 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "secret/zabbix-db-secret created", "stderr": "", "rc": 0, "start": "2025-08-25 09:14:14.488291", "end": "2025-08-25 09:14:15.020400", "delta": "0:00:00.532109", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:14:15,046 p=983090 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 09:14:15,046 p=983090 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.532109",
    "end": "2025-08-25 09:14:15.020400",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:14:14.488291",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/zabbix-db-secret created",
    "stdout_lines": [
        "secret/zabbix-db-secret created"
    ]
}
2025-08-25 09:14:15,079 p=983141 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:15,079 p=983141 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:15,079 p=983141 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:15,080 p=983141 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:14:15,881 p=983141 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "stdout": "configmap/zabbix-config created", "stderr": "", "rc": 0, "start": "2025-08-25 09:14:15.332653", "end": "2025-08-25 09:14:15.858451", "delta": "0:00:00.525798", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:14:15,886 p=983090 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 09:14:15,886 p=983090 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
    "delta": "0:00:00.525798",
    "end": "2025-08-25 09:14:15.858451",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:14:15.332653",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "configmap/zabbix-config created",
    "stdout_lines": [
        "configmap/zabbix-config created"
    ]
}
2025-08-25 09:14:15,918 p=983090 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 09:14:15,919 p=983090 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-25 09:14:15,944 p=983090 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 09:14:15,983 p=983150 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:15,983 p=983150 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:15,983 p=983150 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:15,984 p=983150 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:14:17,095 p=983150 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "stdout": "persistentvolumeclaim/postgresql-data-pvc created\\ndeployment.apps/postgresql created\\nservice/postgresql-service created", "stderr": "", "rc": 0, "start": "2025-08-25 09:14:16.217428", "end": "2025-08-25 09:14:17.059720", "delta": "0:00:00.842292", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:14:17,099 p=983090 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 09:14:17,100 p=983090 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
    "delta": "0:00:00.842292",
    "end": "2025-08-25 09:14:17.059720",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:14:16.217428",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "persistentvolumeclaim/postgresql-data-pvc created\ndeployment.apps/postgresql created\nservice/postgresql-service created",
    "stdout_lines": [
        "persistentvolumeclaim/postgresql-data-pvc created",
        "deployment.apps/postgresql created",
        "service/postgresql-service created"
    ]
}
2025-08-25 09:14:17,132 p=983167 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:17,132 p=983167 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:17,133 p=983167 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:17,133 p=983167 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:14:17,584 p=983167 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath=\'{.status.phase}\'\\n", "stdout": "Pending", "stderr": "", "rc": 0, "start": "2025-08-25 09:14:17.396456", "end": "2025-08-25 09:14:17.561541", "delta": "0:00:00.165085", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath=\'{.status.phase}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:14:17,588 p=983090 u=admviana n=ansible | TASK [🔍 Check if PVC is already bound] *****************************************
2025-08-25 09:14:17,588 p=983090 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath='{.status.phase}'\n",
    "delta": "0:00:00.165085",
    "end": "2025-08-25 09:14:17.561541",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath='{.status.phase}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:14:17.396456",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Pending",
    "stdout_lines": [
        "Pending"
    ]
}
2025-08-25 09:14:17,618 p=983172 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:14:17,618 p=983172 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:14:17,619 p=983172 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:14:17,619 p=983172 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:16:17,982 p=983172 u=admviana n=ansible | <172.17.176.34> (1, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "stdout": "", "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc", "rc": 1, "start": "2025-08-25 09:14:17.863155", "end": "2025-08-25 09:16:17.956311", "delta": "0:02:00.093156", "changed": true, "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:16:17,982 p=983172 u=admviana n=ansible | <172.17.176.34> Failed to connect to the host via ssh: 
2025-08-25 09:16:27,994 p=983172 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:16:27,995 p=983172 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:16:27,995 p=983172 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:16:27,995 p=983172 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:18:28,370 p=983172 u=admviana n=ansible | <172.17.176.34> (1, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "stdout": "", "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc", "rc": 1, "start": "2025-08-25 09:16:28.239846", "end": "2025-08-25 09:18:28.348454", "delta": "0:02:00.108608", "changed": true, "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:18:28,370 p=983172 u=admviana n=ansible | <172.17.176.34> Failed to connect to the host via ssh: 
2025-08-25 09:18:38,382 p=983172 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:18:38,382 p=983172 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:18:38,382 p=983172 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:18:38,383 p=983172 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:19:13,002 p=983090 u=admviana n=ansible |  [ERROR]: User interrupted execution

2025-08-25 09:24:19,611 p=986132 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 09:24:22,416 p=986167 u=admviana n=ansible | ansible-playbook 2.10.8
  config file = /home/admviana/zabbix_k8s/ansible/ansible.cfg
  configured module search path = ['/home/admviana/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Aug 15 2025, 14:32:43) [GCC 11.4.0]
2025-08-25 09:24:22,416 p=986167 u=admviana n=ansible | Using /home/admviana/zabbix_k8s/ansible/ansible.cfg as config file
2025-08-25 09:24:22,421 p=986167 u=admviana n=ansible | Parsed /home/admviana/zabbix_k8s/ansible/inventories/production/hosts.yml inventory source with yaml plugin
2025-08-25 09:24:22,549 p=986167 u=admviana n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-08-25 09:24:22,549 p=986167 u=admviana n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-08-25 09:24:22,549 p=986167 u=admviana n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-08-25 09:24:22,549 p=986167 u=admviana n=ansible | PLAYBOOK: deploy-zabbix.yml ****************************************************
2025-08-25 09:24:22,549 p=986167 u=admviana n=ansible | 1 plays in playbooks/deploy-zabbix.yml
2025-08-25 09:24:22,550 p=986167 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 09:24:22,559 p=986167 u=admviana n=ansible | META: ran handlers
2025-08-25 09:24:22,588 p=986167 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 09:24:22,589 p=986167 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-25 09:24:22,605 p=986167 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 09:24:22,727 p=986174 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:22,727 p=986174 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:22,727 p=986174 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:22,727 p=986174 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:24:23,559 p=986174 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "namespace/zabbix-monitoring configured", "stderr": "", "rc": 0, "start": "2025-08-25 09:24:22.978384", "end": "2025-08-25 09:24:23.534776", "delta": "0:00:00.556392", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:24:23,563 p=986167 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 09:24:23,563 p=986167 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.556392",
    "end": "2025-08-25 09:24:23.534776",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:24:22.978384",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring configured",
    "stdout_lines": [
        "namespace/zabbix-monitoring configured"
    ]
}
2025-08-25 09:24:23,589 p=986181 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:23,590 p=986181 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:23,590 p=986181 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:23,590 p=986181 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:24:23,999 p=986181 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "stdout": "namespace/zabbix-monitoring not labeled", "stderr": "", "rc": 0, "start": "2025-08-25 09:24:23.845352", "end": "2025-08-25 09:24:23.976309", "delta": "0:00:00.130957", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:24:24,001 p=986167 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 09:24:24,002 p=986167 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
    "delta": "0:00:00.130957",
    "end": "2025-08-25 09:24:23.976309",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:24:23.845352",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring not labeled",
    "stdout_lines": [
        "namespace/zabbix-monitoring not labeled"
    ]
}
2025-08-25 09:24:24,029 p=986185 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:24,030 p=986185 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:24,030 p=986185 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:24,030 p=986185 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:24:24,834 p=986185 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:24:24.266584", "end": "2025-08-25 09:24:24.810969", "delta": "0:00:00.544385", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:24:24,838 p=986167 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 09:24:24,838 p=986167 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
    "delta": "0:00:00.544385",
    "end": "2025-08-25 09:24:24.810969",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:24:24.266584",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged",
    "stdout_lines": [
        "storageclass.storage.k8s.io/longhorn-zabbix unchanged",
        "storageclass.storage.k8s.io/longhorn-zabbix-db unchanged"
    ]
}
2025-08-25 09:24:24,868 p=986295 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:24,868 p=986295 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:24,868 p=986295 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:24,869 p=986295 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:24:25,633 p=986295 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "secret/zabbix-db-secret configured", "stderr": "", "rc": 0, "start": "2025-08-25 09:24:25.098043", "end": "2025-08-25 09:24:25.611174", "delta": "0:00:00.513131", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:24:25,638 p=986167 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 09:24:25,639 p=986167 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.513131",
    "end": "2025-08-25 09:24:25.611174",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:24:25.098043",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/zabbix-db-secret configured",
    "stdout_lines": [
        "secret/zabbix-db-secret configured"
    ]
}
2025-08-25 09:24:25,669 p=986308 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:25,669 p=986308 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:25,669 p=986308 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:25,670 p=986308 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:24:26,455 p=986308 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "stdout": "configmap/zabbix-config unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:24:25.895306", "end": "2025-08-25 09:24:26.429299", "delta": "0:00:00.533993", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:24:26,461 p=986167 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 09:24:26,461 p=986167 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
    "delta": "0:00:00.533993",
    "end": "2025-08-25 09:24:26.429299",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:24:25.895306",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "configmap/zabbix-config unchanged",
    "stdout_lines": [
        "configmap/zabbix-config unchanged"
    ]
}
2025-08-25 09:24:26,491 p=986167 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 09:24:26,492 p=986167 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-25 09:24:26,512 p=986167 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 09:24:26,544 p=986316 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:26,544 p=986316 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:26,544 p=986316 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:26,544 p=986316 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:24:27,510 p=986316 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "stdout": "persistentvolumeclaim/postgresql-data-pvc created\\ndeployment.apps/postgresql configured\\nservice/postgresql-service unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:24:26.787440", "end": "2025-08-25 09:24:27.479570", "delta": "0:00:00.692130", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:24:27,516 p=986167 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 09:24:27,517 p=986167 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
    "delta": "0:00:00.692130",
    "end": "2025-08-25 09:24:27.479570",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:24:26.787440",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "persistentvolumeclaim/postgresql-data-pvc created\ndeployment.apps/postgresql configured\nservice/postgresql-service unchanged",
    "stdout_lines": [
        "persistentvolumeclaim/postgresql-data-pvc created",
        "deployment.apps/postgresql configured",
        "service/postgresql-service unchanged"
    ]
}
2025-08-25 09:24:27,548 p=986320 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:27,548 p=986320 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:27,548 p=986320 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:27,549 p=986320 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:24:28,012 p=986320 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath=\'{.status.phase}\'\\n", "stdout": "Pending", "stderr": "", "rc": 0, "start": "2025-08-25 09:24:27.834479", "end": "2025-08-25 09:24:27.989895", "delta": "0:00:00.155416", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath=\'{.status.phase}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:24:28,016 p=986167 u=admviana n=ansible | TASK [🔍 Check if PVC is already bound] *****************************************
2025-08-25 09:24:28,016 p=986167 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath='{.status.phase}'\n",
    "delta": "0:00:00.155416",
    "end": "2025-08-25 09:24:27.989895",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get pvc postgresql-data-pvc  -n zabbix-monitoring -o jsonpath='{.status.phase}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:24:27.834479",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Pending",
    "stdout_lines": [
        "Pending"
    ]
}
2025-08-25 09:24:28,049 p=986323 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:24:28,049 p=986323 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:24:28,049 p=986323 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:24:28,050 p=986323 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:26:28,407 p=986323 u=admviana n=ansible | <172.17.176.34> (1, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "stdout": "", "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc", "rc": 1, "start": "2025-08-25 09:24:28.290322", "end": "2025-08-25 09:26:28.386633", "delta": "0:02:00.096311", "changed": true, "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:26:28,407 p=986323 u=admviana n=ansible | <172.17.176.34> Failed to connect to the host via ssh: 
2025-08-25 09:26:38,420 p=986323 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:26:38,420 p=986323 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:26:38,421 p=986323 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:26:38,421 p=986323 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:28:38,780 p=986323 u=admviana n=ansible | <172.17.176.34> (1, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "stdout": "", "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc", "rc": 1, "start": "2025-08-25 09:26:38.667370", "end": "2025-08-25 09:28:38.755590", "delta": "0:02:00.088220", "changed": true, "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:28:38,780 p=986323 u=admviana n=ansible | <172.17.176.34> Failed to connect to the host via ssh: 
2025-08-25 09:28:48,793 p=986323 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:28:48,793 p=986323 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:28:48,794 p=986323 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:28:48,794 p=986323 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:30:49,172 p=986323 u=admviana n=ansible | <172.17.176.34> (1, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "stdout": "", "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc", "rc": 1, "start": "2025-08-25 09:28:49.058169", "end": "2025-08-25 09:30:49.150546", "delta": "0:02:00.092377", "changed": true, "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:30:49,172 p=986323 u=admviana n=ansible | <172.17.176.34> Failed to connect to the host via ssh: 
2025-08-25 09:30:49,175 p=986167 u=admviana n=ansible | TASK [⏳ Wait for PVC to be bound (if not already bound)] ***********************
2025-08-25 09:30:49,176 p=986167 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {
    "attempts": 2,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\n",
    "delta": "0:02:00.092377",
    "end": "2025-08-25 09:30:49.150546",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=bound  pvc/postgresql-data-pvc -n zabbix-monitoring --timeout=120s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 1,
    "start": "2025-08-25 09:28:49.058169",
    "stderr": "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc",
    "stderr_lines": [
        "error: timed out waiting for the condition on persistentvolumeclaims/postgresql-data-pvc"
    ],
    "stdout": "",
    "stdout_lines": []
}
2025-08-25 09:30:49,177 p=986167 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-25 09:30:49,177 p=986167 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 09:30:49,177 p=986167 u=admviana n=ansible | k8s-master                 : ok=11   changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-25 09:37:53,416 p=990306 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 09:37:58,273 p=990359 u=admviana n=ansible | ansible-playbook 2.10.8
  config file = /home/admviana/zabbix_k8s/ansible/ansible.cfg
  configured module search path = ['/home/admviana/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Aug 15 2025, 14:32:43) [GCC 11.4.0]
2025-08-25 09:37:58,273 p=990359 u=admviana n=ansible | Using /home/admviana/zabbix_k8s/ansible/ansible.cfg as config file
2025-08-25 09:37:58,278 p=990359 u=admviana n=ansible | Parsed /home/admviana/zabbix_k8s/ansible/inventories/production/hosts.yml inventory source with yaml plugin
2025-08-25 09:37:58,411 p=990359 u=admviana n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-08-25 09:37:58,411 p=990359 u=admviana n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-08-25 09:37:58,411 p=990359 u=admviana n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-08-25 09:37:58,411 p=990359 u=admviana n=ansible | PLAYBOOK: deploy-zabbix.yml ****************************************************
2025-08-25 09:37:58,411 p=990359 u=admviana n=ansible | 1 plays in playbooks/deploy-zabbix.yml
2025-08-25 09:37:58,412 p=990359 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 09:37:58,421 p=990359 u=admviana n=ansible | META: ran handlers
2025-08-25 09:37:58,451 p=990359 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 09:37:58,452 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-25 09:37:58,469 p=990359 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 09:37:58,595 p=990366 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:37:58,595 p=990366 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:37:58,595 p=990366 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:37:58,596 p=990366 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:37:59,435 p=990366 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "namespace/zabbix-monitoring created", "stderr": "", "rc": 0, "start": "2025-08-25 09:37:58.835114", "end": "2025-08-25 09:37:59.396141", "delta": "0:00:00.561027", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:37:59,439 p=990359 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 09:37:59,440 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.561027",
    "end": "2025-08-25 09:37:59.396141",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:37:58.835114",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring created",
    "stdout_lines": [
        "namespace/zabbix-monitoring created"
    ]
}
2025-08-25 09:37:59,477 p=990408 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:37:59,477 p=990408 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:37:59,477 p=990408 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:37:59,478 p=990408 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:37:59,873 p=990408 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "stdout": "namespace/zabbix-monitoring labeled", "stderr": "", "rc": 0, "start": "2025-08-25 09:37:59.721168", "end": "2025-08-25 09:37:59.850654", "delta": "0:00:00.129486", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:37:59,876 p=990359 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 09:37:59,877 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
    "delta": "0:00:00.129486",
    "end": "2025-08-25 09:37:59.850654",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:37:59.721168",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring labeled",
    "stdout_lines": [
        "namespace/zabbix-monitoring labeled"
    ]
}
2025-08-25 09:37:59,906 p=990411 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:37:59,907 p=990411 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:37:59,907 p=990411 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:37:59,907 p=990411 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:38:00,643 p=990411 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 09:38:00.141578", "end": "2025-08-25 09:38:00.620137", "delta": "0:00:00.478559", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:38:00,648 p=990359 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 09:38:00,649 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
    "delta": "0:00:00.478559",
    "end": "2025-08-25 09:38:00.620137",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:38:00.141578",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged",
    "stdout_lines": [
        "storageclass.storage.k8s.io/longhorn-zabbix unchanged",
        "storageclass.storage.k8s.io/longhorn-zabbix-db unchanged"
    ]
}
2025-08-25 09:38:00,679 p=990446 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:38:00,679 p=990446 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:38:00,680 p=990446 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:38:00,680 p=990446 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:38:01,466 p=990446 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "secret/zabbix-db-secret created", "stderr": "", "rc": 0, "start": "2025-08-25 09:38:00.911095", "end": "2025-08-25 09:38:01.443326", "delta": "0:00:00.532231", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:38:01,473 p=990359 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 09:38:01,474 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.532231",
    "end": "2025-08-25 09:38:01.443326",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:38:00.911095",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/zabbix-db-secret created",
    "stdout_lines": [
        "secret/zabbix-db-secret created"
    ]
}
2025-08-25 09:38:01,509 p=990452 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:38:01,509 p=990452 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:38:01,509 p=990452 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:38:01,510 p=990452 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:38:02,296 p=990452 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "stdout": "configmap/zabbix-config created", "stderr": "", "rc": 0, "start": "2025-08-25 09:38:01.747630", "end": "2025-08-25 09:38:02.270839", "delta": "0:00:00.523209", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:38:02,301 p=990359 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 09:38:02,302 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
    "delta": "0:00:00.523209",
    "end": "2025-08-25 09:38:02.270839",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:38:01.747630",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "configmap/zabbix-config created",
    "stdout_lines": [
        "configmap/zabbix-config created"
    ]
}
2025-08-25 09:38:02,328 p=990359 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 09:38:02,329 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-25 09:38:02,349 p=990359 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 09:38:02,384 p=990459 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:38:02,384 p=990459 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:38:02,384 p=990459 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:38:02,385 p=990459 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:38:03,389 p=990459 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "stdout": "persistentvolumeclaim/postgresql-data-pvc created\\ndeployment.apps/postgresql created\\nservice/postgresql-service created", "stderr": "", "rc": 0, "start": "2025-08-25 09:38:02.627671", "end": "2025-08-25 09:38:03.343488", "delta": "0:00:00.715817", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:38:03,395 p=990359 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 09:38:03,395 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
    "delta": "0:00:00.715817",
    "end": "2025-08-25 09:38:03.343488",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:38:02.627671",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "persistentvolumeclaim/postgresql-data-pvc created\ndeployment.apps/postgresql created\nservice/postgresql-service created",
    "stdout_lines": [
        "persistentvolumeclaim/postgresql-data-pvc created",
        "deployment.apps/postgresql created",
        "service/postgresql-service created"
    ]
}
2025-08-25 09:38:03,425 p=990477 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:38:03,426 p=990477 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:38:03,426 p=990477 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:38:03,426 p=990477 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:38:09,040 p=990477 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "timeout 180s bash -c \'\\n  echo \\"Waiting for PVC to be bound...\\"\\n  while true; do\\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\\"{.status.phase}\\" 2>/dev/null || echo \\"NotFound\\")\\n    echo \\"PVC Status: $STATUS\\"\\n    if [ \\"$STATUS\\" = \\"Bound\\" ]; then\\n      echo \\"\\u2705 PVC is bound!\\"\\n      exit 0\\n    elif [ \\"$STATUS\\" = \\"NotFound\\" ]; then\\n      echo \\"\\u26a0\\ufe0f  PVC not found, waiting...\\"\\n    else\\n      echo \\"\\u23f3 PVC status: $STATUS, waiting...\\"\\n    fi\\n    sleep 5\\n  done\\n\'\\n", "stdout": "Waiting for PVC to be bound...\\nPVC Status: Pending\\n\\u23f3 PVC status: Pending, waiting...\\nPVC Status: Bound\\n\\u2705 PVC is bound!", "stderr": "", "rc": 0, "start": "2025-08-25 09:38:03.684599", "end": "2025-08-25 09:38:09.017047", "delta": "0:00:05.332448", "changed": true, "invocation": {"module_args": {"_raw_params": "timeout 180s bash -c \'\\n  echo \\"Waiting for PVC to be bound...\\"\\n  while true; do\\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\\"{.status.phase}\\" 2>/dev/null || echo \\"NotFound\\")\\n    echo \\"PVC Status: $STATUS\\"\\n    if [ \\"$STATUS\\" = \\"Bound\\" ]; then\\n      echo \\"\\u2705 PVC is bound!\\"\\n      exit 0\\n    elif [ \\"$STATUS\\" = \\"NotFound\\" ]; then\\n      echo \\"\\u26a0\\ufe0f  PVC not found, waiting...\\"\\n    else\\n      echo \\"\\u23f3 PVC status: $STATUS, waiting...\\"\\n    fi\\n    sleep 5\\n  done\\n\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:38:09,043 p=990359 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 09:38:09,043 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "timeout 180s bash -c '\n  echo \"Waiting for PVC to be bound...\"\n  while true; do\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\"{.status.phase}\" 2>/dev/null || echo \"NotFound\")\n    echo \"PVC Status: $STATUS\"\n    if [ \"$STATUS\" = \"Bound\" ]; then\n      echo \"✅ PVC is bound!\"\n      exit 0\n    elif [ \"$STATUS\" = \"NotFound\" ]; then\n      echo \"⚠️  PVC not found, waiting...\"\n    else\n      echo \"⏳ PVC status: $STATUS, waiting...\"\n    fi\n    sleep 5\n  done\n'\n",
    "delta": "0:00:05.332448",
    "end": "2025-08-25 09:38:09.017047",
    "invocation": {
        "module_args": {
            "_raw_params": "timeout 180s bash -c '\n  echo \"Waiting for PVC to be bound...\"\n  while true; do\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\"{.status.phase}\" 2>/dev/null || echo \"NotFound\")\n    echo \"PVC Status: $STATUS\"\n    if [ \"$STATUS\" = \"Bound\" ]; then\n      echo \"✅ PVC is bound!\"\n      exit 0\n    elif [ \"$STATUS\" = \"NotFound\" ]; then\n      echo \"⚠️  PVC not found, waiting...\"\n    else\n      echo \"⏳ PVC status: $STATUS, waiting...\"\n    fi\n    sleep 5\n  done\n'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:38:03.684599",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Waiting for PVC to be bound...\nPVC Status: Pending\n⏳ PVC status: Pending, waiting...\nPVC Status: Bound\n✅ PVC is bound!",
    "stdout_lines": [
        "Waiting for PVC to be bound...",
        "PVC Status: Pending",
        "⏳ PVC status: Pending, waiting...",
        "PVC Status: Bound",
        "✅ PVC is bound!"
    ]
}
2025-08-25 09:38:09,057 p=990359 u=admviana n=ansible | TASK [✅ PVC status verified] ***************************************************
2025-08-25 09:38:09,058 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "PVC postgresql-data-pvc is bound and ready for use"
}
2025-08-25 09:38:09,089 p=990521 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:38:09,090 p=990521 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:38:09,090 p=990521 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:38:09,090 p=990521 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:37,260 p=990521 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\\n", "stdout": "deployment.apps/postgresql condition met", "stderr": "", "rc": 0, "start": "2025-08-25 09:38:09.322029", "end": "2025-08-25 09:40:37.231573", "delta": "0:02:27.909544", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:37,264 p=990359 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL deployment to be ready] ****************************
2025-08-25 09:40:37,265 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\n",
    "delta": "0:02:27.909544",
    "end": "2025-08-25 09:40:37.231573",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:38:09.322029",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/postgresql condition met",
    "stdout_lines": [
        "deployment.apps/postgresql condition met"
    ]
}
2025-08-25 09:40:37,296 p=991217 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:40:37,297 p=991217 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:40:37,297 p=991217 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:40:37,297 p=991217 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:37,711 p=991217 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath=\'{.items[0].status.phase}\'\\n", "stdout": "Running", "stderr": "", "rc": 0, "start": "2025-08-25 09:40:37.553389", "end": "2025-08-25 09:40:37.684987", "delta": "0:00:00.131598", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath=\'{.items[0].status.phase}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:37,715 p=990359 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL pod status] ******************************************
2025-08-25 09:40:37,716 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath='{.items[0].status.phase}'\n",
    "delta": "0:00:00.131598",
    "end": "2025-08-25 09:40:37.684987",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath='{.items[0].status.phase}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:40:37.553389",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Running",
    "stdout_lines": [
        "Running"
    ]
}
2025-08-25 09:40:37,748 p=990359 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-25 09:40:37,748 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi",
        "Volume Status: Healthy ✅"
    ]
}
2025-08-25 09:40:37,768 p=990359 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database-init.yml for k8s-master
2025-08-25 09:40:37,802 p=991226 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:40:37,802 p=991226 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:40:37,802 p=991226 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:40:37,802 p=991226 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:38,532 p=991226 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  name: zabbix-db-init\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-db-init\\n    component: database-init\\nspec:\\n  backoffLimit: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-db-init\\n        component: database-init\\n    spec:\\n      restartPolicy: Never\\n      containers:\\n      - name: zabbix-db-init\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        command:\\n        - /bin/bash\\n        - -c\\n        - |\\n          set -e\\n          echo \\"\\ud83d\\udd27 Starting Zabbix Database Schema Initialization...\\"\\n          \\n          # Wait for PostgreSQL to be ready\\n          echo \\"\\u23f3 Waiting for PostgreSQL to be ready...\\"\\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\\n            echo \\"PostgreSQL is unavailable - sleeping\\"\\n            sleep 2\\n          done\\n          echo \\"\\u2705 PostgreSQL is ready!\\"\\n          \\n          # Check if database is already initialized\\n          echo \\"\\ud83d\\udd0d Checking if database is already initialized...\\"\\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \\"SELECT COUNT(*) FROM information_schema.tables WHERE table_name=\'dbversion\';\\" | grep -q \\"1\\"; then\\n            echo \\"\\u2705 Database already initialized, skipping...\\"\\n            exit 0\\n          fi\\n          \\n          echo \\"\\ud83d\\ude80 Initializing Zabbix database schema...\\"\\n          \\n          # Initialize the database schema\\n          cd /usr/share/doc/zabbix-server-pgsql*/\\n          \\n          # Create schema\\n          echo \\"\\ud83d\\udccb Creating database schema...\\"\\n          if [ -f create.sql.gz ]; then\\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f create.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\\n          else\\n            echo \\"\\u274c Schema file not found!\\"\\n            exit 1\\n          fi\\n          \\n          # Insert initial data\\n          echo \\"\\ud83d\\udccb Inserting initial data...\\"\\n          if [ -f images.sql.gz ]; then\\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f images.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\\n          fi\\n          \\n          if [ -f data.sql.gz ]; then\\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f data.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\\n          fi\\n          \\n          echo \\"\\ud83c\\udf89 Zabbix database initialization completed successfully!\\"\\n          \\n          # Verify initialization\\n          echo \\"\\u2705 Verifying database initialization...\\"\\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \\"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\\" | tr -d \' \')\\n          echo \\"Database version: $DB_VERSION\\"\\n          \\n          if [ ! -z \\"$DB_VERSION\\" ]; then\\n            echo \\"\\u2705 Database successfully initialized with version $DB_VERSION\\"\\n          else\\n            echo \\"\\u274c Database initialization verification failed\\"\\n            exit 1\\n          fi\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGPASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"100m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\nEOF\\n", "stdout": "job.batch/zabbix-db-init created", "stderr": "", "rc": 0, "start": "2025-08-25 09:40:38.049254", "end": "2025-08-25 09:40:38.502625", "delta": "0:00:00.453371", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  name: zabbix-db-init\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-db-init\\n    component: database-init\\nspec:\\n  backoffLimit: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-db-init\\n        component: database-init\\n    spec:\\n      restartPolicy: Never\\n      containers:\\n      - name: zabbix-db-init\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        command:\\n        - /bin/bash\\n        - -c\\n        - |\\n          set -e\\n          echo \\"\\ud83d\\udd27 Starting Zabbix Database Schema Initialization...\\"\\n          \\n          # Wait for PostgreSQL to be ready\\n          echo \\"\\u23f3 Waiting for PostgreSQL to be ready...\\"\\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\\n            echo \\"PostgreSQL is unavailable - sleeping\\"\\n            sleep 2\\n          done\\n          echo \\"\\u2705 PostgreSQL is ready!\\"\\n          \\n          # Check if database is already initialized\\n          echo \\"\\ud83d\\udd0d Checking if database is already initialized...\\"\\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \\"SELECT COUNT(*) FROM information_schema.tables WHERE table_name=\'dbversion\';\\" | grep -q \\"1\\"; then\\n            echo \\"\\u2705 Database already initialized, skipping...\\"\\n            exit 0\\n          fi\\n          \\n          echo \\"\\ud83d\\ude80 Initializing Zabbix database schema...\\"\\n          \\n          # Initialize the database schema\\n          cd /usr/share/doc/zabbix-server-pgsql*/\\n          \\n          # Create schema\\n          echo \\"\\ud83d\\udccb Creating database schema...\\"\\n          if [ -f create.sql.gz ]; then\\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f create.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\\n          else\\n            echo \\"\\u274c Schema file not found!\\"\\n            exit 1\\n          fi\\n          \\n          # Insert initial data\\n          echo \\"\\ud83d\\udccb Inserting initial data...\\"\\n          if [ -f images.sql.gz ]; then\\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f images.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\\n          fi\\n          \\n          if [ -f data.sql.gz ]; then\\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f data.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\\n          fi\\n          \\n          echo \\"\\ud83c\\udf89 Zabbix database initialization completed successfully!\\"\\n          \\n          # Verify initialization\\n          echo \\"\\u2705 Verifying database initialization...\\"\\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \\"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\\" | tr -d \' \')\\n          echo \\"Database version: $DB_VERSION\\"\\n          \\n          if [ ! -z \\"$DB_VERSION\\" ]; then\\n            echo \\"\\u2705 Database successfully initialized with version $DB_VERSION\\"\\n          else\\n            echo \\"\\u274c Database initialization verification failed\\"\\n            exit 1\\n          fi\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGPASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"100m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:38,538 p=990359 u=admviana n=ansible | TASK [🗄️  Initialize Zabbix Database Schema] ***********************************
2025-08-25 09:40:38,539 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: zabbix-db-init\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-db-init\n    component: database-init\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      labels:\n        app: zabbix-db-init\n        component: database-init\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: zabbix-db-init\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        command:\n        - /bin/bash\n        - -c\n        - |\n          set -e\n          echo \"🔧 Starting Zabbix Database Schema Initialization...\"\n          \n          # Wait for PostgreSQL to be ready\n          echo \"⏳ Waiting for PostgreSQL to be ready...\"\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\n            echo \"PostgreSQL is unavailable - sleeping\"\n            sleep 2\n          done\n          echo \"✅ PostgreSQL is ready!\"\n          \n          # Check if database is already initialized\n          echo \"🔍 Checking if database is already initialized...\"\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_name='dbversion';\" | grep -q \"1\"; then\n            echo \"✅ Database already initialized, skipping...\"\n            exit 0\n          fi\n          \n          echo \"🚀 Initializing Zabbix database schema...\"\n          \n          # Initialize the database schema\n          cd /usr/share/doc/zabbix-server-pgsql*/\n          \n          # Create schema\n          echo \"📋 Creating database schema...\"\n          if [ -f create.sql.gz ]; then\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f create.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\n          else\n            echo \"❌ Schema file not found!\"\n            exit 1\n          fi\n          \n          # Insert initial data\n          echo \"📋 Inserting initial data...\"\n          if [ -f images.sql.gz ]; then\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f images.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\n          fi\n          \n          if [ -f data.sql.gz ]; then\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f data.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\n          fi\n          \n          echo \"🎉 Zabbix database initialization completed successfully!\"\n          \n          # Verify initialization\n          echo \"✅ Verifying database initialization...\"\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\" | tr -d ' ')\n          echo \"Database version: $DB_VERSION\"\n          \n          if [ ! -z \"$DB_VERSION\" ]; then\n            echo \"✅ Database successfully initialized with version $DB_VERSION\"\n          else\n            echo \"❌ Database initialization verification failed\"\n            exit 1\n          fi\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n      nodeSelector:\n        kubernetes.io/os: linux\nEOF\n",
    "delta": "0:00:00.453371",
    "end": "2025-08-25 09:40:38.502625",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: zabbix-db-init\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-db-init\n    component: database-init\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      labels:\n        app: zabbix-db-init\n        component: database-init\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: zabbix-db-init\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        command:\n        - /bin/bash\n        - -c\n        - |\n          set -e\n          echo \"🔧 Starting Zabbix Database Schema Initialization...\"\n          \n          # Wait for PostgreSQL to be ready\n          echo \"⏳ Waiting for PostgreSQL to be ready...\"\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\n            echo \"PostgreSQL is unavailable - sleeping\"\n            sleep 2\n          done\n          echo \"✅ PostgreSQL is ready!\"\n          \n          # Check if database is already initialized\n          echo \"🔍 Checking if database is already initialized...\"\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_name='dbversion';\" | grep -q \"1\"; then\n            echo \"✅ Database already initialized, skipping...\"\n            exit 0\n          fi\n          \n          echo \"🚀 Initializing Zabbix database schema...\"\n          \n          # Initialize the database schema\n          cd /usr/share/doc/zabbix-server-pgsql*/\n          \n          # Create schema\n          echo \"📋 Creating database schema...\"\n          if [ -f create.sql.gz ]; then\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f create.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\n          else\n            echo \"❌ Schema file not found!\"\n            exit 1\n          fi\n          \n          # Insert initial data\n          echo \"📋 Inserting initial data...\"\n          if [ -f images.sql.gz ]; then\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f images.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\n          fi\n          \n          if [ -f data.sql.gz ]; then\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f data.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\n          fi\n          \n          echo \"🎉 Zabbix database initialization completed successfully!\"\n          \n          # Verify initialization\n          echo \"✅ Verifying database initialization...\"\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\" | tr -d ' ')\n          echo \"Database version: $DB_VERSION\"\n          \n          if [ ! -z \"$DB_VERSION\" ]; then\n            echo \"✅ Database successfully initialized with version $DB_VERSION\"\n          else\n            echo \"❌ Database initialization verification failed\"\n            exit 1\n          fi\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n      nodeSelector:\n        kubernetes.io/os: linux\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:40:38.049254",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch/zabbix-db-init created",
    "stdout_lines": [
        "job.batch/zabbix-db-init created"
    ]
}
2025-08-25 09:40:38,570 p=991242 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:40:38,571 p=991242 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:40:38,571 p=991242 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:40:38,572 p=991242 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:51,508 p=991242 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\\n", "stdout": "job.batch/zabbix-db-init condition met", "stderr": "", "rc": 0, "start": "2025-08-25 09:40:38.810197", "end": "2025-08-25 09:40:51.480601", "delta": "0:00:12.670404", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:51,512 p=990359 u=admviana n=ansible | TASK [⏳ Wait for database initialization to complete] **************************
2025-08-25 09:40:51,513 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\n",
    "delta": "0:00:12.670404",
    "end": "2025-08-25 09:40:51.480601",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:40:38.810197",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch/zabbix-db-init condition met",
    "stdout_lines": [
        "job.batch/zabbix-db-init condition met"
    ]
}
2025-08-25 09:40:51,543 p=991298 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:40:51,543 p=991298 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:40:51,543 p=991298 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:40:51,544 p=991298 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:51,931 p=991298 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath=\'{.status.conditions[?(@.type==\\"Complete\\")].status}\'\\n", "stdout": "True", "stderr": "", "rc": 0, "start": "2025-08-25 09:40:51.779384", "end": "2025-08-25 09:40:51.902817", "delta": "0:00:00.123433", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath=\'{.status.conditions[?(@.type==\\"Complete\\")].status}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:51,936 p=990359 u=admviana n=ansible | TASK [🔍 Verify database initialization job status] *****************************
2025-08-25 09:40:51,937 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath='{.status.conditions[?(@.type==\"Complete\")].status}'\n",
    "delta": "0:00:00.123433",
    "end": "2025-08-25 09:40:51.902817",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath='{.status.conditions[?(@.type==\"Complete\")].status}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:40:51.779384",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "True",
    "stdout_lines": [
        "True"
    ]
}
2025-08-25 09:40:51,952 p=990359 u=admviana n=ansible | TASK [✅ Database schema initialization completed successfully] *****************
2025-08-25 09:40:51,952 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Database Initialization Status: Complete ✅",
        "Schema: Zabbix 7.0 LTS",
        "Tables: Created with initial data",
        "Ready for Zabbix Server startup"
    ]
}
2025-08-25 09:40:51,987 p=991304 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:40:51,987 p=991304 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:40:51,987 p=991304 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:40:51,988 p=991304 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:52,389 p=991304 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\\n", "stdout": "job.batch \\"zabbix-db-init\\" deleted", "stderr": "", "rc": 0, "start": "2025-08-25 09:40:52.228575", "end": "2025-08-25 09:40:52.360486", "delta": "0:00:00.131911", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:52,392 p=990359 u=admviana n=ansible | TASK [🧹 Clean up database initialization job] **********************************
2025-08-25 09:40:52,393 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\n",
    "delta": "0:00:00.131911",
    "end": "2025-08-25 09:40:52.360486",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:40:52.228575",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch \"zabbix-db-init\" deleted",
    "stdout_lines": [
        "job.batch \"zabbix-db-init\" deleted"
    ]
}
2025-08-25 09:40:52,409 p=990359 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-25 09:40:52,441 p=991310 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:40:52,442 p=991310 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:40:52,442 p=991310 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:40:52,442 p=991310 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:53,333 p=991310 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-server\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\n    component: server\\nspec:\\n  replicas: 1\\n  selector:\\n    matchLabels:\\n      app: zabbix-server\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-server\\n        component: server\\n    spec:\\n      containers:\\n      - name: zabbix-server\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        ports:\\n        - containerPort: 10051\\n          name: zabbix-server\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Configuration\\n        - name: ZBX_CACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_CACHEUPDATEFREQUENCY\\n          value: \\"60\\"\\n        - name: ZBX_STARTDBSYNCERS\\n          value: \\"4\\"\\n        - name: ZBX_HISTORYCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_HISTORYINDEXCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_TRENDCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_VALUECACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_TIMEOUT\\n          value: \\"30\\"\\n        - name: ZBX_LOGSLOWQUERIES\\n          value: \\"3000\\"\\n        # Database Schema Initialization (Critical Fix)\\n        - name: ZBX_DBTIMEZONE\\n          value: \\"America/Sao_Paulo\\"\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-server-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 10051\\n    targetPort: 10051\\n    protocol: TCP\\n    name: zabbix-server\\n  selector:\\n    app: zabbix-server\\nEOF\\n", "stdout": "deployment.apps/zabbix-server created\\nservice/zabbix-server-service created", "stderr": "", "rc": 0, "start": "2025-08-25 09:40:52.675312", "end": "2025-08-25 09:40:53.300137", "delta": "0:00:00.624825", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-server\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\n    component: server\\nspec:\\n  replicas: 1\\n  selector:\\n    matchLabels:\\n      app: zabbix-server\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-server\\n        component: server\\n    spec:\\n      containers:\\n      - name: zabbix-server\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        ports:\\n        - containerPort: 10051\\n          name: zabbix-server\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Configuration\\n        - name: ZBX_CACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_CACHEUPDATEFREQUENCY\\n          value: \\"60\\"\\n        - name: ZBX_STARTDBSYNCERS\\n          value: \\"4\\"\\n        - name: ZBX_HISTORYCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_HISTORYINDEXCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_TRENDCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_VALUECACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_TIMEOUT\\n          value: \\"30\\"\\n        - name: ZBX_LOGSLOWQUERIES\\n          value: \\"3000\\"\\n        # Database Schema Initialization (Critical Fix)\\n        - name: ZBX_DBTIMEZONE\\n          value: \\"America/Sao_Paulo\\"\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-server-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 10051\\n    targetPort: 10051\\n    protocol: TCP\\n    name: zabbix-server\\n  selector:\\n    app: zabbix-server\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:53,336 p=990359 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-25 09:40:53,336 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server\n  template:\n    metadata:\n      labels:\n        app: zabbix-server\n        component: server\n    spec:\n      containers:\n      - name: zabbix-server\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        ports:\n        - containerPort: 10051\n          name: zabbix-server\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Configuration\n        - name: ZBX_CACHESIZE\n          value: \"256M\"\n        - name: ZBX_CACHEUPDATEFREQUENCY\n          value: \"60\"\n        - name: ZBX_STARTDBSYNCERS\n          value: \"4\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_LOGSLOWQUERIES\n          value: \"3000\"\n        # Database Schema Initialization (Critical Fix)\n        - name: ZBX_DBTIMEZONE\n          value: \"America/Sao_Paulo\"\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\nspec:\n  type: ClusterIP\n  ports:\n  - port: 10051\n    targetPort: 10051\n    protocol: TCP\n    name: zabbix-server\n  selector:\n    app: zabbix-server\nEOF\n",
    "delta": "0:00:00.624825",
    "end": "2025-08-25 09:40:53.300137",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server\n  template:\n    metadata:\n      labels:\n        app: zabbix-server\n        component: server\n    spec:\n      containers:\n      - name: zabbix-server\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        ports:\n        - containerPort: 10051\n          name: zabbix-server\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Configuration\n        - name: ZBX_CACHESIZE\n          value: \"256M\"\n        - name: ZBX_CACHEUPDATEFREQUENCY\n          value: \"60\"\n        - name: ZBX_STARTDBSYNCERS\n          value: \"4\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_LOGSLOWQUERIES\n          value: \"3000\"\n        # Database Schema Initialization (Critical Fix)\n        - name: ZBX_DBTIMEZONE\n          value: \"America/Sao_Paulo\"\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\nspec:\n  type: ClusterIP\n  ports:\n  - port: 10051\n    targetPort: 10051\n    protocol: TCP\n    name: zabbix-server\n  selector:\n    app: zabbix-server\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:40:52.675312",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-server created\nservice/zabbix-server-service created",
    "stdout_lines": [
        "deployment.apps/zabbix-server created",
        "service/zabbix-server-service created"
    ]
}
2025-08-25 09:40:53,368 p=991327 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 09:40:53,368 p=991327 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 09:40:53,368 p=991327 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 09:40:53,368 p=991327 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 09:40:54,276 p=991327 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\\n", "stdout": "deployment.apps/zabbix-server condition met", "stderr": "", "rc": 0, "start": "2025-08-25 09:40:53.624303", "end": "2025-08-25 09:40:54.243076", "delta": "0:00:00.618773", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 09:40:54,281 p=990359 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-25 09:40:54,282 p=990359 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\n",
    "delta": "0:00:00.618773",
    "end": "2025-08-25 09:40:54.243076",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 09:40:53.624303",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-server condition met",
    "stdout_lines": [
        "deployment.apps/zabbix-server condition met"
    ]
}
2025-08-25 09:40:54,295 p=990359 u=admviana n=ansible | TASK [✅ Zabbix Server deployed successfully] ***********************************
2025-08-25 09:40:54,296 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "Zabbix Server Status: Running ✅"
}
2025-08-25 09:40:54,369 p=990359 u=admviana n=ansible | TASK [🎉 Deployment completed successfully] *************************************
2025-08-25 09:40:54,369 p=990359 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "✅ Zabbix 7.0 LTS deployed successfully!",
        "🌐 Web Interface: http://172.17.176.34:30080",
        "🔐 HTTPS: https://172.17.176.34:30443",
        "👤 Default Login: Admin / zabbix",
        "📊 Database: PostgreSQL 15-alpine",
        "💾 Storage: 20Gi",
        "",
        "🚀 Ready for corporate monitoring!"
    ]
}
2025-08-25 09:40:54,371 p=990359 u=admviana n=ansible | META: ran handlers
2025-08-25 09:40:54,373 p=990359 u=admviana n=ansible | META: ran handlers
2025-08-25 09:40:54,374 p=990359 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 09:40:54,375 p=990359 u=admviana n=ansible | k8s-master                 : ok=26   changed=14   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-08-25 10:31:21,892 p=1003750 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 10:31:24,185 p=1003785 u=admviana n=ansible | ansible-playbook 2.10.8
  config file = /home/admviana/zabbix_k8s/ansible/ansible.cfg
  configured module search path = ['/home/admviana/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Aug 15 2025, 14:32:43) [GCC 11.4.0]
2025-08-25 10:31:24,185 p=1003785 u=admviana n=ansible | Using /home/admviana/zabbix_k8s/ansible/ansible.cfg as config file
2025-08-25 10:31:24,190 p=1003785 u=admviana n=ansible | Parsed /home/admviana/zabbix_k8s/ansible/inventories/production/hosts.yml inventory source with yaml plugin
2025-08-25 10:31:24,348 p=1003785 u=admviana n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-08-25 10:31:24,348 p=1003785 u=admviana n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-08-25 10:31:24,348 p=1003785 u=admviana n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-08-25 10:31:24,349 p=1003785 u=admviana n=ansible | PLAYBOOK: deploy-zabbix.yml ****************************************************
2025-08-25 10:31:24,349 p=1003785 u=admviana n=ansible | 1 plays in playbooks/deploy-zabbix.yml
2025-08-25 10:31:24,350 p=1003785 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 10:31:24,360 p=1003785 u=admviana n=ansible | META: ran handlers
2025-08-25 10:31:24,392 p=1003785 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 10:31:24,393 p=1003785 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-25 10:31:24,412 p=1003785 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 10:31:24,552 p=1003792 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:24,553 p=1003792 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:24,553 p=1003792 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:24,553 p=1003792 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:31:25,400 p=1003792 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "namespace/zabbix-monitoring created", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:24.799521", "end": "2025-08-25 10:31:25.376023", "delta": "0:00:00.576502", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:31:25,404 p=1003785 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 10:31:25,405 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.576502",
    "end": "2025-08-25 10:31:25.376023",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:24.799521",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring created",
    "stdout_lines": [
        "namespace/zabbix-monitoring created"
    ]
}
2025-08-25 10:31:25,435 p=1003809 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:25,435 p=1003809 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:25,436 p=1003809 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:25,436 p=1003809 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:31:25,849 p=1003809 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "stdout": "namespace/zabbix-monitoring labeled", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:25.697865", "end": "2025-08-25 10:31:25.825871", "delta": "0:00:00.128006", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:31:25,851 p=1003785 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 10:31:25,851 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
    "delta": "0:00:00.128006",
    "end": "2025-08-25 10:31:25.825871",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:25.697865",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring labeled",
    "stdout_lines": [
        "namespace/zabbix-monitoring labeled"
    ]
}
2025-08-25 10:31:25,880 p=1003812 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:25,880 p=1003812 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:25,880 p=1003812 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:25,881 p=1003812 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:31:26,680 p=1003812 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:26.132867", "end": "2025-08-25 10:31:26.656635", "delta": "0:00:00.523768", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:31:26,686 p=1003785 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 10:31:26,687 p=1003785 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
    "delta": "0:00:00.523768",
    "end": "2025-08-25 10:31:26.656635",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:26.132867",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged",
    "stdout_lines": [
        "storageclass.storage.k8s.io/longhorn-zabbix unchanged",
        "storageclass.storage.k8s.io/longhorn-zabbix-db unchanged"
    ]
}
2025-08-25 10:31:26,720 p=1003839 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:26,720 p=1003839 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:26,720 p=1003839 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:26,721 p=1003839 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:31:27,510 p=1003839 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "secret/zabbix-db-secret created", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:26.964359", "end": "2025-08-25 10:31:27.486787", "delta": "0:00:00.522428", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:31:27,515 p=1003785 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 10:31:27,515 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.522428",
    "end": "2025-08-25 10:31:27.486787",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:26.964359",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/zabbix-db-secret created",
    "stdout_lines": [
        "secret/zabbix-db-secret created"
    ]
}
2025-08-25 10:31:27,550 p=1003853 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:27,550 p=1003853 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:27,550 p=1003853 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:27,551 p=1003853 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:31:28,311 p=1003853 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "stdout": "configmap/zabbix-config created", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:27.787978", "end": "2025-08-25 10:31:28.289089", "delta": "0:00:00.501111", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:31:28,316 p=1003785 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 10:31:28,317 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
    "delta": "0:00:00.501111",
    "end": "2025-08-25 10:31:28.289089",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:27.787978",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "configmap/zabbix-config created",
    "stdout_lines": [
        "configmap/zabbix-config created"
    ]
}
2025-08-25 10:31:28,347 p=1003785 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 10:31:28,348 p=1003785 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-25 10:31:28,373 p=1003785 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 10:31:28,411 p=1003862 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:28,411 p=1003862 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:28,411 p=1003862 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:28,412 p=1003862 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:31:29,402 p=1003862 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "stdout": "persistentvolumeclaim/postgresql-data-pvc created\\ndeployment.apps/postgresql created\\nservice/postgresql-service created", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:28.654427", "end": "2025-08-25 10:31:29.362017", "delta": "0:00:00.707590", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:31:29,407 p=1003785 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 10:31:29,409 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
    "delta": "0:00:00.707590",
    "end": "2025-08-25 10:31:29.362017",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:28.654427",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "persistentvolumeclaim/postgresql-data-pvc created\ndeployment.apps/postgresql created\nservice/postgresql-service created",
    "stdout_lines": [
        "persistentvolumeclaim/postgresql-data-pvc created",
        "deployment.apps/postgresql created",
        "service/postgresql-service created"
    ]
}
2025-08-25 10:31:29,446 p=1003866 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:29,447 p=1003866 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:29,447 p=1003866 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:29,448 p=1003866 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:31:34,976 p=1003866 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "timeout 180s bash -c \'\\n  echo \\"Waiting for PVC to be bound...\\"\\n  while true; do\\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\\"{.status.phase}\\" 2>/dev/null || echo \\"NotFound\\")\\n    echo \\"PVC Status: $STATUS\\"\\n    if [ \\"$STATUS\\" = \\"Bound\\" ]; then\\n      echo \\"\\u2705 PVC is bound!\\"\\n      exit 0\\n    elif [ \\"$STATUS\\" = \\"NotFound\\" ]; then\\n      echo \\"\\u26a0\\ufe0f  PVC not found, waiting...\\"\\n    else\\n      echo \\"\\u23f3 PVC status: $STATUS, waiting...\\"\\n    fi\\n    sleep 5\\n  done\\n\'\\n", "stdout": "Waiting for PVC to be bound...\\nPVC Status: Pending\\n\\u23f3 PVC status: Pending, waiting...\\nPVC Status: Bound\\n\\u2705 PVC is bound!", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:29.690775", "end": "2025-08-25 10:31:34.952692", "delta": "0:00:05.261917", "changed": true, "invocation": {"module_args": {"_raw_params": "timeout 180s bash -c \'\\n  echo \\"Waiting for PVC to be bound...\\"\\n  while true; do\\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\\"{.status.phase}\\" 2>/dev/null || echo \\"NotFound\\")\\n    echo \\"PVC Status: $STATUS\\"\\n    if [ \\"$STATUS\\" = \\"Bound\\" ]; then\\n      echo \\"\\u2705 PVC is bound!\\"\\n      exit 0\\n    elif [ \\"$STATUS\\" = \\"NotFound\\" ]; then\\n      echo \\"\\u26a0\\ufe0f  PVC not found, waiting...\\"\\n    else\\n      echo \\"\\u23f3 PVC status: $STATUS, waiting...\\"\\n    fi\\n    sleep 5\\n  done\\n\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:31:34,978 p=1003785 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 10:31:34,978 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "timeout 180s bash -c '\n  echo \"Waiting for PVC to be bound...\"\n  while true; do\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\"{.status.phase}\" 2>/dev/null || echo \"NotFound\")\n    echo \"PVC Status: $STATUS\"\n    if [ \"$STATUS\" = \"Bound\" ]; then\n      echo \"✅ PVC is bound!\"\n      exit 0\n    elif [ \"$STATUS\" = \"NotFound\" ]; then\n      echo \"⚠️  PVC not found, waiting...\"\n    else\n      echo \"⏳ PVC status: $STATUS, waiting...\"\n    fi\n    sleep 5\n  done\n'\n",
    "delta": "0:00:05.261917",
    "end": "2025-08-25 10:31:34.952692",
    "invocation": {
        "module_args": {
            "_raw_params": "timeout 180s bash -c '\n  echo \"Waiting for PVC to be bound...\"\n  while true; do\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\"{.status.phase}\" 2>/dev/null || echo \"NotFound\")\n    echo \"PVC Status: $STATUS\"\n    if [ \"$STATUS\" = \"Bound\" ]; then\n      echo \"✅ PVC is bound!\"\n      exit 0\n    elif [ \"$STATUS\" = \"NotFound\" ]; then\n      echo \"⚠️  PVC not found, waiting...\"\n    else\n      echo \"⏳ PVC status: $STATUS, waiting...\"\n    fi\n    sleep 5\n  done\n'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:29.690775",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Waiting for PVC to be bound...\nPVC Status: Pending\n⏳ PVC status: Pending, waiting...\nPVC Status: Bound\n✅ PVC is bound!",
    "stdout_lines": [
        "Waiting for PVC to be bound...",
        "PVC Status: Pending",
        "⏳ PVC status: Pending, waiting...",
        "PVC Status: Bound",
        "✅ PVC is bound!"
    ]
}
2025-08-25 10:31:34,994 p=1003785 u=admviana n=ansible | TASK [✅ PVC status verified] ***************************************************
2025-08-25 10:31:34,995 p=1003785 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "PVC postgresql-data-pvc is bound and ready for use"
}
2025-08-25 10:31:35,031 p=1004002 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:31:35,031 p=1004002 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:31:35,032 p=1004002 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:31:35,032 p=1004002 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:10,674 p=1004002 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\\n", "stdout": "deployment.apps/postgresql condition met", "stderr": "", "rc": 0, "start": "2025-08-25 10:31:35.278922", "end": "2025-08-25 10:32:10.649415", "delta": "0:00:35.370493", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:10,679 p=1003785 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL deployment to be ready] ****************************
2025-08-25 10:32:10,679 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\n",
    "delta": "0:00:35.370493",
    "end": "2025-08-25 10:32:10.649415",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:31:35.278922",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/postgresql condition met",
    "stdout_lines": [
        "deployment.apps/postgresql condition met"
    ]
}
2025-08-25 10:32:10,711 p=1004085 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:10,711 p=1004085 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:10,712 p=1004085 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:10,712 p=1004085 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:11,109 p=1004085 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath=\'{.items[0].status.phase}\'\\n", "stdout": "Running", "stderr": "", "rc": 0, "start": "2025-08-25 10:32:10.961774", "end": "2025-08-25 10:32:11.086060", "delta": "0:00:00.124286", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath=\'{.items[0].status.phase}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:11,113 p=1003785 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL pod status] ******************************************
2025-08-25 10:32:11,114 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath='{.items[0].status.phase}'\n",
    "delta": "0:00:00.124286",
    "end": "2025-08-25 10:32:11.086060",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath='{.items[0].status.phase}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:32:10.961774",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Running",
    "stdout_lines": [
        "Running"
    ]
}
2025-08-25 10:32:11,148 p=1003785 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-25 10:32:11,149 p=1003785 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi",
        "Volume Status: Healthy ✅"
    ]
}
2025-08-25 10:32:11,169 p=1003785 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database-init.yml for k8s-master
2025-08-25 10:32:11,203 p=1004093 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:11,203 p=1004093 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:11,203 p=1004093 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:11,204 p=1004093 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:12,037 p=1004093 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  name: zabbix-db-init\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-db-init\\n    component: database-init\\nspec:\\n  backoffLimit: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-db-init\\n        component: database-init\\n    spec:\\n      restartPolicy: Never\\n      containers:\\n      - name: zabbix-db-init\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        command:\\n        - /bin/bash\\n        - -c\\n        - |\\n          set -e\\n          echo \\"\\ud83d\\udd27 Starting Zabbix Database Schema Initialization...\\"\\n          \\n          # Wait for PostgreSQL to be ready\\n          echo \\"\\u23f3 Waiting for PostgreSQL to be ready...\\"\\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\\n            echo \\"PostgreSQL is unavailable - sleeping\\"\\n            sleep 2\\n          done\\n          echo \\"\\u2705 PostgreSQL is ready!\\"\\n          \\n          # Check if database is already initialized\\n          echo \\"\\ud83d\\udd0d Checking if database is already initialized...\\"\\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \\"SELECT COUNT(*) FROM information_schema.tables WHERE table_name=\'dbversion\';\\" | grep -q \\"1\\"; then\\n            echo \\"\\u2705 Database already initialized, skipping...\\"\\n            exit 0\\n          fi\\n          \\n          echo \\"\\ud83d\\ude80 Initializing Zabbix database schema...\\"\\n          \\n          # Initialize the database schema\\n          cd /usr/share/doc/zabbix-server-pgsql*/\\n          \\n          # Create schema\\n          echo \\"\\ud83d\\udccb Creating database schema...\\"\\n          if [ -f create.sql.gz ]; then\\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f create.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\\n          else\\n            echo \\"\\u274c Schema file not found!\\"\\n            exit 1\\n          fi\\n          \\n          # Insert initial data\\n          echo \\"\\ud83d\\udccb Inserting initial data...\\"\\n          if [ -f images.sql.gz ]; then\\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f images.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\\n          fi\\n          \\n          if [ -f data.sql.gz ]; then\\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f data.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\\n          fi\\n          \\n          echo \\"\\ud83c\\udf89 Zabbix database initialization completed successfully!\\"\\n          \\n          # Verify initialization\\n          echo \\"\\u2705 Verifying database initialization...\\"\\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \\"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\\" | tr -d \' \')\\n          echo \\"Database version: $DB_VERSION\\"\\n          \\n          if [ ! -z \\"$DB_VERSION\\" ]; then\\n            echo \\"\\u2705 Database successfully initialized with version $DB_VERSION\\"\\n          else\\n            echo \\"\\u274c Database initialization verification failed\\"\\n            exit 1\\n          fi\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGPASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"100m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\nEOF\\n", "stdout": "job.batch/zabbix-db-init created", "stderr": "", "rc": 0, "start": "2025-08-25 10:32:11.442371", "end": "2025-08-25 10:32:12.006667", "delta": "0:00:00.564296", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  name: zabbix-db-init\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-db-init\\n    component: database-init\\nspec:\\n  backoffLimit: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-db-init\\n        component: database-init\\n    spec:\\n      restartPolicy: Never\\n      containers:\\n      - name: zabbix-db-init\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        command:\\n        - /bin/bash\\n        - -c\\n        - |\\n          set -e\\n          echo \\"\\ud83d\\udd27 Starting Zabbix Database Schema Initialization...\\"\\n          \\n          # Wait for PostgreSQL to be ready\\n          echo \\"\\u23f3 Waiting for PostgreSQL to be ready...\\"\\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\\n            echo \\"PostgreSQL is unavailable - sleeping\\"\\n            sleep 2\\n          done\\n          echo \\"\\u2705 PostgreSQL is ready!\\"\\n          \\n          # Check if database is already initialized\\n          echo \\"\\ud83d\\udd0d Checking if database is already initialized...\\"\\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \\"SELECT COUNT(*) FROM information_schema.tables WHERE table_name=\'dbversion\';\\" | grep -q \\"1\\"; then\\n            echo \\"\\u2705 Database already initialized, skipping...\\"\\n            exit 0\\n          fi\\n          \\n          echo \\"\\ud83d\\ude80 Initializing Zabbix database schema...\\"\\n          \\n          # Initialize the database schema\\n          cd /usr/share/doc/zabbix-server-pgsql*/\\n          \\n          # Create schema\\n          echo \\"\\ud83d\\udccb Creating database schema...\\"\\n          if [ -f create.sql.gz ]; then\\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f create.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\\n          else\\n            echo \\"\\u274c Schema file not found!\\"\\n            exit 1\\n          fi\\n          \\n          # Insert initial data\\n          echo \\"\\ud83d\\udccb Inserting initial data...\\"\\n          if [ -f images.sql.gz ]; then\\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f images.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\\n          fi\\n          \\n          if [ -f data.sql.gz ]; then\\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f data.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\\n          fi\\n          \\n          echo \\"\\ud83c\\udf89 Zabbix database initialization completed successfully!\\"\\n          \\n          # Verify initialization\\n          echo \\"\\u2705 Verifying database initialization...\\"\\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \\"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\\" | tr -d \' \')\\n          echo \\"Database version: $DB_VERSION\\"\\n          \\n          if [ ! -z \\"$DB_VERSION\\" ]; then\\n            echo \\"\\u2705 Database successfully initialized with version $DB_VERSION\\"\\n          else\\n            echo \\"\\u274c Database initialization verification failed\\"\\n            exit 1\\n          fi\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGPASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"100m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:12,043 p=1003785 u=admviana n=ansible | TASK [🗄️  Initialize Zabbix Database Schema] ***********************************
2025-08-25 10:32:12,044 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: zabbix-db-init\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-db-init\n    component: database-init\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      labels:\n        app: zabbix-db-init\n        component: database-init\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: zabbix-db-init\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        command:\n        - /bin/bash\n        - -c\n        - |\n          set -e\n          echo \"🔧 Starting Zabbix Database Schema Initialization...\"\n          \n          # Wait for PostgreSQL to be ready\n          echo \"⏳ Waiting for PostgreSQL to be ready...\"\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\n            echo \"PostgreSQL is unavailable - sleeping\"\n            sleep 2\n          done\n          echo \"✅ PostgreSQL is ready!\"\n          \n          # Check if database is already initialized\n          echo \"🔍 Checking if database is already initialized...\"\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_name='dbversion';\" | grep -q \"1\"; then\n            echo \"✅ Database already initialized, skipping...\"\n            exit 0\n          fi\n          \n          echo \"🚀 Initializing Zabbix database schema...\"\n          \n          # Initialize the database schema\n          cd /usr/share/doc/zabbix-server-pgsql*/\n          \n          # Create schema\n          echo \"📋 Creating database schema...\"\n          if [ -f create.sql.gz ]; then\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f create.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\n          else\n            echo \"❌ Schema file not found!\"\n            exit 1\n          fi\n          \n          # Insert initial data\n          echo \"📋 Inserting initial data...\"\n          if [ -f images.sql.gz ]; then\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f images.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\n          fi\n          \n          if [ -f data.sql.gz ]; then\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f data.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\n          fi\n          \n          echo \"🎉 Zabbix database initialization completed successfully!\"\n          \n          # Verify initialization\n          echo \"✅ Verifying database initialization...\"\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\" | tr -d ' ')\n          echo \"Database version: $DB_VERSION\"\n          \n          if [ ! -z \"$DB_VERSION\" ]; then\n            echo \"✅ Database successfully initialized with version $DB_VERSION\"\n          else\n            echo \"❌ Database initialization verification failed\"\n            exit 1\n          fi\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n      nodeSelector:\n        kubernetes.io/os: linux\nEOF\n",
    "delta": "0:00:00.564296",
    "end": "2025-08-25 10:32:12.006667",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: zabbix-db-init\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-db-init\n    component: database-init\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      labels:\n        app: zabbix-db-init\n        component: database-init\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: zabbix-db-init\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        command:\n        - /bin/bash\n        - -c\n        - |\n          set -e\n          echo \"🔧 Starting Zabbix Database Schema Initialization...\"\n          \n          # Wait for PostgreSQL to be ready\n          echo \"⏳ Waiting for PostgreSQL to be ready...\"\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\n            echo \"PostgreSQL is unavailable - sleeping\"\n            sleep 2\n          done\n          echo \"✅ PostgreSQL is ready!\"\n          \n          # Check if database is already initialized\n          echo \"🔍 Checking if database is already initialized...\"\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_name='dbversion';\" | grep -q \"1\"; then\n            echo \"✅ Database already initialized, skipping...\"\n            exit 0\n          fi\n          \n          echo \"🚀 Initializing Zabbix database schema...\"\n          \n          # Initialize the database schema\n          cd /usr/share/doc/zabbix-server-pgsql*/\n          \n          # Create schema\n          echo \"📋 Creating database schema...\"\n          if [ -f create.sql.gz ]; then\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f create.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\n          else\n            echo \"❌ Schema file not found!\"\n            exit 1\n          fi\n          \n          # Insert initial data\n          echo \"📋 Inserting initial data...\"\n          if [ -f images.sql.gz ]; then\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f images.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\n          fi\n          \n          if [ -f data.sql.gz ]; then\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f data.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\n          fi\n          \n          echo \"🎉 Zabbix database initialization completed successfully!\"\n          \n          # Verify initialization\n          echo \"✅ Verifying database initialization...\"\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\" | tr -d ' ')\n          echo \"Database version: $DB_VERSION\"\n          \n          if [ ! -z \"$DB_VERSION\" ]; then\n            echo \"✅ Database successfully initialized with version $DB_VERSION\"\n          else\n            echo \"❌ Database initialization verification failed\"\n            exit 1\n          fi\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n      nodeSelector:\n        kubernetes.io/os: linux\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:32:11.442371",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch/zabbix-db-init created",
    "stdout_lines": [
        "job.batch/zabbix-db-init created"
    ]
}
2025-08-25 10:32:12,076 p=1004109 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:12,076 p=1004109 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:12,077 p=1004109 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:12,077 p=1004109 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:16,183 p=1004109 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\\n", "stdout": "job.batch/zabbix-db-init condition met", "stderr": "", "rc": 0, "start": "2025-08-25 10:32:12.324549", "end": "2025-08-25 10:32:16.159032", "delta": "0:00:03.834483", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:16,188 p=1003785 u=admviana n=ansible | TASK [⏳ Wait for database initialization to complete] **************************
2025-08-25 10:32:16,189 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\n",
    "delta": "0:00:03.834483",
    "end": "2025-08-25 10:32:16.159032",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:32:12.324549",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch/zabbix-db-init condition met",
    "stdout_lines": [
        "job.batch/zabbix-db-init condition met"
    ]
}
2025-08-25 10:32:16,221 p=1004129 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:16,221 p=1004129 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:16,222 p=1004129 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:16,222 p=1004129 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:16,646 p=1004129 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath=\'{.status.conditions[?(@.type==\\"Complete\\")].status}\'\\n", "stdout": "True", "stderr": "", "rc": 0, "start": "2025-08-25 10:32:16.477853", "end": "2025-08-25 10:32:16.622272", "delta": "0:00:00.144419", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath=\'{.status.conditions[?(@.type==\\"Complete\\")].status}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:16,651 p=1003785 u=admviana n=ansible | TASK [🔍 Verify database initialization job status] *****************************
2025-08-25 10:32:16,651 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath='{.status.conditions[?(@.type==\"Complete\")].status}'\n",
    "delta": "0:00:00.144419",
    "end": "2025-08-25 10:32:16.622272",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath='{.status.conditions[?(@.type==\"Complete\")].status}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:32:16.477853",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "True",
    "stdout_lines": [
        "True"
    ]
}
2025-08-25 10:32:16,667 p=1003785 u=admviana n=ansible | TASK [✅ Database schema initialization completed successfully] *****************
2025-08-25 10:32:16,668 p=1003785 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Database Initialization Status: Complete ✅",
        "Schema: Zabbix 7.0 LTS",
        "Tables: Created with initial data",
        "Ready for Zabbix Server startup"
    ]
}
2025-08-25 10:32:16,701 p=1004134 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:16,702 p=1004134 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:16,702 p=1004134 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:16,703 p=1004134 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:17,091 p=1004134 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\\n", "stdout": "job.batch \\"zabbix-db-init\\" deleted", "stderr": "", "rc": 0, "start": "2025-08-25 10:32:16.936231", "end": "2025-08-25 10:32:17.067240", "delta": "0:00:00.131009", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:17,094 p=1003785 u=admviana n=ansible | TASK [🧹 Clean up database initialization job] **********************************
2025-08-25 10:32:17,094 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\n",
    "delta": "0:00:00.131009",
    "end": "2025-08-25 10:32:17.067240",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:32:16.936231",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch \"zabbix-db-init\" deleted",
    "stdout_lines": [
        "job.batch \"zabbix-db-init\" deleted"
    ]
}
2025-08-25 10:32:17,113 p=1003785 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-25 10:32:17,148 p=1004152 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:17,148 p=1004152 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:17,149 p=1004152 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:17,149 p=1004152 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:18,058 p=1004152 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-server\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\n    component: server\\nspec:\\n  replicas: 1\\n  selector:\\n    matchLabels:\\n      app: zabbix-server\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-server\\n        component: server\\n    spec:\\n      containers:\\n      - name: zabbix-server\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        ports:\\n        - containerPort: 10051\\n          name: zabbix-server\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Configuration\\n        - name: ZBX_CACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_CACHEUPDATEFREQUENCY\\n          value: \\"60\\"\\n        - name: ZBX_STARTDBSYNCERS\\n          value: \\"4\\"\\n        - name: ZBX_HISTORYCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_HISTORYINDEXCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_TRENDCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_VALUECACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_TIMEOUT\\n          value: \\"30\\"\\n        - name: ZBX_LOGSLOWQUERIES\\n          value: \\"3000\\"\\n        # Database Schema Initialization (Critical Fix)\\n        - name: ZBX_DBTIMEZONE\\n          value: \\"America/Sao_Paulo\\"\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-server-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 10051\\n    targetPort: 10051\\n    protocol: TCP\\n    name: zabbix-server\\n  selector:\\n    app: zabbix-server\\nEOF\\n", "stdout": "deployment.apps/zabbix-server created\\nservice/zabbix-server-service created", "stderr": "", "rc": 0, "start": "2025-08-25 10:32:17.388751", "end": "2025-08-25 10:32:18.012556", "delta": "0:00:00.623805", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-server\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\n    component: server\\nspec:\\n  replicas: 1\\n  selector:\\n    matchLabels:\\n      app: zabbix-server\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-server\\n        component: server\\n    spec:\\n      containers:\\n      - name: zabbix-server\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        ports:\\n        - containerPort: 10051\\n          name: zabbix-server\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Configuration\\n        - name: ZBX_CACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_CACHEUPDATEFREQUENCY\\n          value: \\"60\\"\\n        - name: ZBX_STARTDBSYNCERS\\n          value: \\"4\\"\\n        - name: ZBX_HISTORYCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_HISTORYINDEXCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_TRENDCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_VALUECACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_TIMEOUT\\n          value: \\"30\\"\\n        - name: ZBX_LOGSLOWQUERIES\\n          value: \\"3000\\"\\n        # Database Schema Initialization (Critical Fix)\\n        - name: ZBX_DBTIMEZONE\\n          value: \\"America/Sao_Paulo\\"\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-server-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 10051\\n    targetPort: 10051\\n    protocol: TCP\\n    name: zabbix-server\\n  selector:\\n    app: zabbix-server\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:18,061 p=1003785 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-25 10:32:18,061 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server\n  template:\n    metadata:\n      labels:\n        app: zabbix-server\n        component: server\n    spec:\n      containers:\n      - name: zabbix-server\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        ports:\n        - containerPort: 10051\n          name: zabbix-server\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Configuration\n        - name: ZBX_CACHESIZE\n          value: \"256M\"\n        - name: ZBX_CACHEUPDATEFREQUENCY\n          value: \"60\"\n        - name: ZBX_STARTDBSYNCERS\n          value: \"4\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_LOGSLOWQUERIES\n          value: \"3000\"\n        # Database Schema Initialization (Critical Fix)\n        - name: ZBX_DBTIMEZONE\n          value: \"America/Sao_Paulo\"\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\nspec:\n  type: ClusterIP\n  ports:\n  - port: 10051\n    targetPort: 10051\n    protocol: TCP\n    name: zabbix-server\n  selector:\n    app: zabbix-server\nEOF\n",
    "delta": "0:00:00.623805",
    "end": "2025-08-25 10:32:18.012556",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server\n  template:\n    metadata:\n      labels:\n        app: zabbix-server\n        component: server\n    spec:\n      containers:\n      - name: zabbix-server\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        ports:\n        - containerPort: 10051\n          name: zabbix-server\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Configuration\n        - name: ZBX_CACHESIZE\n          value: \"256M\"\n        - name: ZBX_CACHEUPDATEFREQUENCY\n          value: \"60\"\n        - name: ZBX_STARTDBSYNCERS\n          value: \"4\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_LOGSLOWQUERIES\n          value: \"3000\"\n        # Database Schema Initialization (Critical Fix)\n        - name: ZBX_DBTIMEZONE\n          value: \"America/Sao_Paulo\"\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\nspec:\n  type: ClusterIP\n  ports:\n  - port: 10051\n    targetPort: 10051\n    protocol: TCP\n    name: zabbix-server\n  selector:\n    app: zabbix-server\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:32:17.388751",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-server created\nservice/zabbix-server-service created",
    "stdout_lines": [
        "deployment.apps/zabbix-server created",
        "service/zabbix-server-service created"
    ]
}
2025-08-25 10:32:18,092 p=1004163 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:18,092 p=1004163 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:18,093 p=1004163 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:18,093 p=1004163 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:18,993 p=1004163 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\\n", "stdout": "deployment.apps/zabbix-server condition met", "stderr": "", "rc": 0, "start": "2025-08-25 10:32:18.325956", "end": "2025-08-25 10:32:18.968599", "delta": "0:00:00.642643", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:18,998 p=1003785 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-25 10:32:18,998 p=1003785 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\n",
    "delta": "0:00:00.642643",
    "end": "2025-08-25 10:32:18.968599",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:32:18.325956",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-server condition met",
    "stdout_lines": [
        "deployment.apps/zabbix-server condition met"
    ]
}
2025-08-25 10:32:19,015 p=1003785 u=admviana n=ansible | TASK [✅ Zabbix Server deployed successfully] ***********************************
2025-08-25 10:32:19,016 p=1003785 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "Zabbix Server Status: Running ✅"
}
2025-08-25 10:32:19,036 p=1003785 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-web.yml for k8s-master
2025-08-25 10:32:19,077 p=1004171 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:32:19,077 p=1004171 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:32:19,077 p=1004171 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:32:19,078 p=1004171 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:32:19,880 p=1004171 u=admviana n=ansible | <172.17.176.34> (1, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-web\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\n    component: web-interface\\nspec:\\n  replicas: 2\\n  selector:\\n    matchLabels:\\n      app: zabbix-web\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-web\\n        component: web-interface\\n    spec:\\n      containers:\\n      - name: zabbix-web\\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\\n        ports:\\n        - containerPort: 8080\\n          name: web\\n        - containerPort: 8443\\n          name: web-ssl\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Connection\\n        - name: ZBX_SERVER_HOST\\n          value: \\"zabbix-server-service\\"\\n        - name: ZBX_SERVER_PORT\\n          value: \\"10051\\"\\n        - name: ZBX_SERVER_NAME\\n          value: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n        # PHP Configuration\\n        - name: PHP_TZ\\n          value: \\"America/Sao_Paulo\\"\\n        - name: PHP_MEMORY_LIMIT\\n          value: \\"512M\\"\\n        - name: PHP_MAX_EXECUTION_TIME\\n          value: \\"600\\"\\n        - name: PHP_POST_MAX_SIZE\\n          value: \\"64M\\"\\n        - name: PHP_UPLOAD_MAX_FILESIZE\\n          value: \\"16M\\"\\n        - name: PHP_MAX_INPUT_TIME\\n          value: \\"600\\"\\n        # Security and Branding\\n        - name: ZBX_GUI_WARNING_MSG\\n          value: \\"Zabbix Corporate Monitoring - Ambiente Produ\\u00e7\\u00e3o\\"\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"200m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n        readinessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 15\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        livenessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 60\\n          periodSeconds: 30\\n          timeoutSeconds: 10\\n          failureThreshold: 3\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-web-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\nspec:\\n  type: NodePort\\n  ports:\\n  - port: 8080\\n    targetPort: 8080\\n    protocol: TCP\\n    name: web\\n    nodePort: 30080  - port: 8443\\n    targetPort: 8443\\n    protocol: TCP\\n    name: web-ssl\\n    nodePort: 30443  selector:\\n    app: zabbix-web\\nEOF\\n", "stdout": "deployment.apps/zabbix-web created", "stderr": "error: error parsing STDIN: error converting YAML to JSON: yaml: line 15: mapping values are not allowed in this context", "rc": 1, "start": "2025-08-25 10:32:19.346195", "end": "2025-08-25 10:32:19.850242", "delta": "0:00:00.504047", "changed": true, "failed": true, "msg": "non-zero return code", "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-web\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\n    component: web-interface\\nspec:\\n  replicas: 2\\n  selector:\\n    matchLabels:\\n      app: zabbix-web\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-web\\n        component: web-interface\\n    spec:\\n      containers:\\n      - name: zabbix-web\\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\\n        ports:\\n        - containerPort: 8080\\n          name: web\\n        - containerPort: 8443\\n          name: web-ssl\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Connection\\n        - name: ZBX_SERVER_HOST\\n          value: \\"zabbix-server-service\\"\\n        - name: ZBX_SERVER_PORT\\n          value: \\"10051\\"\\n        - name: ZBX_SERVER_NAME\\n          value: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n        # PHP Configuration\\n        - name: PHP_TZ\\n          value: \\"America/Sao_Paulo\\"\\n        - name: PHP_MEMORY_LIMIT\\n          value: \\"512M\\"\\n        - name: PHP_MAX_EXECUTION_TIME\\n          value: \\"600\\"\\n        - name: PHP_POST_MAX_SIZE\\n          value: \\"64M\\"\\n        - name: PHP_UPLOAD_MAX_FILESIZE\\n          value: \\"16M\\"\\n        - name: PHP_MAX_INPUT_TIME\\n          value: \\"600\\"\\n        # Security and Branding\\n        - name: ZBX_GUI_WARNING_MSG\\n          value: \\"Zabbix Corporate Monitoring - Ambiente Produ\\u00e7\\u00e3o\\"\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"200m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n        readinessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 15\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        livenessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 60\\n          periodSeconds: 30\\n          timeoutSeconds: 10\\n          failureThreshold: 3\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-web-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\nspec:\\n  type: NodePort\\n  ports:\\n  - port: 8080\\n    targetPort: 8080\\n    protocol: TCP\\n    name: web\\n    nodePort: 30080  - port: 8443\\n    targetPort: 8443\\n    protocol: TCP\\n    name: web-ssl\\n    nodePort: 30443  selector:\\n    app: zabbix-web\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:32:19,880 p=1004171 u=admviana n=ansible | <172.17.176.34> Failed to connect to the host via ssh: 
2025-08-25 10:32:19,885 p=1003785 u=admviana n=ansible | TASK [🌐 Deploy Zabbix Web Interface] *******************************************
2025-08-25 10:32:19,886 p=1003785 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\n    component: web-interface\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: zabbix-web\n  template:\n    metadata:\n      labels:\n        app: zabbix-web\n        component: web-interface\n    spec:\n      containers:\n      - name: zabbix-web\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\n        ports:\n        - containerPort: 8080\n          name: web\n        - containerPort: 8443\n          name: web-ssl\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Connection\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-service\"\n        - name: ZBX_SERVER_PORT\n          value: \"10051\"\n        - name: ZBX_SERVER_NAME\n          value: \"Zabbix 7.0 LTS Corporate Monitoring\"\n        # PHP Configuration\n        - name: PHP_TZ\n          value: \"America/Sao_Paulo\"\n        - name: PHP_MEMORY_LIMIT\n          value: \"512M\"\n        - name: PHP_MAX_EXECUTION_TIME\n          value: \"600\"\n        - name: PHP_POST_MAX_SIZE\n          value: \"64M\"\n        - name: PHP_UPLOAD_MAX_FILESIZE\n          value: \"16M\"\n        - name: PHP_MAX_INPUT_TIME\n          value: \"600\"\n        # Security and Branding\n        - name: ZBX_GUI_WARNING_MSG\n          value: \"Zabbix Corporate Monitoring - Ambiente Produção\"\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"200m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 30\n          timeoutSeconds: 10\n          failureThreshold: 3\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 8080\n    protocol: TCP\n    name: web\n    nodePort: 30080  - port: 8443\n    targetPort: 8443\n    protocol: TCP\n    name: web-ssl\n    nodePort: 30443  selector:\n    app: zabbix-web\nEOF\n",
    "delta": "0:00:00.504047",
    "end": "2025-08-25 10:32:19.850242",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\n    component: web-interface\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: zabbix-web\n  template:\n    metadata:\n      labels:\n        app: zabbix-web\n        component: web-interface\n    spec:\n      containers:\n      - name: zabbix-web\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\n        ports:\n        - containerPort: 8080\n          name: web\n        - containerPort: 8443\n          name: web-ssl\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Connection\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-service\"\n        - name: ZBX_SERVER_PORT\n          value: \"10051\"\n        - name: ZBX_SERVER_NAME\n          value: \"Zabbix 7.0 LTS Corporate Monitoring\"\n        # PHP Configuration\n        - name: PHP_TZ\n          value: \"America/Sao_Paulo\"\n        - name: PHP_MEMORY_LIMIT\n          value: \"512M\"\n        - name: PHP_MAX_EXECUTION_TIME\n          value: \"600\"\n        - name: PHP_POST_MAX_SIZE\n          value: \"64M\"\n        - name: PHP_UPLOAD_MAX_FILESIZE\n          value: \"16M\"\n        - name: PHP_MAX_INPUT_TIME\n          value: \"600\"\n        # Security and Branding\n        - name: ZBX_GUI_WARNING_MSG\n          value: \"Zabbix Corporate Monitoring - Ambiente Produção\"\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"200m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 30\n          timeoutSeconds: 10\n          failureThreshold: 3\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 8080\n    protocol: TCP\n    name: web\n    nodePort: 30080  - port: 8443\n    targetPort: 8443\n    protocol: TCP\n    name: web-ssl\n    nodePort: 30443  selector:\n    app: zabbix-web\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "msg": "non-zero return code",
    "rc": 1,
    "start": "2025-08-25 10:32:19.346195",
    "stderr": "error: error parsing STDIN: error converting YAML to JSON: yaml: line 15: mapping values are not allowed in this context",
    "stderr_lines": [
        "error: error parsing STDIN: error converting YAML to JSON: yaml: line 15: mapping values are not allowed in this context"
    ],
    "stdout": "deployment.apps/zabbix-web created",
    "stdout_lines": [
        "deployment.apps/zabbix-web created"
    ]
}
2025-08-25 10:32:19,887 p=1003785 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-25 10:32:19,888 p=1003785 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 10:32:19,888 p=1003785 u=admviana n=ansible | k8s-master                 : ok=26   changed=14   unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-25 10:40:16,971 p=1006694 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 10:40:18,777 p=1006731 u=admviana n=ansible | ansible-playbook 2.10.8
  config file = /home/admviana/zabbix_k8s/ansible/ansible.cfg
  configured module search path = ['/home/admviana/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Aug 15 2025, 14:32:43) [GCC 11.4.0]
2025-08-25 10:40:18,777 p=1006731 u=admviana n=ansible | Using /home/admviana/zabbix_k8s/ansible/ansible.cfg as config file
2025-08-25 10:40:18,782 p=1006731 u=admviana n=ansible | Parsed /home/admviana/zabbix_k8s/ansible/inventories/production/hosts.yml inventory source with yaml plugin
2025-08-25 10:40:18,913 p=1006731 u=admviana n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-08-25 10:40:18,913 p=1006731 u=admviana n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-08-25 10:40:18,913 p=1006731 u=admviana n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-08-25 10:40:18,913 p=1006731 u=admviana n=ansible | PLAYBOOK: deploy-zabbix.yml ****************************************************
2025-08-25 10:40:18,913 p=1006731 u=admviana n=ansible | 1 plays in playbooks/deploy-zabbix.yml
2025-08-25 10:40:18,914 p=1006731 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 10:40:18,923 p=1006731 u=admviana n=ansible | META: ran handlers
2025-08-25 10:40:18,953 p=1006731 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 10:40:18,953 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "🚀 Zabbix 7.0 LTS Corporate Edition",
        "📊 Target: 172.17.176.34",
        "🔧 Storage: longhorn",
        "🌐 Namespace: zabbix-monitoring",
        "💾 PostgreSQL: 15-alpine"
    ]
}
2025-08-25 10:40:18,972 p=1006731 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 10:40:19,095 p=1006738 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:19,095 p=1006738 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:19,096 p=1006738 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:19,096 p=1006738 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:19,948 p=1006738 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "namespace/zabbix-monitoring created", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:19.353755", "end": "2025-08-25 10:40:19.920079", "delta": "0:00:00.566324", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:19,952 p=1006731 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 10:40:19,952 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.566324",
    "end": "2025-08-25 10:40:19.920079",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create namespace zabbix-monitoring --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:19.353755",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring created",
    "stdout_lines": [
        "namespace/zabbix-monitoring created"
    ]
}
2025-08-25 10:40:19,981 p=1006755 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:19,982 p=1006755 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:19,982 p=1006755 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:19,982 p=1006755 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:20,385 p=1006755 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "stdout": "namespace/zabbix-monitoring labeled", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:20.229606", "end": "2025-08-25 10:40:20.364625", "delta": "0:00:00.135019", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:20,387 p=1006731 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 10:40:20,388 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
    "delta": "0:00:00.135019",
    "end": "2025-08-25 10:40:20.364625",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl label namespace zabbix-monitoring  name=zabbix-monitoring  purpose=corporate-monitoring  version=7.0  --overwrite\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:20.229606",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "namespace/zabbix-monitoring labeled",
    "stdout_lines": [
        "namespace/zabbix-monitoring labeled"
    ]
}
2025-08-25 10:40:20,418 p=1006758 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:20,418 p=1006758 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:20,418 p=1006758 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:20,419 p=1006758 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:21,184 p=1006758 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:20.652964", "end": "2025-08-25 10:40:21.162966", "delta": "0:00:00.510002", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix\\n  labels:\\n    app: zabbix\\n    component: storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\n---\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: longhorn-zabbix-db\\n  labels:\\n    app: zabbix\\n    component: database-storage\\nprovisioner: driver.longhorn.io\\nallowVolumeExpansion: true\\nreclaimPolicy: Retain\\nvolumeBindingMode: Immediate\\nparameters:\\n  numberOfReplicas: \\"2\\"\\n  staleReplicaTimeout: \\"20\\"\\n  fromBackup: \\"\\"\\n  fsType: \\"ext4\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:21,189 p=1006731 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 10:40:21,190 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "changed": false,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
    "delta": "0:00:00.510002",
    "end": "2025-08-25 10:40:21.162966",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix\n  labels:\n    app: zabbix\n    component: storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: longhorn-zabbix-db\n  labels:\n    app: zabbix\n    component: database-storage\nprovisioner: driver.longhorn.io\nallowVolumeExpansion: true\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\nparameters:\n  numberOfReplicas: \"2\"\n  staleReplicaTimeout: \"20\"\n  fromBackup: \"\"\n  fsType: \"ext4\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:20.652964",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "storageclass.storage.k8s.io/longhorn-zabbix unchanged\nstorageclass.storage.k8s.io/longhorn-zabbix-db unchanged",
    "stdout_lines": [
        "storageclass.storage.k8s.io/longhorn-zabbix unchanged",
        "storageclass.storage.k8s.io/longhorn-zabbix-db unchanged"
    ]
}
2025-08-25 10:40:21,220 p=1006771 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:21,220 p=1006771 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:21,220 p=1006771 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:21,220 p=1006771 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:22,042 p=1006771 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "stdout": "secret/zabbix-db-secret created", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:21.459286", "end": "2025-08-25 10:40:22.022736", "delta": "0:00:00.563450", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\\"zabbix\\"  --from-literal=postgres-password=\\"ZabbixCorpDB2025!\\"  --from-literal=postgres-root-password=\\"PostgresRoot2025!\\"  --from-literal=postgres-database=\\"zabbix\\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:22,048 p=1006731 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 10:40:22,048 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
    "delta": "0:00:00.563450",
    "end": "2025-08-25 10:40:22.022736",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl create secret generic zabbix-db-secret  --from-literal=postgres-user=\"zabbix\"  --from-literal=postgres-password=\"ZabbixCorpDB2025!\"  --from-literal=postgres-root-password=\"PostgresRoot2025!\"  --from-literal=postgres-database=\"zabbix\"  -n zabbix-monitoring  --dry-run=client -o yaml | /usr/bin/kubectl apply -f -\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:21.459286",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "secret/zabbix-db-secret created",
    "stdout_lines": [
        "secret/zabbix-db-secret created"
    ]
}
2025-08-25 10:40:22,080 p=1006788 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:22,080 p=1006788 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:22,080 p=1006788 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:22,081 p=1006788 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:22,831 p=1006788 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "stdout": "configmap/zabbix-config created", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:22.316356", "end": "2025-08-25 10:40:22.810525", "delta": "0:00:00.494169", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix\\n    component: config\\ndata:\\n  # Database Configuration\\n  postgres-database: \\"zabbix\\"\\n  \\n  # Zabbix Server Configuration\\n  ZBX_SERVER_HOST: \\"zabbix-server-service\\"\\n  ZBX_SERVER_PORT: \\"10051\\"\\n  ZBX_SERVER_NAME: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n  \\n  # PHP Configuration\\n  PHP_TZ: \\"America/Sao_Paulo\\"\\n  \\n  # Performance Settings\\n  ZBX_LISTENPORT: \\"10051\\"\\n  ZBX_DEBUGLEVEL: \\"3\\"\\n  ZBX_CACHESIZE: \\"512M\\"\\n  ZBX_HISTORYCACHESIZE: \\"1024M\\"\\n  ZBX_HISTORYINDEXCACHESIZE: \\"512M\\"\\n  ZBX_TRENDCACHESIZE: \\"512M\\"\\n  ZBX_VALUECACHESIZE: \\"1024M\\"\\n  ZBX_STARTPOLLERS: \\"25\\"\\n  ZBX_STARTTRAPPERS: \\"15\\"\\n  ZBX_STARTPINGERS: \\"8\\"\\n  ZBX_STARTDISCOVERERS: \\"5\\"\\n  ZBX_STARTHTTPPOLLERS: \\"8\\"\\n  ZBX_STARTDBSYNCERS: \\"6\\"\\n  ZBX_HOUSEKEEPINGFREQUENCY: \\"1\\"\\n  ZBX_MAXHOUSEKEEPERDELETE: \\"10000\\"\\n  ZBX_TIMEOUT: \\"30\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:22,836 p=1006731 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 10:40:22,836 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
    "delta": "0:00:00.494169",
    "end": "2025-08-25 10:40:22.810525",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix\n    component: config\ndata:\n  # Database Configuration\n  postgres-database: \"zabbix\"\n  \n  # Zabbix Server Configuration\n  ZBX_SERVER_HOST: \"zabbix-server-service\"\n  ZBX_SERVER_PORT: \"10051\"\n  ZBX_SERVER_NAME: \"Zabbix 7.0 LTS Corporate Monitoring\"\n  \n  # PHP Configuration\n  PHP_TZ: \"America/Sao_Paulo\"\n  \n  # Performance Settings\n  ZBX_LISTENPORT: \"10051\"\n  ZBX_DEBUGLEVEL: \"3\"\n  ZBX_CACHESIZE: \"512M\"\n  ZBX_HISTORYCACHESIZE: \"1024M\"\n  ZBX_HISTORYINDEXCACHESIZE: \"512M\"\n  ZBX_TRENDCACHESIZE: \"512M\"\n  ZBX_VALUECACHESIZE: \"1024M\"\n  ZBX_STARTPOLLERS: \"25\"\n  ZBX_STARTTRAPPERS: \"15\"\n  ZBX_STARTPINGERS: \"8\"\n  ZBX_STARTDISCOVERERS: \"5\"\n  ZBX_STARTHTTPPOLLERS: \"8\"\n  ZBX_STARTDBSYNCERS: \"6\"\n  ZBX_HOUSEKEEPINGFREQUENCY: \"1\"\n  ZBX_MAXHOUSEKEEPERDELETE: \"10000\"\n  ZBX_TIMEOUT: \"30\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:22.316356",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "configmap/zabbix-config created",
    "stdout_lines": [
        "configmap/zabbix-config created"
    ]
}
2025-08-25 10:40:22,862 p=1006731 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 10:40:22,863 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Namespace: zabbix-monitoring ✅",
        "Storage Classes: Created ✅",
        "Secrets: Configured ✅",
        "ConfigMaps: Applied ✅"
    ]
}
2025-08-25 10:40:22,885 p=1006731 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 10:40:22,919 p=1006805 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:22,919 p=1006805 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:22,920 p=1006805 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:22,920 p=1006805 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:23,905 p=1006805 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "stdout": "persistentvolumeclaim/postgresql-data-pvc created\\ndeployment.apps/postgresql created\\nservice/postgresql-service created", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:23.166931", "end": "2025-08-25 10:40:23.872139", "delta": "0:00:00.705208", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: postgresql-data-pvc\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  storageClassName: longhorn-zabbix-db\\n  resources:\\n    requests:\\n      storage: 20Gi\\n---\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: postgresql\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\n    version: \\"15-alpine\\"\\nspec:\\n  replicas: 1\\n  strategy:\\n    type: Recreate\\n  selector:\\n    matchLabels:\\n      app: postgresql\\n  template:\\n    metadata:\\n      labels:\\n        app: postgresql\\n        component: database\\n      annotations:\\n        # Configura\\u00e7\\u00f5es para Longhorn\\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\\n    spec:\\n      containers:\\n      - name: postgresql\\n        image: postgres:15-alpine\\n        ports:\\n        - containerPort: 5432\\n          name: postgres\\n        env:\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGDATA\\n          value: \\"/var/lib/postgresql/data/pgdata\\"\\n        # PostgreSQL Performance Tuning for Zabbix\\n        - name: POSTGRES_INITDB_ARGS\\n          value: \\"--auth-host=md5 --auth-local=trust\\"\\n        volumeMounts:\\n        - name: postgresql-data\\n          mountPath: /var/lib/postgresql/data\\n        # Removido mount de config para simplificar\\n        # - name: postgresql-config\\n        #   mountPath: /etc/postgresql/postgresql.conf\\n        #   subPath: postgresql.conf\\n        #   readOnly: true\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n        livenessProbe:\\n          exec:\\n            command:\\n            - /bin/sh\\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 30\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        readinessProbe:\\n          exec:\\n            command:\\n            - /bin/sh  \\n            - -c\\n            - pg_isready -U zabbix -d zabbix\\n          initialDelaySeconds: 5\\n          periodSeconds: 5\\n          timeoutSeconds: 3\\n          failureThreshold: 3\\n      volumes:\\n      # Usando Longhorn para persist\\u00eancia de dados\\n      - name: postgresql-data\\n        persistentVolumeClaim:\\n          claimName: postgresql-data-pvc\\n      # ConfigMap comentado para simplificar\\n      # - name: postgresql-config\\n      #   configMap:\\n      #     name: postgresql-config\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: postgresql-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: postgresql\\n    component: database\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 5432\\n    targetPort: 5432\\n    protocol: TCP\\n    name: postgres\\n  selector:\\n    app: postgresql\\n# ConfigMap comentado para simplificar deployment inicial\\n# ---\\n# apiVersion: v1\\n# kind: ConfigMap\\n# metadata:\\n#   name: postgresql-config\\n#   namespace: zabbix-monitoring\\n#   labels:\\n#     app: postgresql\\n#     component: config\\n# data:\\n#   postgresql.conf: |\\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\\n#     # Optimized for corporate monitoring workloads (300+ hosts)\\n#     \\n#     # Connection Settings\\n#     listen_addresses = \'*\'\\n#     port = 5432\\n#     max_connections = 100\\n    #     \\n    #     # Memory Settings (Tuned for Zabbix workload)\\n    #     shared_buffers = 256MB\\n    #     effective_cache_size = 1GB\\n    #     work_mem = 16MB\\n    #     maintenance_work_mem = 128MB\\n    #     \\n    #     # Write-Ahead Logging (WAL) \\n    #     wal_level = replica\\n    #     max_wal_size = 2GB\\n    #     min_wal_size = 80MB\\n    #     checkpoint_completion_target = 0.9\\n    #     \\n    #     # Query Planner\\n    #     random_page_cost = 1.1\\n    #     effective_io_concurrency = 200\\n    #     \\n    #     # Logging\\n    #     log_destination = \'stderr\'\\n    #     logging_collector = off\\n    #     log_min_messages = warning\\n    #     log_min_error_statement = error\\n    #     log_min_duration_statement = 5000\\n    #     \\n    #     # Autovacuum (Important for Zabbix)\\n    #     autovacuum = on\\n    #     autovacuum_max_workers = 3\\n    #     autovacuum_naptime = 1min\\n    #     autovacuum_vacuum_threshold = 50\\n    #     autovacuum_analyze_threshold = 50\\n    #     \\n    #     # Lock Management\\n    #     deadlock_timeout = 1s\\n    #     max_locks_per_transaction = 64\\n    #     \\n    #     # Background Writer\\n    #     bgwriter_delay = 200ms\\n    #     bgwriter_lru_maxpages = 100\\n    #     bgwriter_lru_multiplier = 2.0\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:23,910 p=1006731 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 10:40:23,911 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
    "delta": "0:00:00.705208",
    "end": "2025-08-25 10:40:23.872139",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgresql-data-pvc\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: longhorn-zabbix-db\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\n    version: \"15-alpine\"\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: postgresql\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        component: database\n      annotations:\n        # Configurações para Longhorn\n        volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:15-alpine\n        ports:\n        - containerPort: 5432\n          name: postgres\n        env:\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGDATA\n          value: \"/var/lib/postgresql/data/pgdata\"\n        # PostgreSQL Performance Tuning for Zabbix\n        - name: POSTGRES_INITDB_ARGS\n          value: \"--auth-host=md5 --auth-local=trust\"\n        volumeMounts:\n        - name: postgresql-data\n          mountPath: /var/lib/postgresql/data\n        # Removido mount de config para simplificar\n        # - name: postgresql-config\n        #   mountPath: /etc/postgresql/postgresql.conf\n        #   subPath: postgresql.conf\n        #   readOnly: true\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n        livenessProbe:\n          exec:\n            command:\n            - /bin/sh\n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          exec:\n            command:\n            - /bin/sh  \n            - -c\n            - pg_isready -U zabbix -d zabbix\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n      volumes:\n      # Usando Longhorn para persistência de dados\n      - name: postgresql-data\n        persistentVolumeClaim:\n          claimName: postgresql-data-pvc\n      # ConfigMap comentado para simplificar\n      # - name: postgresql-config\n      #   configMap:\n      #     name: postgresql-config\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: zabbix-monitoring\n  labels:\n    app: postgresql\n    component: database\nspec:\n  type: ClusterIP\n  ports:\n  - port: 5432\n    targetPort: 5432\n    protocol: TCP\n    name: postgres\n  selector:\n    app: postgresql\n# ConfigMap comentado para simplificar deployment inicial\n# ---\n# apiVersion: v1\n# kind: ConfigMap\n# metadata:\n#   name: postgresql-config\n#   namespace: zabbix-monitoring\n#   labels:\n#     app: postgresql\n#     component: config\n# data:\n#   postgresql.conf: |\n#     # PostgreSQL Configuration for Zabbix 7.0 LTS\n#     # Optimized for corporate monitoring workloads (300+ hosts)\n#     \n#     # Connection Settings\n#     listen_addresses = '*'\n#     port = 5432\n#     max_connections = 100\n    #     \n    #     # Memory Settings (Tuned for Zabbix workload)\n    #     shared_buffers = 256MB\n    #     effective_cache_size = 1GB\n    #     work_mem = 16MB\n    #     maintenance_work_mem = 128MB\n    #     \n    #     # Write-Ahead Logging (WAL) \n    #     wal_level = replica\n    #     max_wal_size = 2GB\n    #     min_wal_size = 80MB\n    #     checkpoint_completion_target = 0.9\n    #     \n    #     # Query Planner\n    #     random_page_cost = 1.1\n    #     effective_io_concurrency = 200\n    #     \n    #     # Logging\n    #     log_destination = 'stderr'\n    #     logging_collector = off\n    #     log_min_messages = warning\n    #     log_min_error_statement = error\n    #     log_min_duration_statement = 5000\n    #     \n    #     # Autovacuum (Important for Zabbix)\n    #     autovacuum = on\n    #     autovacuum_max_workers = 3\n    #     autovacuum_naptime = 1min\n    #     autovacuum_vacuum_threshold = 50\n    #     autovacuum_analyze_threshold = 50\n    #     \n    #     # Lock Management\n    #     deadlock_timeout = 1s\n    #     max_locks_per_transaction = 64\n    #     \n    #     # Background Writer\n    #     bgwriter_delay = 200ms\n    #     bgwriter_lru_maxpages = 100\n    #     bgwriter_lru_multiplier = 2.0\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:23.166931",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "persistentvolumeclaim/postgresql-data-pvc created\ndeployment.apps/postgresql created\nservice/postgresql-service created",
    "stdout_lines": [
        "persistentvolumeclaim/postgresql-data-pvc created",
        "deployment.apps/postgresql created",
        "service/postgresql-service created"
    ]
}
2025-08-25 10:40:23,943 p=1006809 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:23,943 p=1006809 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:23,943 p=1006809 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:23,944 p=1006809 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:29,593 p=1006809 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "timeout 180s bash -c \'\\n  echo \\"Waiting for PVC to be bound...\\"\\n  while true; do\\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\\"{.status.phase}\\" 2>/dev/null || echo \\"NotFound\\")\\n    echo \\"PVC Status: $STATUS\\"\\n    if [ \\"$STATUS\\" = \\"Bound\\" ]; then\\n      echo \\"\\u2705 PVC is bound!\\"\\n      exit 0\\n    elif [ \\"$STATUS\\" = \\"NotFound\\" ]; then\\n      echo \\"\\u26a0\\ufe0f  PVC not found, waiting...\\"\\n    else\\n      echo \\"\\u23f3 PVC status: $STATUS, waiting...\\"\\n    fi\\n    sleep 5\\n  done\\n\'\\n", "stdout": "Waiting for PVC to be bound...\\nPVC Status: Pending\\n\\u23f3 PVC status: Pending, waiting...\\nPVC Status: Bound\\n\\u2705 PVC is bound!", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:24.223214", "end": "2025-08-25 10:40:29.567787", "delta": "0:00:05.344573", "changed": true, "invocation": {"module_args": {"_raw_params": "timeout 180s bash -c \'\\n  echo \\"Waiting for PVC to be bound...\\"\\n  while true; do\\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\\"{.status.phase}\\" 2>/dev/null || echo \\"NotFound\\")\\n    echo \\"PVC Status: $STATUS\\"\\n    if [ \\"$STATUS\\" = \\"Bound\\" ]; then\\n      echo \\"\\u2705 PVC is bound!\\"\\n      exit 0\\n    elif [ \\"$STATUS\\" = \\"NotFound\\" ]; then\\n      echo \\"\\u26a0\\ufe0f  PVC not found, waiting...\\"\\n    else\\n      echo \\"\\u23f3 PVC status: $STATUS, waiting...\\"\\n    fi\\n    sleep 5\\n  done\\n\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:29,595 p=1006731 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 10:40:29,596 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "timeout 180s bash -c '\n  echo \"Waiting for PVC to be bound...\"\n  while true; do\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\"{.status.phase}\" 2>/dev/null || echo \"NotFound\")\n    echo \"PVC Status: $STATUS\"\n    if [ \"$STATUS\" = \"Bound\" ]; then\n      echo \"✅ PVC is bound!\"\n      exit 0\n    elif [ \"$STATUS\" = \"NotFound\" ]; then\n      echo \"⚠️  PVC not found, waiting...\"\n    else\n      echo \"⏳ PVC status: $STATUS, waiting...\"\n    fi\n    sleep 5\n  done\n'\n",
    "delta": "0:00:05.344573",
    "end": "2025-08-25 10:40:29.567787",
    "invocation": {
        "module_args": {
            "_raw_params": "timeout 180s bash -c '\n  echo \"Waiting for PVC to be bound...\"\n  while true; do\n    STATUS=$(/usr/bin/kubectl get pvc postgresql-data-pvc -n zabbix-monitoring -o jsonpath=\"{.status.phase}\" 2>/dev/null || echo \"NotFound\")\n    echo \"PVC Status: $STATUS\"\n    if [ \"$STATUS\" = \"Bound\" ]; then\n      echo \"✅ PVC is bound!\"\n      exit 0\n    elif [ \"$STATUS\" = \"NotFound\" ]; then\n      echo \"⚠️  PVC not found, waiting...\"\n    else\n      echo \"⏳ PVC status: $STATUS, waiting...\"\n    fi\n    sleep 5\n  done\n'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:24.223214",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Waiting for PVC to be bound...\nPVC Status: Pending\n⏳ PVC status: Pending, waiting...\nPVC Status: Bound\n✅ PVC is bound!",
    "stdout_lines": [
        "Waiting for PVC to be bound...",
        "PVC Status: Pending",
        "⏳ PVC status: Pending, waiting...",
        "PVC Status: Bound",
        "✅ PVC is bound!"
    ]
}
2025-08-25 10:40:29,609 p=1006731 u=admviana n=ansible | TASK [✅ PVC status verified] ***************************************************
2025-08-25 10:40:29,610 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "PVC postgresql-data-pvc is bound and ready for use"
}
2025-08-25 10:40:29,641 p=1006851 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:29,641 p=1006851 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:29,641 p=1006851 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:29,642 p=1006851 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:56,048 p=1006851 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\\n", "stdout": "deployment.apps/postgresql condition met", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:29.915562", "end": "2025-08-25 10:40:56.020071", "delta": "0:00:26.104509", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:56,053 p=1006731 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL deployment to be ready] ****************************
2025-08-25 10:40:56,053 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\n",
    "delta": "0:00:26.104509",
    "end": "2025-08-25 10:40:56.020071",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/postgresql -n zabbix-monitoring --timeout=600s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:29.915562",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/postgresql condition met",
    "stdout_lines": [
        "deployment.apps/postgresql condition met"
    ]
}
2025-08-25 10:40:56,084 p=1007070 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:56,085 p=1007070 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:56,085 p=1007070 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:56,085 p=1007070 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:56,497 p=1007070 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath=\'{.items[0].status.phase}\'\\n", "stdout": "Running", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:56.341889", "end": "2025-08-25 10:40:56.475668", "delta": "0:00:00.133779", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath=\'{.items[0].status.phase}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:56,502 p=1006731 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL pod status] ******************************************
2025-08-25 10:40:56,503 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath='{.items[0].status.phase}'\n",
    "delta": "0:00:00.133779",
    "end": "2025-08-25 10:40:56.475668",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get pods -l app=postgresql  -n zabbix-monitoring -o jsonpath='{.items[0].status.phase}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:56.341889",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Running",
    "stdout_lines": [
        "Running"
    ]
}
2025-08-25 10:40:56,535 p=1006731 u=admviana n=ansible | TASK [✅ PostgreSQL database deployed successfully] *****************************
2025-08-25 10:40:56,536 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL Status: Running ✅",
        "Service: postgresql-service.zabbix-monitoring.svc.cluster.local",
        "Port: 5432",
        "Database: zabbix",
        "Storage: 20Gi",
        "Volume Status: Healthy ✅"
    ]
}
2025-08-25 10:40:56,555 p=1006731 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database-init.yml for k8s-master
2025-08-25 10:40:56,590 p=1007079 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:56,590 p=1007079 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:56,590 p=1007079 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:56,591 p=1007079 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:40:57,364 p=1007079 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  name: zabbix-db-init\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-db-init\\n    component: database-init\\nspec:\\n  backoffLimit: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-db-init\\n        component: database-init\\n    spec:\\n      restartPolicy: Never\\n      containers:\\n      - name: zabbix-db-init\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        command:\\n        - /bin/bash\\n        - -c\\n        - |\\n          set -e\\n          echo \\"\\ud83d\\udd27 Starting Zabbix Database Schema Initialization...\\"\\n          \\n          # Wait for PostgreSQL to be ready\\n          echo \\"\\u23f3 Waiting for PostgreSQL to be ready...\\"\\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\\n            echo \\"PostgreSQL is unavailable - sleeping\\"\\n            sleep 2\\n          done\\n          echo \\"\\u2705 PostgreSQL is ready!\\"\\n          \\n          # Check if database is already initialized\\n          echo \\"\\ud83d\\udd0d Checking if database is already initialized...\\"\\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \\"SELECT COUNT(*) FROM information_schema.tables WHERE table_name=\'dbversion\';\\" | grep -q \\"1\\"; then\\n            echo \\"\\u2705 Database already initialized, skipping...\\"\\n            exit 0\\n          fi\\n          \\n          echo \\"\\ud83d\\ude80 Initializing Zabbix database schema...\\"\\n          \\n          # Initialize the database schema\\n          cd /usr/share/doc/zabbix-server-pgsql*/\\n          \\n          # Create schema\\n          echo \\"\\ud83d\\udccb Creating database schema...\\"\\n          if [ -f create.sql.gz ]; then\\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f create.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\\n          else\\n            echo \\"\\u274c Schema file not found!\\"\\n            exit 1\\n          fi\\n          \\n          # Insert initial data\\n          echo \\"\\ud83d\\udccb Inserting initial data...\\"\\n          if [ -f images.sql.gz ]; then\\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f images.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\\n          fi\\n          \\n          if [ -f data.sql.gz ]; then\\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f data.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\\n          fi\\n          \\n          echo \\"\\ud83c\\udf89 Zabbix database initialization completed successfully!\\"\\n          \\n          # Verify initialization\\n          echo \\"\\u2705 Verifying database initialization...\\"\\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \\"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\\" | tr -d \' \')\\n          echo \\"Database version: $DB_VERSION\\"\\n          \\n          if [ ! -z \\"$DB_VERSION\\" ]; then\\n            echo \\"\\u2705 Database successfully initialized with version $DB_VERSION\\"\\n          else\\n            echo \\"\\u274c Database initialization verification failed\\"\\n            exit 1\\n          fi\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGPASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"100m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\nEOF\\n", "stdout": "job.batch/zabbix-db-init created", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:56.841334", "end": "2025-08-25 10:40:57.338008", "delta": "0:00:00.496674", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  name: zabbix-db-init\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-db-init\\n    component: database-init\\nspec:\\n  backoffLimit: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-db-init\\n        component: database-init\\n    spec:\\n      restartPolicy: Never\\n      containers:\\n      - name: zabbix-db-init\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        command:\\n        - /bin/bash\\n        - -c\\n        - |\\n          set -e\\n          echo \\"\\ud83d\\udd27 Starting Zabbix Database Schema Initialization...\\"\\n          \\n          # Wait for PostgreSQL to be ready\\n          echo \\"\\u23f3 Waiting for PostgreSQL to be ready...\\"\\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\\n            echo \\"PostgreSQL is unavailable - sleeping\\"\\n            sleep 2\\n          done\\n          echo \\"\\u2705 PostgreSQL is ready!\\"\\n          \\n          # Check if database is already initialized\\n          echo \\"\\ud83d\\udd0d Checking if database is already initialized...\\"\\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \\"SELECT COUNT(*) FROM information_schema.tables WHERE table_name=\'dbversion\';\\" | grep -q \\"1\\"; then\\n            echo \\"\\u2705 Database already initialized, skipping...\\"\\n            exit 0\\n          fi\\n          \\n          echo \\"\\ud83d\\ude80 Initializing Zabbix database schema...\\"\\n          \\n          # Initialize the database schema\\n          cd /usr/share/doc/zabbix-server-pgsql*/\\n          \\n          # Create schema\\n          echo \\"\\ud83d\\udccb Creating database schema...\\"\\n          if [ -f create.sql.gz ]; then\\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f create.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\\n          else\\n            echo \\"\\u274c Schema file not found!\\"\\n            exit 1\\n          fi\\n          \\n          # Insert initial data\\n          echo \\"\\ud83d\\udccb Inserting initial data...\\"\\n          if [ -f images.sql.gz ]; then\\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f images.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\\n          fi\\n          \\n          if [ -f data.sql.gz ]; then\\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\\n          elif [ -f data.sql ]; then\\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\\n          fi\\n          \\n          echo \\"\\ud83c\\udf89 Zabbix database initialization completed successfully!\\"\\n          \\n          # Verify initialization\\n          echo \\"\\u2705 Verifying database initialization...\\"\\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \\"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\\" | tr -d \' \')\\n          echo \\"Database version: $DB_VERSION\\"\\n          \\n          if [ ! -z \\"$DB_VERSION\\" ]; then\\n            echo \\"\\u2705 Database successfully initialized with version $DB_VERSION\\"\\n          else\\n            echo \\"\\u274c Database initialization verification failed\\"\\n            exit 1\\n          fi\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        - name: PGPASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"100m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:40:57,369 p=1006731 u=admviana n=ansible | TASK [🗄️  Initialize Zabbix Database Schema] ***********************************
2025-08-25 10:40:57,370 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: zabbix-db-init\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-db-init\n    component: database-init\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      labels:\n        app: zabbix-db-init\n        component: database-init\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: zabbix-db-init\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        command:\n        - /bin/bash\n        - -c\n        - |\n          set -e\n          echo \"🔧 Starting Zabbix Database Schema Initialization...\"\n          \n          # Wait for PostgreSQL to be ready\n          echo \"⏳ Waiting for PostgreSQL to be ready...\"\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\n            echo \"PostgreSQL is unavailable - sleeping\"\n            sleep 2\n          done\n          echo \"✅ PostgreSQL is ready!\"\n          \n          # Check if database is already initialized\n          echo \"🔍 Checking if database is already initialized...\"\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_name='dbversion';\" | grep -q \"1\"; then\n            echo \"✅ Database already initialized, skipping...\"\n            exit 0\n          fi\n          \n          echo \"🚀 Initializing Zabbix database schema...\"\n          \n          # Initialize the database schema\n          cd /usr/share/doc/zabbix-server-pgsql*/\n          \n          # Create schema\n          echo \"📋 Creating database schema...\"\n          if [ -f create.sql.gz ]; then\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f create.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\n          else\n            echo \"❌ Schema file not found!\"\n            exit 1\n          fi\n          \n          # Insert initial data\n          echo \"📋 Inserting initial data...\"\n          if [ -f images.sql.gz ]; then\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f images.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\n          fi\n          \n          if [ -f data.sql.gz ]; then\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f data.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\n          fi\n          \n          echo \"🎉 Zabbix database initialization completed successfully!\"\n          \n          # Verify initialization\n          echo \"✅ Verifying database initialization...\"\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\" | tr -d ' ')\n          echo \"Database version: $DB_VERSION\"\n          \n          if [ ! -z \"$DB_VERSION\" ]; then\n            echo \"✅ Database successfully initialized with version $DB_VERSION\"\n          else\n            echo \"❌ Database initialization verification failed\"\n            exit 1\n          fi\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n      nodeSelector:\n        kubernetes.io/os: linux\nEOF\n",
    "delta": "0:00:00.496674",
    "end": "2025-08-25 10:40:57.338008",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: zabbix-db-init\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-db-init\n    component: database-init\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      labels:\n        app: zabbix-db-init\n        component: database-init\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: zabbix-db-init\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        command:\n        - /bin/bash\n        - -c\n        - |\n          set -e\n          echo \"🔧 Starting Zabbix Database Schema Initialization...\"\n          \n          # Wait for PostgreSQL to be ready\n          echo \"⏳ Waiting for PostgreSQL to be ready...\"\n          until pg_isready -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER; do\n            echo \"PostgreSQL is unavailable - sleeping\"\n            sleep 2\n          done\n          echo \"✅ PostgreSQL is ready!\"\n          \n          # Check if database is already initialized\n          echo \"🔍 Checking if database is already initialized...\"\n          if psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT COUNT(*) FROM information_schema.tables WHERE table_name='dbversion';\" | grep -q \"1\"; then\n            echo \"✅ Database already initialized, skipping...\"\n            exit 0\n          fi\n          \n          echo \"🚀 Initializing Zabbix database schema...\"\n          \n          # Initialize the database schema\n          cd /usr/share/doc/zabbix-server-pgsql*/\n          \n          # Create schema\n          echo \"📋 Creating database schema...\"\n          if [ -f create.sql.gz ]; then\n            gunzip -c create.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f create.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f create.sql\n          else\n            echo \"❌ Schema file not found!\"\n            exit 1\n          fi\n          \n          # Insert initial data\n          echo \"📋 Inserting initial data...\"\n          if [ -f images.sql.gz ]; then\n            gunzip -c images.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f images.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f images.sql\n          fi\n          \n          if [ -f data.sql.gz ]; then\n            gunzip -c data.sql.gz | psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB\n          elif [ -f data.sql ]; then\n            psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -f data.sql\n          fi\n          \n          echo \"🎉 Zabbix database initialization completed successfully!\"\n          \n          # Verify initialization\n          echo \"✅ Verifying database initialization...\"\n          DB_VERSION=$(psql -h $DB_SERVER_HOST -p $DB_SERVER_PORT -U $POSTGRES_USER -d $POSTGRES_DB -t -c \"SELECT mandatory FROM dbversion ORDER BY dbversionid DESC LIMIT 1;\" | tr -d ' ')\n          echo \"Database version: $DB_VERSION\"\n          \n          if [ ! -z \"$DB_VERSION\" ]; then\n            echo \"✅ Database successfully initialized with version $DB_VERSION\"\n          else\n            echo \"❌ Database initialization verification failed\"\n            exit 1\n          fi\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        - name: PGPASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n      nodeSelector:\n        kubernetes.io/os: linux\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:56.841334",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch/zabbix-db-init created",
    "stdout_lines": [
        "job.batch/zabbix-db-init created"
    ]
}
2025-08-25 10:40:57,401 p=1007096 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:40:57,401 p=1007096 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:40:57,401 p=1007096 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:40:57,402 p=1007096 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:01,144 p=1007096 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\\n", "stdout": "job.batch/zabbix-db-init condition met", "stderr": "", "rc": 0, "start": "2025-08-25 10:40:57.642799", "end": "2025-08-25 10:41:01.120256", "delta": "0:00:03.477457", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:01,148 p=1006731 u=admviana n=ansible | TASK [⏳ Wait for database initialization to complete] **************************
2025-08-25 10:41:01,149 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\n",
    "delta": "0:00:03.477457",
    "end": "2025-08-25 10:41:01.120256",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=complete  job/zabbix-db-init -n zabbix-monitoring --timeout=600s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:40:57.642799",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch/zabbix-db-init condition met",
    "stdout_lines": [
        "job.batch/zabbix-db-init condition met"
    ]
}
2025-08-25 10:41:01,178 p=1007116 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:01,179 p=1007116 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:01,179 p=1007116 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:01,180 p=1007116 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:01,573 p=1007116 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath=\'{.status.conditions[?(@.type==\\"Complete\\")].status}\'\\n", "stdout": "True", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:01.428942", "end": "2025-08-25 10:41:01.552490", "delta": "0:00:00.123548", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath=\'{.status.conditions[?(@.type==\\"Complete\\")].status}\'\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:01,578 p=1006731 u=admviana n=ansible | TASK [🔍 Verify database initialization job status] *****************************
2025-08-25 10:41:01,578 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath='{.status.conditions[?(@.type==\"Complete\")].status}'\n",
    "delta": "0:00:00.123548",
    "end": "2025-08-25 10:41:01.552490",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get job zabbix-db-init  -n zabbix-monitoring -o jsonpath='{.status.conditions[?(@.type==\"Complete\")].status}'\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:01.428942",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "True",
    "stdout_lines": [
        "True"
    ]
}
2025-08-25 10:41:01,594 p=1006731 u=admviana n=ansible | TASK [✅ Database schema initialization completed successfully] *****************
2025-08-25 10:41:01,595 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Database Initialization Status: Complete ✅",
        "Schema: Zabbix 7.0 LTS",
        "Tables: Created with initial data",
        "Ready for Zabbix Server startup"
    ]
}
2025-08-25 10:41:01,628 p=1007121 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:01,629 p=1007121 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:01,629 p=1007121 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:01,630 p=1007121 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:02,062 p=1007121 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\\n", "stdout": "job.batch \\"zabbix-db-init\\" deleted", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:01.885656", "end": "2025-08-25 10:41:02.023020", "delta": "0:00:00.137364", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:02,064 p=1006731 u=admviana n=ansible | TASK [🧹 Clean up database initialization job] **********************************
2025-08-25 10:41:02,065 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\n",
    "delta": "0:00:00.137364",
    "end": "2025-08-25 10:41:02.023020",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl delete job zabbix-db-init  -n zabbix-monitoring --ignore-not-found=true\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:01.885656",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "job.batch \"zabbix-db-init\" deleted",
    "stdout_lines": [
        "job.batch \"zabbix-db-init\" deleted"
    ]
}
2025-08-25 10:41:02,082 p=1006731 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-25 10:41:02,118 p=1007133 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:02,118 p=1007133 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:02,118 p=1007133 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:02,119 p=1007133 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:03,015 p=1007133 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-server\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\n    component: server\\nspec:\\n  replicas: 1\\n  selector:\\n    matchLabels:\\n      app: zabbix-server\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-server\\n        component: server\\n    spec:\\n      containers:\\n      - name: zabbix-server\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        ports:\\n        - containerPort: 10051\\n          name: zabbix-server\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Configuration\\n        - name: ZBX_CACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_CACHEUPDATEFREQUENCY\\n          value: \\"60\\"\\n        - name: ZBX_STARTDBSYNCERS\\n          value: \\"4\\"\\n        - name: ZBX_HISTORYCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_HISTORYINDEXCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_TRENDCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_VALUECACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_TIMEOUT\\n          value: \\"30\\"\\n        - name: ZBX_LOGSLOWQUERIES\\n          value: \\"3000\\"\\n        # Database Schema Initialization (Critical Fix)\\n        - name: ZBX_DBTIMEZONE\\n          value: \\"America/Sao_Paulo\\"\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-server-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 10051\\n    targetPort: 10051\\n    protocol: TCP\\n    name: zabbix-server\\n  selector:\\n    app: zabbix-server\\nEOF\\n", "stdout": "deployment.apps/zabbix-server created\\nservice/zabbix-server-service created", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:02.371539", "end": "2025-08-25 10:41:02.993624", "delta": "0:00:00.622085", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-server\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\n    component: server\\nspec:\\n  replicas: 1\\n  selector:\\n    matchLabels:\\n      app: zabbix-server\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-server\\n        component: server\\n    spec:\\n      containers:\\n      - name: zabbix-server\\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\\n        ports:\\n        - containerPort: 10051\\n          name: zabbix-server\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Configuration\\n        - name: ZBX_CACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_CACHEUPDATEFREQUENCY\\n          value: \\"60\\"\\n        - name: ZBX_STARTDBSYNCERS\\n          value: \\"4\\"\\n        - name: ZBX_HISTORYCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_HISTORYINDEXCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_TRENDCACHESIZE\\n          value: \\"128M\\"\\n        - name: ZBX_VALUECACHESIZE\\n          value: \\"256M\\"\\n        - name: ZBX_TIMEOUT\\n          value: \\"30\\"\\n        - name: ZBX_LOGSLOWQUERIES\\n          value: \\"3000\\"\\n        # Database Schema Initialization (Critical Fix)\\n        - name: ZBX_DBTIMEZONE\\n          value: \\"America/Sao_Paulo\\"\\n        resources:\\n          requests:\\n            memory: \\"1Gi\\"\\n            cpu: \\"500m\\"\\n          limits:\\n            memory: \\"2Gi\\"\\n            cpu: \\"1000m\\"\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-server-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-server\\nspec:\\n  type: ClusterIP\\n  ports:\\n  - port: 10051\\n    targetPort: 10051\\n    protocol: TCP\\n    name: zabbix-server\\n  selector:\\n    app: zabbix-server\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:03,018 p=1006731 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-25 10:41:03,019 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server\n  template:\n    metadata:\n      labels:\n        app: zabbix-server\n        component: server\n    spec:\n      containers:\n      - name: zabbix-server\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        ports:\n        - containerPort: 10051\n          name: zabbix-server\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Configuration\n        - name: ZBX_CACHESIZE\n          value: \"256M\"\n        - name: ZBX_CACHEUPDATEFREQUENCY\n          value: \"60\"\n        - name: ZBX_STARTDBSYNCERS\n          value: \"4\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_LOGSLOWQUERIES\n          value: \"3000\"\n        # Database Schema Initialization (Critical Fix)\n        - name: ZBX_DBTIMEZONE\n          value: \"America/Sao_Paulo\"\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\nspec:\n  type: ClusterIP\n  ports:\n  - port: 10051\n    targetPort: 10051\n    protocol: TCP\n    name: zabbix-server\n  selector:\n    app: zabbix-server\nEOF\n",
    "delta": "0:00:00.622085",
    "end": "2025-08-25 10:41:02.993624",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\n    component: server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server\n  template:\n    metadata:\n      labels:\n        app: zabbix-server\n        component: server\n    spec:\n      containers:\n      - name: zabbix-server\n        image: zabbix/zabbix-server-pgsql:7.0-alpine-latest\n        ports:\n        - containerPort: 10051\n          name: zabbix-server\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Configuration\n        - name: ZBX_CACHESIZE\n          value: \"256M\"\n        - name: ZBX_CACHEUPDATEFREQUENCY\n          value: \"60\"\n        - name: ZBX_STARTDBSYNCERS\n          value: \"4\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_LOGSLOWQUERIES\n          value: \"3000\"\n        # Database Schema Initialization (Critical Fix)\n        - name: ZBX_DBTIMEZONE\n          value: \"America/Sao_Paulo\"\n        resources:\n          requests:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"2Gi\"\n            cpu: \"1000m\"\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-server\nspec:\n  type: ClusterIP\n  ports:\n  - port: 10051\n    targetPort: 10051\n    protocol: TCP\n    name: zabbix-server\n  selector:\n    app: zabbix-server\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:02.371539",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-server created\nservice/zabbix-server-service created",
    "stdout_lines": [
        "deployment.apps/zabbix-server created",
        "service/zabbix-server-service created"
    ]
}
2025-08-25 10:41:03,048 p=1007142 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:03,048 p=1007142 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:03,048 p=1007142 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:03,049 p=1007142 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:03,904 p=1007142 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\\n", "stdout": "deployment.apps/zabbix-server condition met", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:03.315507", "end": "2025-08-25 10:41:03.879655", "delta": "0:00:00.564148", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:03,909 p=1006731 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-25 10:41:03,910 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\n",
    "delta": "0:00:00.564148",
    "end": "2025-08-25 10:41:03.879655",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=available  deployment/zabbix-server -n zabbix-monitoring --timeout=300s\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:03.315507",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-server condition met",
    "stdout_lines": [
        "deployment.apps/zabbix-server condition met"
    ]
}
2025-08-25 10:41:03,925 p=1006731 u=admviana n=ansible | TASK [✅ Zabbix Server deployed successfully] ***********************************
2025-08-25 10:41:03,925 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": "Zabbix Server Status: Running ✅"
}
2025-08-25 10:41:03,946 p=1006731 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-web.yml for k8s-master
2025-08-25 10:41:03,979 p=1007158 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:03,980 p=1007158 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:03,980 p=1007158 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:03,980 p=1007158 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:05,066 p=1007158 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-web\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\n    component: web-interface\\nspec:\\n  replicas: 2\\n  selector:\\n    matchLabels:\\n      app: zabbix-web\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-web\\n        component: web-interface\\n    spec:\\n      containers:\\n      - name: zabbix-web\\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\\n        ports:\\n        - containerPort: 8080\\n          name: web\\n        - containerPort: 8443\\n          name: web-ssl\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Connection\\n        - name: ZBX_SERVER_HOST\\n          value: \\"zabbix-server-service\\"\\n        - name: ZBX_SERVER_PORT\\n          value: \\"10051\\"\\n        - name: ZBX_SERVER_NAME\\n          value: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n        # PHP Configuration\\n        - name: PHP_TZ\\n          value: \\"America/Sao_Paulo\\"\\n        - name: PHP_MEMORY_LIMIT\\n          value: \\"512M\\"\\n        - name: PHP_MAX_EXECUTION_TIME\\n          value: \\"600\\"\\n        - name: PHP_POST_MAX_SIZE\\n          value: \\"64M\\"\\n        - name: PHP_UPLOAD_MAX_FILESIZE\\n          value: \\"16M\\"\\n        - name: PHP_MAX_INPUT_TIME\\n          value: \\"600\\"\\n        # Security and Branding\\n        - name: ZBX_GUI_WARNING_MSG\\n          value: \\"Zabbix Corporate Monitoring - Ambiente Produ\\u00e7\\u00e3o\\"\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"200m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n        readinessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 15\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        livenessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 60\\n          periodSeconds: 30\\n          timeoutSeconds: 10\\n          failureThreshold: 3\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-web-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\nspec:\\n  type: NodePort\\n  ports:\\n  - port: 8080\\n    targetPort: 8080\\n    protocol: TCP\\n    name: web\\n    nodePort: 30080\\n  - port: 8443\\n    targetPort: 8443\\n    protocol: TCP\\n    name: web-ssl\\n    nodePort: 30443\\n  selector:\\n    app: zabbix-web\\nEOF\\n", "stdout": "deployment.apps/zabbix-web created\\nservice/zabbix-web-service created", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:04.268926", "end": "2025-08-25 10:41:05.034829", "delta": "0:00:00.765903", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: zabbix-web\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\n    component: web-interface\\nspec:\\n  replicas: 2\\n  selector:\\n    matchLabels:\\n      app: zabbix-web\\n  template:\\n    metadata:\\n      labels:\\n        app: zabbix-web\\n        component: web-interface\\n    spec:\\n      containers:\\n      - name: zabbix-web\\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\\n        ports:\\n        - containerPort: 8080\\n          name: web\\n        - containerPort: 8443\\n          name: web-ssl\\n        env:\\n        # Database Configuration\\n        - name: DB_SERVER_HOST\\n          value: \\"postgresql-service\\"\\n        - name: DB_SERVER_PORT\\n          value: \\"5432\\"\\n        - name: POSTGRES_DB\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-database\\n        - name: POSTGRES_USER\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-user\\n        - name: POSTGRES_PASSWORD\\n          valueFrom:\\n            secretKeyRef:\\n              name: zabbix-db-secret\\n              key: postgres-password\\n        # Zabbix Server Connection\\n        - name: ZBX_SERVER_HOST\\n          value: \\"zabbix-server-service\\"\\n        - name: ZBX_SERVER_PORT\\n          value: \\"10051\\"\\n        - name: ZBX_SERVER_NAME\\n          value: \\"Zabbix 7.0 LTS Corporate Monitoring\\"\\n        # PHP Configuration\\n        - name: PHP_TZ\\n          value: \\"America/Sao_Paulo\\"\\n        - name: PHP_MEMORY_LIMIT\\n          value: \\"512M\\"\\n        - name: PHP_MAX_EXECUTION_TIME\\n          value: \\"600\\"\\n        - name: PHP_POST_MAX_SIZE\\n          value: \\"64M\\"\\n        - name: PHP_UPLOAD_MAX_FILESIZE\\n          value: \\"16M\\"\\n        - name: PHP_MAX_INPUT_TIME\\n          value: \\"600\\"\\n        # Security and Branding\\n        - name: ZBX_GUI_WARNING_MSG\\n          value: \\"Zabbix Corporate Monitoring - Ambiente Produ\\u00e7\\u00e3o\\"\\n        resources:\\n          requests:\\n            memory: \\"256Mi\\"\\n            cpu: \\"200m\\"\\n          limits:\\n            memory: \\"512Mi\\"\\n            cpu: \\"500m\\"\\n        readinessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 15\\n          periodSeconds: 10\\n          timeoutSeconds: 5\\n          failureThreshold: 3\\n        livenessProbe:\\n          httpGet:\\n            path: /\\n            port: 8080\\n          initialDelaySeconds: 60\\n          periodSeconds: 30\\n          timeoutSeconds: 10\\n          failureThreshold: 3\\n      nodeSelector:\\n        kubernetes.io/os: linux\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: zabbix-web-service\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-web\\nspec:\\n  type: NodePort\\n  ports:\\n  - port: 8080\\n    targetPort: 8080\\n    protocol: TCP\\n    name: web\\n    nodePort: 30080\\n  - port: 8443\\n    targetPort: 8443\\n    protocol: TCP\\n    name: web-ssl\\n    nodePort: 30443\\n  selector:\\n    app: zabbix-web\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:05,071 p=1006731 u=admviana n=ansible | TASK [🌐 Deploy Zabbix Web Interface] *******************************************
2025-08-25 10:41:05,072 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\n    component: web-interface\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: zabbix-web\n  template:\n    metadata:\n      labels:\n        app: zabbix-web\n        component: web-interface\n    spec:\n      containers:\n      - name: zabbix-web\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\n        ports:\n        - containerPort: 8080\n          name: web\n        - containerPort: 8443\n          name: web-ssl\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Connection\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-service\"\n        - name: ZBX_SERVER_PORT\n          value: \"10051\"\n        - name: ZBX_SERVER_NAME\n          value: \"Zabbix 7.0 LTS Corporate Monitoring\"\n        # PHP Configuration\n        - name: PHP_TZ\n          value: \"America/Sao_Paulo\"\n        - name: PHP_MEMORY_LIMIT\n          value: \"512M\"\n        - name: PHP_MAX_EXECUTION_TIME\n          value: \"600\"\n        - name: PHP_POST_MAX_SIZE\n          value: \"64M\"\n        - name: PHP_UPLOAD_MAX_FILESIZE\n          value: \"16M\"\n        - name: PHP_MAX_INPUT_TIME\n          value: \"600\"\n        # Security and Branding\n        - name: ZBX_GUI_WARNING_MSG\n          value: \"Zabbix Corporate Monitoring - Ambiente Produção\"\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"200m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 30\n          timeoutSeconds: 10\n          failureThreshold: 3\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 8080\n    protocol: TCP\n    name: web\n    nodePort: 30080\n  - port: 8443\n    targetPort: 8443\n    protocol: TCP\n    name: web-ssl\n    nodePort: 30443\n  selector:\n    app: zabbix-web\nEOF\n",
    "delta": "0:00:00.765903",
    "end": "2025-08-25 10:41:05.034829",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\n    component: web-interface\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: zabbix-web\n  template:\n    metadata:\n      labels:\n        app: zabbix-web\n        component: web-interface\n    spec:\n      containers:\n      - name: zabbix-web\n        image: zabbix/zabbix-web-nginx-pgsql:7.0-ubuntu-latest\n        ports:\n        - containerPort: 8080\n          name: web\n        - containerPort: 8443\n          name: web-ssl\n        env:\n        # Database Configuration\n        - name: DB_SERVER_HOST\n          value: \"postgresql-service\"\n        - name: DB_SERVER_PORT\n          value: \"5432\"\n        - name: POSTGRES_DB\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-database\n        - name: POSTGRES_USER\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-user\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: zabbix-db-secret\n              key: postgres-password\n        # Zabbix Server Connection\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-service\"\n        - name: ZBX_SERVER_PORT\n          value: \"10051\"\n        - name: ZBX_SERVER_NAME\n          value: \"Zabbix 7.0 LTS Corporate Monitoring\"\n        # PHP Configuration\n        - name: PHP_TZ\n          value: \"America/Sao_Paulo\"\n        - name: PHP_MEMORY_LIMIT\n          value: \"512M\"\n        - name: PHP_MAX_EXECUTION_TIME\n          value: \"600\"\n        - name: PHP_POST_MAX_SIZE\n          value: \"64M\"\n        - name: PHP_UPLOAD_MAX_FILESIZE\n          value: \"16M\"\n        - name: PHP_MAX_INPUT_TIME\n          value: \"600\"\n        # Security and Branding\n        - name: ZBX_GUI_WARNING_MSG\n          value: \"Zabbix Corporate Monitoring - Ambiente Produção\"\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"200m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 30\n          timeoutSeconds: 10\n          failureThreshold: 3\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-web\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 8080\n    protocol: TCP\n    name: web\n    nodePort: 30080\n  - port: 8443\n    targetPort: 8443\n    protocol: TCP\n    name: web-ssl\n    nodePort: 30443\n  selector:\n    app: zabbix-web\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:04.268926",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-web created\nservice/zabbix-web-service created",
    "stdout_lines": [
        "deployment.apps/zabbix-web created",
        "service/zabbix-web-service created"
    ]
}
2025-08-25 10:41:05,102 p=1007163 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:05,102 p=1007163 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:05,102 p=1007163 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:05,103 p=1007163 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:25,726 p=1007163 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl wait --for=condition=available deployment/zabbix-web -n zabbix-monitoring --timeout=300s", "stdout": "deployment.apps/zabbix-web condition met", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:05.357183", "end": "2025-08-25 10:41:25.702282", "delta": "0:00:20.345099", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl wait --for=condition=available deployment/zabbix-web -n zabbix-monitoring --timeout=300s", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:25,731 p=1006731 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Web Interface to be ready] *****************************
2025-08-25 10:41:25,731 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl wait --for=condition=available deployment/zabbix-web -n zabbix-monitoring --timeout=300s",
    "delta": "0:00:20.345099",
    "end": "2025-08-25 10:41:25.702282",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl wait --for=condition=available deployment/zabbix-web -n zabbix-monitoring --timeout=300s",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:05.357183",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "deployment.apps/zabbix-web condition met",
    "stdout_lines": [
        "deployment.apps/zabbix-web condition met"
    ]
}
2025-08-25 10:41:25,759 p=1007266 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:25,760 p=1007266 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:25,760 p=1007266 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:25,761 p=1007266 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:26,158 p=1007266 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get pods -n zabbix-monitoring -l app=zabbix-web -o jsonpath=\'{.items[*].status.phase}\'", "stdout": "Running Running", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:25.996257", "end": "2025-08-25 10:41:26.134041", "delta": "0:00:00.137784", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get pods -n zabbix-monitoring -l app=zabbix-web -o jsonpath=\'{.items[*].status.phase}\'", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:26,164 p=1006731 u=admviana n=ansible | TASK [🔍 Verify web interface pods are running] *********************************
2025-08-25 10:41:26,164 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get pods -n zabbix-monitoring -l app=zabbix-web -o jsonpath='{.items[*].status.phase}'",
    "delta": "0:00:00.137784",
    "end": "2025-08-25 10:41:26.134041",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get pods -n zabbix-monitoring -l app=zabbix-web -o jsonpath='{.items[*].status.phase}'",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:25.996257",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Running Running",
    "stdout_lines": [
        "Running Running"
    ]
}
2025-08-25 10:41:26,196 p=1006731 u=admviana n=ansible | TASK [✅ Zabbix Web Interface deployed successfully] ****************************
2025-08-25 10:41:26,197 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Zabbix Web Interface Status: Running ✅",
        "HTTP Access: http://172.17.176.34:30080",
        "HTTPS Access: https://172.17.176.34:30443",
        "Default Credentials: Admin / zabbix"
    ]
}
2025-08-25 10:41:26,214 p=1006731 u=admviana n=ansible | TASK [🔧 Web Interface deployment completed] ************************************
2025-08-25 10:41:26,215 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Web replicas: 2",
        "PHP timezone: America/Sao_Paulo",
        "Memory limit: 512M",
        "Ready for access via browser!"
    ]
}
2025-08-25 10:41:26,243 p=1006731 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/monitoring.yml for k8s-master
2025-08-25 10:41:26,285 p=1006731 u=admviana n=ansible | TASK [📊 Setup monitoring and observability] ************************************
2025-08-25 10:41:26,286 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Setting up monitoring components...",
        "Prometheus integration: True",
        "Alerting: Email=True, Slack=False"
    ]
}
2025-08-25 10:41:26,327 p=1007279 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:26,327 p=1007279 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:26,327 p=1007279 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:26,328 p=1007279 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:27,081 p=1007279 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-monitoring-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-monitoring\\n    component: observability\\ndata:\\n  prometheus.yml: |\\n    global:\\n      scrape_interval: 30s\\n    scrape_configs:\\n    - job_name: \'zabbix-server\'\\n      static_configs:\\n      - targets: [\'zabbix-server-service:10051\']\\n    - job_name: \'zabbix-web\'\\n      static_configs:\\n      - targets: [\'zabbix-web-service:8080\']\\n    - job_name: \'postgresql\'\\n      static_configs:\\n      - targets: [\'postgresql-service:5432\']\\n  \\n  alerting.yml: |\\n    email:\\n      enabled: True\\n      smtp_server: \\"\\"\\n      from: \\"zabbix@empresa.local\\"\\n    slack:\\n      enabled: False\\n      webhook_url: \\"\\"\\n    webhook:\\n      enabled: False\\n      url: \\"\\"\\nEOF\\n", "stdout": "configmap/zabbix-monitoring-config created", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:26.559840", "end": "2025-08-25 10:41:27.058613", "delta": "0:00:00.498773", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: zabbix-monitoring-config\\n  namespace: zabbix-monitoring\\n  labels:\\n    app: zabbix-monitoring\\n    component: observability\\ndata:\\n  prometheus.yml: |\\n    global:\\n      scrape_interval: 30s\\n    scrape_configs:\\n    - job_name: \'zabbix-server\'\\n      static_configs:\\n      - targets: [\'zabbix-server-service:10051\']\\n    - job_name: \'zabbix-web\'\\n      static_configs:\\n      - targets: [\'zabbix-web-service:8080\']\\n    - job_name: \'postgresql\'\\n      static_configs:\\n      - targets: [\'postgresql-service:5432\']\\n  \\n  alerting.yml: |\\n    email:\\n      enabled: True\\n      smtp_server: \\"\\"\\n      from: \\"zabbix@empresa.local\\"\\n    slack:\\n      enabled: False\\n      webhook_url: \\"\\"\\n    webhook:\\n      enabled: False\\n      url: \\"\\"\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:27,086 p=1006731 u=admviana n=ansible | TASK [🔍 Create monitoring ConfigMap] *******************************************
2025-08-25 10:41:27,087 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-monitoring-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-monitoring\n    component: observability\ndata:\n  prometheus.yml: |\n    global:\n      scrape_interval: 30s\n    scrape_configs:\n    - job_name: 'zabbix-server'\n      static_configs:\n      - targets: ['zabbix-server-service:10051']\n    - job_name: 'zabbix-web'\n      static_configs:\n      - targets: ['zabbix-web-service:8080']\n    - job_name: 'postgresql'\n      static_configs:\n      - targets: ['postgresql-service:5432']\n  \n  alerting.yml: |\n    email:\n      enabled: True\n      smtp_server: \"\"\n      from: \"zabbix@empresa.local\"\n    slack:\n      enabled: False\n      webhook_url: \"\"\n    webhook:\n      enabled: False\n      url: \"\"\nEOF\n",
    "delta": "0:00:00.498773",
    "end": "2025-08-25 10:41:27.058613",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: zabbix-monitoring-config\n  namespace: zabbix-monitoring\n  labels:\n    app: zabbix-monitoring\n    component: observability\ndata:\n  prometheus.yml: |\n    global:\n      scrape_interval: 30s\n    scrape_configs:\n    - job_name: 'zabbix-server'\n      static_configs:\n      - targets: ['zabbix-server-service:10051']\n    - job_name: 'zabbix-web'\n      static_configs:\n      - targets: ['zabbix-web-service:8080']\n    - job_name: 'postgresql'\n      static_configs:\n      - targets: ['postgresql-service:5432']\n  \n  alerting.yml: |\n    email:\n      enabled: True\n      smtp_server: \"\"\n      from: \"zabbix@empresa.local\"\n    slack:\n      enabled: False\n      webhook_url: \"\"\n    webhook:\n      enabled: False\n      url: \"\"\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:26.559840",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "configmap/zabbix-monitoring-config created",
    "stdout_lines": [
        "configmap/zabbix-monitoring-config created"
    ]
}
2025-08-25 10:41:27,122 p=1007301 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:27,123 p=1007301 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:27,123 p=1007301 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:27,123 p=1007301 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:27,853 p=1007301 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: networking.k8s.io/v1\\nkind: NetworkPolicy\\nmetadata:\\n  name: zabbix-network-policy\\n  namespace: zabbix-monitoring\\nspec:\\n  podSelector:\\n    matchLabels:\\n      app: zabbix-server\\n  policyTypes:\\n  - Ingress\\n  - Egress\\n  ingress:\\n  - from:\\n    - podSelector:\\n        matchLabels:\\n          app: zabbix-web\\n    ports:\\n    - protocol: TCP\\n      port: 10051\\n  egress:\\n  - to:\\n    - podSelector:\\n        matchLabels:\\n          app: postgresql\\n    ports:\\n    - protocol: TCP\\n      port: 5432\\n  - to: []\\n    ports:\\n    - protocol: TCP\\n      port: 53\\n    - protocol: UDP\\n      port: 53\\nEOF\\n", "stdout": "networkpolicy.networking.k8s.io/zabbix-network-policy created", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:27.354944", "end": "2025-08-25 10:41:27.829671", "delta": "0:00:00.474727", "changed": true, "invocation": {"module_args": {"_raw_params": "cat << \'EOF\' | /usr/bin/kubectl apply -f -\\napiVersion: networking.k8s.io/v1\\nkind: NetworkPolicy\\nmetadata:\\n  name: zabbix-network-policy\\n  namespace: zabbix-monitoring\\nspec:\\n  podSelector:\\n    matchLabels:\\n      app: zabbix-server\\n  policyTypes:\\n  - Ingress\\n  - Egress\\n  ingress:\\n  - from:\\n    - podSelector:\\n        matchLabels:\\n          app: zabbix-web\\n    ports:\\n    - protocol: TCP\\n      port: 10051\\n  egress:\\n  - to:\\n    - podSelector:\\n        matchLabels:\\n          app: postgresql\\n    ports:\\n    - protocol: TCP\\n      port: 5432\\n  - to: []\\n    ports:\\n    - protocol: TCP\\n      port: 53\\n    - protocol: UDP\\n      port: 53\\nEOF\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:27,857 p=1006731 u=admviana n=ansible | TASK [📊 Apply network policies (if enabled)] ***********************************
2025-08-25 10:41:27,858 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: zabbix-network-policy\n  namespace: zabbix-monitoring\nspec:\n  podSelector:\n    matchLabels:\n      app: zabbix-server\n  policyTypes:\n  - Ingress\n  - Egress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: zabbix-web\n    ports:\n    - protocol: TCP\n      port: 10051\n  egress:\n  - to:\n    - podSelector:\n        matchLabels:\n          app: postgresql\n    ports:\n    - protocol: TCP\n      port: 5432\n  - to: []\n    ports:\n    - protocol: TCP\n      port: 53\n    - protocol: UDP\n      port: 53\nEOF\n",
    "delta": "0:00:00.474727",
    "end": "2025-08-25 10:41:27.829671",
    "invocation": {
        "module_args": {
            "_raw_params": "cat << 'EOF' | /usr/bin/kubectl apply -f -\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: zabbix-network-policy\n  namespace: zabbix-monitoring\nspec:\n  podSelector:\n    matchLabels:\n      app: zabbix-server\n  policyTypes:\n  - Ingress\n  - Egress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: zabbix-web\n    ports:\n    - protocol: TCP\n      port: 10051\n  egress:\n  - to:\n    - podSelector:\n        matchLabels:\n          app: postgresql\n    ports:\n    - protocol: TCP\n      port: 5432\n  - to: []\n    ports:\n    - protocol: TCP\n      port: 53\n    - protocol: UDP\n      port: 53\nEOF\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:27.354944",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "networkpolicy.networking.k8s.io/zabbix-network-policy created",
    "stdout_lines": [
        "networkpolicy.networking.k8s.io/zabbix-network-policy created"
    ]
}
2025-08-25 10:41:27,892 p=1006731 u=admviana n=ansible | TASK [✅ Monitoring setup completed] ********************************************
2025-08-25 10:41:27,892 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "Monitoring ConfigMap: Created ✅",
        "Network Policies: Applied",
        "Prometheus metrics: Available on /metrics endpoints"
    ]
}
2025-08-25 10:41:27,914 p=1006731 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/verification.yml for k8s-master
2025-08-25 10:41:27,950 p=1007319 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:27,951 p=1007319 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:27,951 p=1007319 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:27,952 p=1007319 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:28,393 p=1007319 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl get pods -n zabbix-monitoring -o jsonpath=\'{.items[*].status.phase}\'", "stdout": "Running Running Running Running", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:28.191370", "end": "2025-08-25 10:41:28.372448", "delta": "0:00:00.181078", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl get pods -n zabbix-monitoring -o jsonpath=\'{.items[*].status.phase}\'", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:28,398 p=1006731 u=admviana n=ansible | TASK [🔍 Verify all pods are running] *******************************************
2025-08-25 10:41:28,398 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl get pods -n zabbix-monitoring -o jsonpath='{.items[*].status.phase}'",
    "delta": "0:00:00.181078",
    "end": "2025-08-25 10:41:28.372448",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl get pods -n zabbix-monitoring -o jsonpath='{.items[*].status.phase}'",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:28.191370",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Running Running Running Running",
    "stdout_lines": [
        "Running Running Running Running"
    ]
}
2025-08-25 10:41:28,430 p=1007349 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:28,431 p=1007349 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:28,431 p=1007349 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:28,431 p=1007349 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:28,950 p=1007349 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/postgresql -- pg_isready -U zabbix -d zabbix\\n", "stdout": "/var/run/postgresql:5432 - accepting connections", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:28.673617", "end": "2025-08-25 10:41:28.926854", "delta": "0:00:00.253237", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/postgresql -- pg_isready -U zabbix -d zabbix\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:28,955 p=1006731 u=admviana n=ansible | TASK [🗄️  Verify PostgreSQL connectivity] **************************************
2025-08-25 10:41:28,955 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "attempts": 1,
    "changed": true,
    "cmd": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/postgresql -- pg_isready -U zabbix -d zabbix\n",
    "delta": "0:00:00.253237",
    "end": "2025-08-25 10:41:28.926854",
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/postgresql -- pg_isready -U zabbix -d zabbix\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:28.673617",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "/var/run/postgresql:5432 - accepting connections",
    "stdout_lines": [
        "/var/run/postgresql:5432 - accepting connections"
    ]
}
2025-08-25 10:41:28,987 p=1007353 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:28,987 p=1007353 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:28,987 p=1007353 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:28,988 p=1007353 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:29,490 p=1007353 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-server -- zabbix_get -s localhost -p 10051 -k \\"agent.ping\\" || echo \\"Server responding\\"\\n", "stdout": "Server responding", "stderr": "zabbix_get [18]: Get value error: cannot connect to [[localhost]:10051]: connection error (POLLERR,POLLHUP)\\ncommand terminated with exit code 1", "rc": 0, "start": "2025-08-25 10:41:29.234832", "end": "2025-08-25 10:41:29.469663", "delta": "0:00:00.234831", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-server -- zabbix_get -s localhost -p 10051 -k \\"agent.ping\\" || echo \\"Server responding\\"\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:29,493 p=1006731 u=admviana n=ansible | TASK [⚡ Verify Zabbix Server connectivity] *************************************
2025-08-25 10:41:29,493 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-server -- zabbix_get -s localhost -p 10051 -k \"agent.ping\" || echo \"Server responding\"\n",
    "delta": "0:00:00.234831",
    "end": "2025-08-25 10:41:29.469663",
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-server -- zabbix_get -s localhost -p 10051 -k \"agent.ping\" || echo \"Server responding\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:29.234832",
    "stderr": "zabbix_get [18]: Get value error: cannot connect to [[localhost]:10051]: connection error (POLLERR,POLLHUP)\ncommand terminated with exit code 1",
    "stderr_lines": [
        "zabbix_get [18]: Get value error: cannot connect to [[localhost]:10051]: connection error (POLLERR,POLLHUP)",
        "command terminated with exit code 1"
    ],
    "stdout": "Server responding",
    "stdout_lines": [
        "Server responding"
    ]
}
2025-08-25 10:41:29,521 p=1007403 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:29,521 p=1007403 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:29,521 p=1007403 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:29,522 p=1007403 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:30,088 p=1007403 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-web -- curl -f -s http://localhost:8080/ | grep -i zabbix || echo \\"Web interface responding\\"\\n", "stdout": "\\t\\t<meta name=\\"Author\\" content=\\"Zabbix SIA\\" /><title>Warning [refreshed every 30 sec.]</title>\\t\\t<link rel=\\"icon\\" href=\\"favicon.ico\\">", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:29.780405", "end": "2025-08-25 10:41:30.067576", "delta": "0:00:00.287171", "changed": true, "invocation": {"module_args": {"_raw_params": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-web -- curl -f -s http://localhost:8080/ | grep -i zabbix || echo \\"Web interface responding\\"\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:30,091 p=1006731 u=admviana n=ansible | TASK [🌐 Verify Web Interface is accessible] ************************************
2025-08-25 10:41:30,091 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-web -- curl -f -s http://localhost:8080/ | grep -i zabbix || echo \"Web interface responding\"\n",
    "delta": "0:00:00.287171",
    "end": "2025-08-25 10:41:30.067576",
    "failed_when_result": false,
    "invocation": {
        "module_args": {
            "_raw_params": "/usr/bin/kubectl exec -n zabbix-monitoring deployment/zabbix-web -- curl -f -s http://localhost:8080/ | grep -i zabbix || echo \"Web interface responding\"\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:29.780405",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "\t\t<meta name=\"Author\" content=\"Zabbix SIA\" /><title>Warning [refreshed every 30 sec.]</title>\t\t<link rel=\"icon\" href=\"favicon.ico\">",
    "stdout_lines": [
        "\t\t<meta name=\"Author\" content=\"Zabbix SIA\" /><title>Warning [refreshed every 30 sec.]</title>\t\t<link rel=\"icon\" href=\"favicon.ico\">"
    ]
}
2025-08-25 10:41:30,127 p=1007423 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:30,128 p=1007423 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:30,128 p=1007423 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:30,129 p=1007423 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:30,916 p=1007423 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "echo \\"=== DEPLOYMENT SUMMARY ===\\"\\necho \\"Namespace: zabbix-monitoring\\"\\n/usr/bin/kubectl get pods -n zabbix-monitoring -o wide\\necho \\"\\"\\necho \\"Services:\\"\\n/usr/bin/kubectl get svc -n zabbix-monitoring\\necho \\"\\"\\necho \\"Persistent Volumes:\\"\\n/usr/bin/kubectl get pvc -n zabbix-monitoring\\necho \\"\\"\\necho \\"Storage Classes:\\"\\n/usr/bin/kubectl get storageclass | grep longhorn\\n", "stdout": "=== DEPLOYMENT SUMMARY ===\\nNamespace: zabbix-monitoring\\nNAME                             READY   STATUS    RESTARTS   AGE   IP            NODE                         NOMINATED NODE   READINESS GATES\\npostgresql-6b47974dd9-j68fm      1/1     Running   0          67s   10.244.2.85   k8s-cluster-viana-worker-1   <none>           <none>\\nzabbix-server-7d75b47c5b-p2dsb   1/1     Running   0          28s   10.244.1.69   k8s-cluster-viana-worker-2   <none>           <none>\\nzabbix-web-766d546574-2jqp8      1/1     Running   0          26s   10.244.1.70   k8s-cluster-viana-worker-2   <none>           <none>\\nzabbix-web-766d546574-lq4lx      1/1     Running   0          26s   10.244.2.86   k8s-cluster-viana-worker-1   <none>           <none>\\n\\nServices:\\nNAME                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                         AGE\\npostgresql-service      ClusterIP   10.105.233.140   <none>        5432/TCP                        67s\\nzabbix-server-service   ClusterIP   10.111.159.224   <none>        10051/TCP                       28s\\nzabbix-web-service      NodePort    10.105.139.41    <none>        8080:30080/TCP,8443:30443/TCP   26s\\n\\nPersistent Volumes:\\nNAME                  STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS         AGE\\npostgresql-data-pvc   Bound    pvc-f743e1d9-2022-4f86-b955-9a596fd925fc   20Gi       RWO            longhorn-zabbix-db   67s\\n\\nStorage Classes:\\nlonghorn (default)   driver.longhorn.io   Delete          Immediate           true                   10d\\nlonghorn-zabbix      driver.longhorn.io   Retain          Immediate           true                   2d20h\\nlonghorn-zabbix-db   driver.longhorn.io   Retain          Immediate           true                   2d20h", "stderr": "", "rc": 0, "start": "2025-08-25 10:41:30.386436", "end": "2025-08-25 10:41:30.894465", "delta": "0:00:00.508029", "changed": true, "invocation": {"module_args": {"_raw_params": "echo \\"=== DEPLOYMENT SUMMARY ===\\"\\necho \\"Namespace: zabbix-monitoring\\"\\n/usr/bin/kubectl get pods -n zabbix-monitoring -o wide\\necho \\"\\"\\necho \\"Services:\\"\\n/usr/bin/kubectl get svc -n zabbix-monitoring\\necho \\"\\"\\necho \\"Persistent Volumes:\\"\\n/usr/bin/kubectl get pvc -n zabbix-monitoring\\necho \\"\\"\\necho \\"Storage Classes:\\"\\n/usr/bin/kubectl get storageclass | grep longhorn\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:30,918 p=1006731 u=admviana n=ansible | TASK [📊 Get deployment summary] ************************************************
2025-08-25 10:41:30,919 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "echo \"=== DEPLOYMENT SUMMARY ===\"\necho \"Namespace: zabbix-monitoring\"\n/usr/bin/kubectl get pods -n zabbix-monitoring -o wide\necho \"\"\necho \"Services:\"\n/usr/bin/kubectl get svc -n zabbix-monitoring\necho \"\"\necho \"Persistent Volumes:\"\n/usr/bin/kubectl get pvc -n zabbix-monitoring\necho \"\"\necho \"Storage Classes:\"\n/usr/bin/kubectl get storageclass | grep longhorn\n",
    "delta": "0:00:00.508029",
    "end": "2025-08-25 10:41:30.894465",
    "invocation": {
        "module_args": {
            "_raw_params": "echo \"=== DEPLOYMENT SUMMARY ===\"\necho \"Namespace: zabbix-monitoring\"\n/usr/bin/kubectl get pods -n zabbix-monitoring -o wide\necho \"\"\necho \"Services:\"\n/usr/bin/kubectl get svc -n zabbix-monitoring\necho \"\"\necho \"Persistent Volumes:\"\n/usr/bin/kubectl get pvc -n zabbix-monitoring\necho \"\"\necho \"Storage Classes:\"\n/usr/bin/kubectl get storageclass | grep longhorn\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:30.386436",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "=== DEPLOYMENT SUMMARY ===\nNamespace: zabbix-monitoring\nNAME                             READY   STATUS    RESTARTS   AGE   IP            NODE                         NOMINATED NODE   READINESS GATES\npostgresql-6b47974dd9-j68fm      1/1     Running   0          67s   10.244.2.85   k8s-cluster-viana-worker-1   <none>           <none>\nzabbix-server-7d75b47c5b-p2dsb   1/1     Running   0          28s   10.244.1.69   k8s-cluster-viana-worker-2   <none>           <none>\nzabbix-web-766d546574-2jqp8      1/1     Running   0          26s   10.244.1.70   k8s-cluster-viana-worker-2   <none>           <none>\nzabbix-web-766d546574-lq4lx      1/1     Running   0          26s   10.244.2.86   k8s-cluster-viana-worker-1   <none>           <none>\n\nServices:\nNAME                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                         AGE\npostgresql-service      ClusterIP   10.105.233.140   <none>        5432/TCP                        67s\nzabbix-server-service   ClusterIP   10.111.159.224   <none>        10051/TCP                       28s\nzabbix-web-service      NodePort    10.105.139.41    <none>        8080:30080/TCP,8443:30443/TCP   26s\n\nPersistent Volumes:\nNAME                  STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS         AGE\npostgresql-data-pvc   Bound    pvc-f743e1d9-2022-4f86-b955-9a596fd925fc   20Gi       RWO            longhorn-zabbix-db   67s\n\nStorage Classes:\nlonghorn (default)   driver.longhorn.io   Delete          Immediate           true                   10d\nlonghorn-zabbix      driver.longhorn.io   Retain          Immediate           true                   2d20h\nlonghorn-zabbix-db   driver.longhorn.io   Retain          Immediate           true                   2d20h",
    "stdout_lines": [
        "=== DEPLOYMENT SUMMARY ===",
        "Namespace: zabbix-monitoring",
        "NAME                             READY   STATUS    RESTARTS   AGE   IP            NODE                         NOMINATED NODE   READINESS GATES",
        "postgresql-6b47974dd9-j68fm      1/1     Running   0          67s   10.244.2.85   k8s-cluster-viana-worker-1   <none>           <none>",
        "zabbix-server-7d75b47c5b-p2dsb   1/1     Running   0          28s   10.244.1.69   k8s-cluster-viana-worker-2   <none>           <none>",
        "zabbix-web-766d546574-2jqp8      1/1     Running   0          26s   10.244.1.70   k8s-cluster-viana-worker-2   <none>           <none>",
        "zabbix-web-766d546574-lq4lx      1/1     Running   0          26s   10.244.2.86   k8s-cluster-viana-worker-1   <none>           <none>",
        "",
        "Services:",
        "NAME                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                         AGE",
        "postgresql-service      ClusterIP   10.105.233.140   <none>        5432/TCP                        67s",
        "zabbix-server-service   ClusterIP   10.111.159.224   <none>        10051/TCP                       28s",
        "zabbix-web-service      NodePort    10.105.139.41    <none>        8080:30080/TCP,8443:30443/TCP   26s",
        "",
        "Persistent Volumes:",
        "NAME                  STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS         AGE",
        "postgresql-data-pvc   Bound    pvc-f743e1d9-2022-4f86-b955-9a596fd925fc   20Gi       RWO            longhorn-zabbix-db   67s",
        "",
        "Storage Classes:",
        "longhorn (default)   driver.longhorn.io   Delete          Immediate           true                   10d",
        "longhorn-zabbix      driver.longhorn.io   Retain          Immediate           true                   2d20h",
        "longhorn-zabbix-db   driver.longhorn.io   Retain          Immediate           true                   2d20h"
    ]
}
2025-08-25 10:41:30,953 p=1006731 u=admviana n=ansible | TASK [📋 Display deployment summary] ********************************************
2025-08-25 10:41:30,954 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "=== DEPLOYMENT SUMMARY ===",
        "Namespace: zabbix-monitoring",
        "NAME                             READY   STATUS    RESTARTS   AGE   IP            NODE                         NOMINATED NODE   READINESS GATES",
        "postgresql-6b47974dd9-j68fm      1/1     Running   0          67s   10.244.2.85   k8s-cluster-viana-worker-1   <none>           <none>",
        "zabbix-server-7d75b47c5b-p2dsb   1/1     Running   0          28s   10.244.1.69   k8s-cluster-viana-worker-2   <none>           <none>",
        "zabbix-web-766d546574-2jqp8      1/1     Running   0          26s   10.244.1.70   k8s-cluster-viana-worker-2   <none>           <none>",
        "zabbix-web-766d546574-lq4lx      1/1     Running   0          26s   10.244.2.86   k8s-cluster-viana-worker-1   <none>           <none>",
        "",
        "Services:",
        "NAME                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                         AGE",
        "postgresql-service      ClusterIP   10.105.233.140   <none>        5432/TCP                        67s",
        "zabbix-server-service   ClusterIP   10.111.159.224   <none>        10051/TCP                       28s",
        "zabbix-web-service      NodePort    10.105.139.41    <none>        8080:30080/TCP,8443:30443/TCP   26s",
        "",
        "Persistent Volumes:",
        "NAME                  STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS         AGE",
        "postgresql-data-pvc   Bound    pvc-f743e1d9-2022-4f86-b955-9a596fd925fc   20Gi       RWO            longhorn-zabbix-db   67s",
        "",
        "Storage Classes:",
        "longhorn (default)   driver.longhorn.io   Delete          Immediate           true                   10d",
        "longhorn-zabbix      driver.longhorn.io   Retain          Immediate           true                   2d20h",
        "longhorn-zabbix-db   driver.longhorn.io   Retain          Immediate           true                   2d20h"
    ]
}
2025-08-25 10:41:30,993 p=1007433 u=admviana n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-08-25 10:41:30,994 p=1007433 u=admviana n=ansible | Pipelining is enabled.
2025-08-25 10:41:30,994 p=1007433 u=admviana n=ansible | <172.17.176.34> ESTABLISH SSH CONNECTION FOR USER: admviana
2025-08-25 10:41:30,995 p=1007433 u=admviana n=ansible | <172.17.176.34> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o 'IdentityFile="/home/admviana/.ssh/k8s-cluster-key"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="admviana"' -o ConnectTimeout=30 -o StrictHostKeyChecking=no -o ControlPath=/home/admviana/.ansible/cp/%h-%p-%r 172.17.176.34 '/bin/sh -c '"'"'/usr/bin/python3 && sleep 0'"'"''
2025-08-25 10:41:31,606 p=1007433 u=admviana n=ansible | <172.17.176.34> (0, b'\n{"cmd": "ISSUES=\\"\\"\\n\\n# Check for failed pods\\nFAILED_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Failed -o name 2>/dev/null | wc -l)\\nif [ \\"$FAILED_PODS\\" -gt 0 ]; then\\n  ISSUES=\\"$ISSUES\\\\n\\u274c Found $FAILED_PODS failed pods\\"\\nfi\\n\\n# Check for pending pods\\nPENDING_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Pending -o name 2>/dev/null | wc -l)\\nif [ \\"$PENDING_PODS\\" -gt 0 ]; then\\n  ISSUES=\\"$ISSUES\\\\n\\u23f3 Found $PENDING_PODS pending pods\\"\\nfi\\n\\n# Check PVC status\\nUNBOUND_PVC=$(/usr/bin/kubectl get pvc -n zabbix-monitoring | grep -c \\"Pending\\" 2>/dev/null || echo \\"0\\")\\nif [ \\"$UNBOUND_PVC\\" -gt 0 ]; then\\n  ISSUES=\\"$ISSUES\\\\n\\ud83d\\udcbe Found $UNBOUND_PVC unbound PVCs\\"\\nfi\\n\\nif [ -z \\"$ISSUES\\" ]; then\\n  echo \\"\\u2705 No deployment issues found\\"\\nelse\\n  echo -e \\"\\u26a0\\ufe0f  Deployment issues found:$ISSUES\\"\\nfi\\n", "stdout": "\\u2705 No deployment issues found", "stderr": "/bin/sh: 17: [: Illegal number: 0\\n0", "rc": 0, "start": "2025-08-25 10:41:31.240567", "end": "2025-08-25 10:41:31.584986", "delta": "0:00:00.344419", "changed": true, "invocation": {"module_args": {"_raw_params": "ISSUES=\\"\\"\\n\\n# Check for failed pods\\nFAILED_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Failed -o name 2>/dev/null | wc -l)\\nif [ \\"$FAILED_PODS\\" -gt 0 ]; then\\n  ISSUES=\\"$ISSUES\\\\n\\u274c Found $FAILED_PODS failed pods\\"\\nfi\\n\\n# Check for pending pods\\nPENDING_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Pending -o name 2>/dev/null | wc -l)\\nif [ \\"$PENDING_PODS\\" -gt 0 ]; then\\n  ISSUES=\\"$ISSUES\\\\n\\u23f3 Found $PENDING_PODS pending pods\\"\\nfi\\n\\n# Check PVC status\\nUNBOUND_PVC=$(/usr/bin/kubectl get pvc -n zabbix-monitoring | grep -c \\"Pending\\" 2>/dev/null || echo \\"0\\")\\nif [ \\"$UNBOUND_PVC\\" -gt 0 ]; then\\n  ISSUES=\\"$ISSUES\\\\n\\ud83d\\udcbe Found $UNBOUND_PVC unbound PVCs\\"\\nfi\\n\\nif [ -z \\"$ISSUES\\" ]; then\\n  echo \\"\\u2705 No deployment issues found\\"\\nelse\\n  echo -e \\"\\u26a0\\ufe0f  Deployment issues found:$ISSUES\\"\\nfi\\n", "_uses_shell": true, "warn": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\n', b'')
2025-08-25 10:41:31,610 p=1006731 u=admviana n=ansible | TASK [🔍 Check for any deployment issues] ***************************************
2025-08-25 10:41:31,610 p=1006731 u=admviana n=ansible | changed: [k8s-master] => {
    "changed": true,
    "cmd": "ISSUES=\"\"\n\n# Check for failed pods\nFAILED_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Failed -o name 2>/dev/null | wc -l)\nif [ \"$FAILED_PODS\" -gt 0 ]; then\n  ISSUES=\"$ISSUES\\n❌ Found $FAILED_PODS failed pods\"\nfi\n\n# Check for pending pods\nPENDING_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Pending -o name 2>/dev/null | wc -l)\nif [ \"$PENDING_PODS\" -gt 0 ]; then\n  ISSUES=\"$ISSUES\\n⏳ Found $PENDING_PODS pending pods\"\nfi\n\n# Check PVC status\nUNBOUND_PVC=$(/usr/bin/kubectl get pvc -n zabbix-monitoring | grep -c \"Pending\" 2>/dev/null || echo \"0\")\nif [ \"$UNBOUND_PVC\" -gt 0 ]; then\n  ISSUES=\"$ISSUES\\n💾 Found $UNBOUND_PVC unbound PVCs\"\nfi\n\nif [ -z \"$ISSUES\" ]; then\n  echo \"✅ No deployment issues found\"\nelse\n  echo -e \"⚠️  Deployment issues found:$ISSUES\"\nfi\n",
    "delta": "0:00:00.344419",
    "end": "2025-08-25 10:41:31.584986",
    "invocation": {
        "module_args": {
            "_raw_params": "ISSUES=\"\"\n\n# Check for failed pods\nFAILED_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Failed -o name 2>/dev/null | wc -l)\nif [ \"$FAILED_PODS\" -gt 0 ]; then\n  ISSUES=\"$ISSUES\\n❌ Found $FAILED_PODS failed pods\"\nfi\n\n# Check for pending pods\nPENDING_PODS=$(/usr/bin/kubectl get pods -n zabbix-monitoring --field-selector=status.phase=Pending -o name 2>/dev/null | wc -l)\nif [ \"$PENDING_PODS\" -gt 0 ]; then\n  ISSUES=\"$ISSUES\\n⏳ Found $PENDING_PODS pending pods\"\nfi\n\n# Check PVC status\nUNBOUND_PVC=$(/usr/bin/kubectl get pvc -n zabbix-monitoring | grep -c \"Pending\" 2>/dev/null || echo \"0\")\nif [ \"$UNBOUND_PVC\" -gt 0 ]; then\n  ISSUES=\"$ISSUES\\n💾 Found $UNBOUND_PVC unbound PVCs\"\nfi\n\nif [ -z \"$ISSUES\" ]; then\n  echo \"✅ No deployment issues found\"\nelse\n  echo -e \"⚠️  Deployment issues found:$ISSUES\"\nfi\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": true
        }
    },
    "rc": 0,
    "start": "2025-08-25 10:41:31.240567",
    "stderr": "/bin/sh: 17: [: Illegal number: 0\n0",
    "stderr_lines": [
        "/bin/sh: 17: [: Illegal number: 0",
        "0"
    ],
    "stdout": "✅ No deployment issues found",
    "stdout_lines": [
        "✅ No deployment issues found"
    ]
}
2025-08-25 10:41:31,638 p=1006731 u=admviana n=ansible | TASK [📊 Final deployment status] ***********************************************
2025-08-25 10:41:31,639 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "✅ No deployment issues found"
    ]
}
2025-08-25 10:41:31,676 p=1006731 u=admviana n=ansible | TASK [✅ Deployment verification completed] *************************************
2025-08-25 10:41:31,676 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "PostgreSQL: ✅ Ready",
        "Zabbix Server: ✅ Responding",
        "Web Interface: ✅ Accessible",
        "Overall Status: ✅ Healthy"
    ]
}
2025-08-25 10:41:31,711 p=1006731 u=admviana n=ansible | TASK [🎉 Deployment completed successfully] *************************************
2025-08-25 10:41:31,712 p=1006731 u=admviana n=ansible | ok: [k8s-master] => {
    "msg": [
        "✅ Zabbix 7.0 LTS deployed successfully!",
        "🌐 Web Interface: http://172.17.176.34:30080",
        "🔐 HTTPS: https://172.17.176.34:30443",
        "👤 Default Login: Admin / zabbix",
        "📊 Database: PostgreSQL 15-alpine",
        "💾 Storage: 20Gi",
        "",
        "🚀 Ready for corporate monitoring!"
    ]
}
2025-08-25 10:41:31,715 p=1006731 u=admviana n=ansible | META: ran handlers
2025-08-25 10:41:31,718 p=1006731 u=admviana n=ansible | META: ran handlers
2025-08-25 10:41:31,720 p=1006731 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 10:41:31,720 p=1006731 u=admviana n=ansible | k8s-master                 : ok=47   changed=25   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-08-25 10:55:10,458 p=1012929 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 10:55:14,804 p=1012968 u=admviana n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected '-' indicator

The error appears to be in '/home/admviana/zabbix_k8s/ansible/playbooks/deploy-zabbix.yml': line 12, column 48, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          - ""
          - "🚀 Ready for corporate monitoring!"d for enterprise monitoring environments
                                               ^ here

2025-08-25 10:55:44,968 p=1013127 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 10:55:49,554 p=1013153 u=admviana n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected <document start>

The error appears to be in '/home/admviana/zabbix_k8s/ansible/playbooks/deploy-zabbix.yml': line 15, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: "🚀 Deploy Zabbix 7.0 LTS to Kubernetes"
^ here

2025-08-25 10:56:36,632 p=1013252 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 10:56:40,352 p=1013377 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 10:56:40,394 p=1013377 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 10:56:40,395 p=1013377 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:56:40,413 p=1013377 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 10:56:41,374 p=1013377 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 10:56:41,374 p=1013377 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:56:41,812 p=1013377 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 10:56:41,812 p=1013377 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:56:42,621 p=1013377 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 10:56:42,621 p=1013377 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:56:43,438 p=1013377 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 10:56:43,438 p=1013377 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:56:44,243 p=1013377 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 10:56:44,244 p=1013377 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:56:44,270 p=1013377 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 10:56:44,272 p=1013377 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:56:44,293 p=1013377 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 10:56:45,328 p=1013377 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 10:56:45,329 p=1013377 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:56:50,933 p=1013377 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 10:56:50,933 p=1013377 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:56:50,962 p=1013377 u=admviana n=ansible | TASK [✅ PostgreSQL deployment completed] ***************************************
2025-08-25 10:56:50,963 p=1013377 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'postgresql_pvc_result' is undefined\n\nThe error appears to be in '/home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml': line 224, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: \"✅ PostgreSQL deployment completed\"\n  ^ here\n"}
2025-08-25 10:56:50,965 p=1013377 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-25 10:56:50,965 p=1013377 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 10:56:50,965 p=1013377 u=admviana n=ansible | k8s-master                 : ok=11   changed=6    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-25 10:57:31,140 p=1013737 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 10:57:36,118 p=1013795 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 10:57:36,154 p=1013795 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 10:57:36,155 p=1013795 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:57:36,176 p=1013795 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 10:57:37,129 p=1013795 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 10:57:37,129 p=1013795 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:57:37,559 p=1013795 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 10:57:37,559 p=1013795 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:57:38,362 p=1013795 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 10:57:38,363 p=1013795 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:57:39,193 p=1013795 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 10:57:39,193 p=1013795 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:57:39,989 p=1013795 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 10:57:39,989 p=1013795 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:57:40,015 p=1013795 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 10:57:40,016 p=1013795 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:57:40,039 p=1013795 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 10:57:41,005 p=1013795 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 10:57:41,005 p=1013795 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:57:41,428 p=1013795 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 10:57:41,428 p=1013795 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 10:57:41,443 p=1013795 u=admviana n=ansible | TASK [✅ PostgreSQL deployment completed] ***************************************
2025-08-25 10:57:41,443 p=1013795 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 10:59:28,971 p=1013795 u=admviana n=ansible |  [ERROR]: User interrupted execution

2025-08-25 11:00:40,728 p=1015151 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 11:00:41,262 p=1015158 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 11:00:41,320 p=1015158 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 11:00:41,321 p=1015158 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:00:41,340 p=1015158 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 11:00:42,293 p=1015158 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 11:00:42,293 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:00:42,746 p=1015158 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 11:00:42,747 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:00:43,553 p=1015158 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 11:00:43,553 p=1015158 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:00:44,387 p=1015158 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 11:00:44,388 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:00:45,229 p=1015158 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 11:00:45,229 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:00:45,255 p=1015158 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 11:00:45,255 p=1015158 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:00:45,279 p=1015158 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 11:00:46,316 p=1015158 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 11:00:46,316 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:00:51,902 p=1015158 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 11:00:51,902 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:00:51,917 p=1015158 u=admviana n=ansible | TASK [✅ PostgreSQL deployment completed] ***************************************
2025-08-25 11:00:51,917 p=1015158 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:01:17,957 p=1015158 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL deployment to be ready] ****************************
2025-08-25 11:01:17,957 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:01:18,384 p=1015158 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL pod status] ******************************************
2025-08-25 11:01:18,384 p=1015158 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:01:18,411 p=1015158 u=admviana n=ansible | TASK [📊 PostgreSQL deployment status] ******************************************
2025-08-25 11:01:18,411 p=1015158 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'postgresql_result' is undefined\n\nThe error appears to be in '/home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml': line 249, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: \"📊 PostgreSQL deployment status\"\n  ^ here\n"}
2025-08-25 11:01:18,413 p=1015158 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-25 11:01:18,413 p=1015158 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 11:01:18,413 p=1015158 u=admviana n=ansible | k8s-master                 : ok=14   changed=8    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-25 11:02:45,037 p=1015928 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 11:02:45,567 p=1015953 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 11:02:45,608 p=1015953 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 11:02:45,609 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:45,628 p=1015953 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 11:02:46,560 p=1015953 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 11:02:46,560 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:46,989 p=1015953 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 11:02:46,989 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:47,788 p=1015953 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 11:02:47,788 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:48,692 p=1015953 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 11:02:48,692 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:49,505 p=1015953 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 11:02:49,505 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:49,533 p=1015953 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 11:02:49,533 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:49,557 p=1015953 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 11:02:50,506 p=1015953 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 11:02:50,506 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:50,935 p=1015953 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 11:02:50,935 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:50,948 p=1015953 u=admviana n=ansible | TASK [✅ PostgreSQL deployment completed] ***************************************
2025-08-25 11:02:50,948 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:51,459 p=1015953 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL deployment to be ready] ****************************
2025-08-25 11:02:51,459 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:51,874 p=1015953 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL pod status] ******************************************
2025-08-25 11:02:51,874 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:51,902 p=1015953 u=admviana n=ansible | TASK [📊 PostgreSQL deployment status] ******************************************
2025-08-25 11:02:51,902 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:51,923 p=1015953 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database-init.yml for k8s-master
2025-08-25 11:02:52,716 p=1015953 u=admviana n=ansible | TASK [🗄️  Initialize Zabbix Database Schema] ***********************************
2025-08-25 11:02:52,716 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:56,868 p=1015953 u=admviana n=ansible | TASK [⏳ Wait for database initialization to complete] **************************
2025-08-25 11:02:56,868 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:57,310 p=1015953 u=admviana n=ansible | TASK [🔍 Verify database initialization job status] *****************************
2025-08-25 11:02:57,310 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:57,323 p=1015953 u=admviana n=ansible | TASK [✅ Database initialization completed] *************************************
2025-08-25 11:02:57,323 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:57,782 p=1015953 u=admviana n=ansible | TASK [🧹 Clean up database initialization job] **********************************
2025-08-25 11:02:57,782 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:57,797 p=1015953 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-25 11:02:58,716 p=1015953 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-25 11:02:58,717 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:59,546 p=1015953 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-25 11:02:59,547 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:02:59,559 p=1015953 u=admviana n=ansible | TASK [✅ Zabbix Server deployment completed] ************************************
2025-08-25 11:02:59,559 p=1015953 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:02:59,582 p=1015953 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-web.yml for k8s-master
2025-08-25 11:03:00,624 p=1015953 u=admviana n=ansible | TASK [🌐 Deploy Zabbix Web Interface] *******************************************
2025-08-25 11:03:00,624 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:03:21,280 p=1015953 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Web Interface to be ready] *****************************
2025-08-25 11:03:21,281 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:03:21,711 p=1015953 u=admviana n=ansible | TASK [🔍 Verify web interface pods are running] *********************************
2025-08-25 11:03:21,712 p=1015953 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:03:21,741 p=1015953 u=admviana n=ansible | TASK [📊 Zabbix Web Interface deployment status] ********************************
2025-08-25 11:03:21,742 p=1015953 u=admviana n=ansible | fatal: [k8s-master]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'web_result' is undefined\n\nThe error appears to be in '/home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-web.yml': line 145, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: \"📊 Zabbix Web Interface deployment status\"\n  ^ here\n"}
2025-08-25 11:03:21,744 p=1015953 u=admviana n=ansible | 	to retry, use: --limit @/home/admviana/zabbix_k8s/ansible/.retry/deploy-zabbix.retry

2025-08-25 11:03:21,744 p=1015953 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 11:03:21,744 p=1015953 u=admviana n=ansible | k8s-master                 : ok=29   changed=15   unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-08-25 11:16:28,137 p=1022255 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-25 11:16:30,901 p=1022290 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-25 11:16:30,944 p=1022290 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-25 11:16:30,945 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:16:30,963 p=1022290 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-25 11:16:31,957 p=1022290 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-25 11:16:31,957 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:16:32,390 p=1022290 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-25 11:16:32,391 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:16:33,247 p=1022290 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-25 11:16:33,247 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:16:34,109 p=1022290 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-25 11:16:34,110 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:16:34,971 p=1022290 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-25 11:16:34,971 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:16:35,003 p=1022290 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-25 11:16:35,003 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:16:35,029 p=1022290 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-25 11:16:36,052 p=1022290 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-25 11:16:36,053 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:16:41,633 p=1022290 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-25 11:16:41,633 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:16:41,650 p=1022290 u=admviana n=ansible | TASK [✅ PostgreSQL deployment completed] ***************************************
2025-08-25 11:16:41,650 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:15,950 p=1022290 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL deployment to be ready] ****************************
2025-08-25 11:23:15,951 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:16,395 p=1022290 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL pod status] ******************************************
2025-08-25 11:23:16,395 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:16,423 p=1022290 u=admviana n=ansible | TASK [📊 PostgreSQL deployment status] ******************************************
2025-08-25 11:23:16,424 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:16,443 p=1022290 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database-init.yml for k8s-master
2025-08-25 11:23:17,202 p=1022290 u=admviana n=ansible | TASK [🗄️  Initialize Zabbix Database Schema] ***********************************
2025-08-25 11:23:17,202 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:22,086 p=1022290 u=admviana n=ansible | TASK [⏳ Wait for database initialization to complete] **************************
2025-08-25 11:23:22,087 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:22,524 p=1022290 u=admviana n=ansible | TASK [🔍 Verify database initialization job status] *****************************
2025-08-25 11:23:22,524 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:22,537 p=1022290 u=admviana n=ansible | TASK [✅ Database initialization completed] *************************************
2025-08-25 11:23:22,538 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:22,976 p=1022290 u=admviana n=ansible | TASK [🧹 Clean up database initialization job] **********************************
2025-08-25 11:23:22,976 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:22,994 p=1022290 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-25 11:23:23,954 p=1022290 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-25 11:23:23,954 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:24,792 p=1022290 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-25 11:23:24,792 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:24,805 p=1022290 u=admviana n=ansible | TASK [✅ Zabbix Server deployment completed] ************************************
2025-08-25 11:23:24,806 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:24,824 p=1022290 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-web.yml for k8s-master
2025-08-25 11:23:25,886 p=1022290 u=admviana n=ansible | TASK [🌐 Deploy Zabbix Web Interface] *******************************************
2025-08-25 11:23:25,886 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:46,561 p=1022290 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Web Interface to be ready] *****************************
2025-08-25 11:23:46,561 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:47,016 p=1022290 u=admviana n=ansible | TASK [🔍 Verify web interface pods are running] *********************************
2025-08-25 11:23:47,016 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:47,045 p=1022290 u=admviana n=ansible | TASK [📊 Zabbix Web Interface deployment status] ********************************
2025-08-25 11:23:47,045 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:47,059 p=1022290 u=admviana n=ansible | TASK [✅ Zabbix Web Interface deployment completed] *****************************
2025-08-25 11:23:47,059 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:47,081 p=1022290 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/monitoring.yml for k8s-master
2025-08-25 11:23:47,115 p=1022290 u=admviana n=ansible | TASK [📊 Setup monitoring and observability] ************************************
2025-08-25 11:23:47,115 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:47,974 p=1022290 u=admviana n=ansible | TASK [🔍 Create monitoring ConfigMap] *******************************************
2025-08-25 11:23:47,974 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:48,755 p=1022290 u=admviana n=ansible | TASK [📊 Apply network policies (if enabled)] ***********************************
2025-08-25 11:23:48,755 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:48,782 p=1022290 u=admviana n=ansible | TASK [✅ Monitoring setup completed] ********************************************
2025-08-25 11:23:48,782 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:48,803 p=1022290 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/verification.yml for k8s-master
2025-08-25 11:23:49,297 p=1022290 u=admviana n=ansible | TASK [🔍 Verify all pods are running] *******************************************
2025-08-25 11:23:49,297 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:49,824 p=1022290 u=admviana n=ansible | TASK [🗄️  Verify PostgreSQL connectivity] **************************************
2025-08-25 11:23:49,824 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:50,352 p=1022290 u=admviana n=ansible | TASK [⚡ Verify Zabbix Server connectivity] *************************************
2025-08-25 11:23:50,352 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:50,953 p=1022290 u=admviana n=ansible | TASK [🌐 Verify Web Interface is accessible] ************************************
2025-08-25 11:23:50,953 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:51,913 p=1022290 u=admviana n=ansible | TASK [📊 Get deployment summary] ************************************************
2025-08-25 11:23:51,913 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:51,943 p=1022290 u=admviana n=ansible | TASK [📋 Display deployment summary] ********************************************
2025-08-25 11:23:51,943 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:52,631 p=1022290 u=admviana n=ansible | TASK [🔍 Check for any deployment issues] ***************************************
2025-08-25 11:23:52,631 p=1022290 u=admviana n=ansible | changed: [k8s-master]
2025-08-25 11:23:52,659 p=1022290 u=admviana n=ansible | TASK [📊 Final deployment status] ***********************************************
2025-08-25 11:23:52,659 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:52,674 p=1022290 u=admviana n=ansible | TASK [✅ Deployment verification completed] *************************************
2025-08-25 11:23:52,674 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:52,705 p=1022290 u=admviana n=ansible | TASK [🎉 Deployment completed successfully] *************************************
2025-08-25 11:23:52,706 p=1022290 u=admviana n=ansible | ok: [k8s-master]
2025-08-25 11:23:52,711 p=1022290 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-25 11:23:52,711 p=1022290 u=admviana n=ansible | k8s-master                 : ok=47   changed=25   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-08-26 10:04:50,529 p=1312046 u=admviana n=ansible | k8s-master | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-08-26 10:04:51,048 p=1312070 u=admviana n=ansible | PLAY [🚀 Deploy Zabbix 7.0 LTS to Kubernetes] ***********************************
2025-08-26 10:04:51,087 p=1312070 u=admviana n=ansible | TASK [🎯 Starting Zabbix 7.0 LTS deployment] ************************************
2025-08-26 10:04:51,088 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:04:51,107 p=1312070 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/infrastructure.yml for k8s-master
2025-08-26 10:04:52,059 p=1312070 u=admviana n=ansible | TASK [🏗️  Create Zabbix namespace] *********************************************
2025-08-26 10:04:52,060 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:04:52,502 p=1312070 u=admviana n=ansible | TASK [🏷️  Label namespace for monitoring] **************************************
2025-08-26 10:04:52,503 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:04:53,335 p=1312070 u=admviana n=ansible | TASK [💾 Create storage classes (if needed)] ************************************
2025-08-26 10:04:53,336 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:04:54,448 p=1312070 u=admviana n=ansible | TASK [🔐 Create database secrets] ***********************************************
2025-08-26 10:04:54,448 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:04:55,289 p=1312070 u=admviana n=ansible | TASK [📋 Create Zabbix configuration ConfigMap] *********************************
2025-08-26 10:04:55,290 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:04:55,315 p=1312070 u=admviana n=ansible | TASK [✅ Infrastructure setup completed] ****************************************
2025-08-26 10:04:55,316 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:04:55,337 p=1312070 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database.yml for k8s-master
2025-08-26 10:04:56,310 p=1312070 u=admviana n=ansible | TASK [🗄️  Deploy PostgreSQL database] ******************************************
2025-08-26 10:04:56,311 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:04:56,754 p=1312070 u=admviana n=ansible | TASK [🔍 Wait for PVC to be bound (direct check with timeout)] ******************
2025-08-26 10:04:56,754 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:04:56,767 p=1312070 u=admviana n=ansible | TASK [✅ PostgreSQL deployment completed] ***************************************
2025-08-26 10:04:56,767 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:04:57,314 p=1312070 u=admviana n=ansible | TASK [⏳ Wait for PostgreSQL deployment to be ready] ****************************
2025-08-26 10:04:57,314 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:04:57,755 p=1312070 u=admviana n=ansible | TASK [🔍 Verify PostgreSQL pod status] ******************************************
2025-08-26 10:04:57,755 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:04:57,780 p=1312070 u=admviana n=ansible | TASK [📊 PostgreSQL deployment status] ******************************************
2025-08-26 10:04:57,780 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:04:57,801 p=1312070 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/database-init.yml for k8s-master
2025-08-26 10:04:58,604 p=1312070 u=admviana n=ansible | TASK [🗄️  Initialize Zabbix Database Schema] ***********************************
2025-08-26 10:04:58,605 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:02,842 p=1312070 u=admviana n=ansible | TASK [⏳ Wait for database initialization to complete] **************************
2025-08-26 10:05:02,842 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:03,278 p=1312070 u=admviana n=ansible | TASK [🔍 Verify database initialization job status] *****************************
2025-08-26 10:05:03,279 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:03,291 p=1312070 u=admviana n=ansible | TASK [✅ Database initialization completed] *************************************
2025-08-26 10:05:03,291 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:03,756 p=1312070 u=admviana n=ansible | TASK [🧹 Clean up database initialization job] **********************************
2025-08-26 10:05:03,756 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:03,773 p=1312070 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-server.yml for k8s-master
2025-08-26 10:05:04,719 p=1312070 u=admviana n=ansible | TASK [🖥️  Deploy Zabbix Server 7.0 LTS] ****************************************
2025-08-26 10:05:04,719 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:05,272 p=1312070 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Server to be ready] ************************************
2025-08-26 10:05:05,273 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:05,286 p=1312070 u=admviana n=ansible | TASK [✅ Zabbix Server deployment completed] ************************************
2025-08-26 10:05:05,286 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:05,304 p=1312070 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/zabbix-web.yml for k8s-master
2025-08-26 10:05:06,279 p=1312070 u=admviana n=ansible | TASK [🌐 Deploy Zabbix Web Interface] *******************************************
2025-08-26 10:05:06,280 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:06,817 p=1312070 u=admviana n=ansible | TASK [⏳ Wait for Zabbix Web Interface to be ready] *****************************
2025-08-26 10:05:06,817 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:07,305 p=1312070 u=admviana n=ansible | TASK [🔍 Verify web interface pods are running] *********************************
2025-08-26 10:05:07,306 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:07,331 p=1312070 u=admviana n=ansible | TASK [📊 Zabbix Web Interface deployment status] ********************************
2025-08-26 10:05:07,331 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:07,346 p=1312070 u=admviana n=ansible | TASK [✅ Zabbix Web Interface deployment completed] *****************************
2025-08-26 10:05:07,346 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:07,364 p=1312070 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/monitoring.yml for k8s-master
2025-08-26 10:05:07,402 p=1312070 u=admviana n=ansible | TASK [📊 Setup monitoring and observability] ************************************
2025-08-26 10:05:07,402 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:08,279 p=1312070 u=admviana n=ansible | TASK [🔍 Create monitoring ConfigMap] *******************************************
2025-08-26 10:05:08,279 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:09,058 p=1312070 u=admviana n=ansible | TASK [📊 Apply network policies (if enabled)] ***********************************
2025-08-26 10:05:09,058 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:09,084 p=1312070 u=admviana n=ansible | TASK [✅ Monitoring setup completed] ********************************************
2025-08-26 10:05:09,085 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:09,106 p=1312070 u=admviana n=ansible | included: /home/admviana/zabbix_k8s/ansible/playbooks/tasks/verification.yml for k8s-master
2025-08-26 10:05:09,554 p=1312070 u=admviana n=ansible | TASK [🔍 Verify all pods are running] *******************************************
2025-08-26 10:05:09,554 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:10,084 p=1312070 u=admviana n=ansible | TASK [🗄️  Verify PostgreSQL connectivity] **************************************
2025-08-26 10:05:10,084 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:10,609 p=1312070 u=admviana n=ansible | TASK [⚡ Verify Zabbix Server connectivity] *************************************
2025-08-26 10:05:10,609 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:11,199 p=1312070 u=admviana n=ansible | TASK [🌐 Verify Web Interface is accessible] ************************************
2025-08-26 10:05:11,199 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:11,999 p=1312070 u=admviana n=ansible | TASK [📊 Get deployment summary] ************************************************
2025-08-26 10:05:11,999 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:12,032 p=1312070 u=admviana n=ansible | TASK [📋 Display deployment summary] ********************************************
2025-08-26 10:05:12,032 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:12,706 p=1312070 u=admviana n=ansible | TASK [🔍 Check for any deployment issues] ***************************************
2025-08-26 10:05:12,707 p=1312070 u=admviana n=ansible | changed: [k8s-master]
2025-08-26 10:05:12,733 p=1312070 u=admviana n=ansible | TASK [📊 Final deployment status] ***********************************************
2025-08-26 10:05:12,733 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:12,750 p=1312070 u=admviana n=ansible | TASK [✅ Deployment verification completed] *************************************
2025-08-26 10:05:12,751 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:12,785 p=1312070 u=admviana n=ansible | TASK [🎉 Deployment completed successfully] *************************************
2025-08-26 10:05:12,785 p=1312070 u=admviana n=ansible | ok: [k8s-master]
2025-08-26 10:05:12,792 p=1312070 u=admviana n=ansible | PLAY RECAP *********************************************************************
2025-08-26 10:05:12,792 p=1312070 u=admviana n=ansible | k8s-master                 : ok=47   changed=22   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
